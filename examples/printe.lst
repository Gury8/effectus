mads 2.1.0 build 8 (23 Dec 19)
   388 					opt l+
   101
   102 				.print 'ZPAGE: ',fxptr,'..',zpend-1
   102 				ZPAGE: $0080..$00D7
   103
   104 				.print 'RTLIB: ',RTLIB,'..',*-1
   104 				RTLIB: $2038..$20DF
   105
   106 				; ------------------------------------------------------------
   107
   108 20E0			START
   109 20E0 BA				tsx
   110 20E1 8E AA 21			stx MAIN.@halt+1
   111
   112 					.ifdef fmulinit
   113 					fmulinit
   114 					eif
   115
   116 = 010A			VLEN	= VARDATASIZE-VARINITSIZE
   117 = 21C5			VADR	= DATAORIGIN+VARINITSIZE
   118
   119 					ift VADR > $BFFF
   120 					ert 'Invalid memory address range ',VADR
   121 					eli (VLEN>0) && (VLEN<=256)
   122 					ldx #256-VLEN
   123 					lda #0
   124 					sta:rne VADR+VLEN-256,x+
   125 					eli VLEN>0
   126 					@fill #VADR #VLEN #0
   126 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #0 @FILL.PTR2\ JSR @FILL
   126 20E4 A9 C5 85 88 A9 21 +  MWA #VADR @FILL.PTR1
   126 20EC A9 0A 85 8C A9 01 +  MWA #VLEN @FILL.PTR3
   126 20F4 A9 00 85 84		 MVA #0 @FILL.PTR2
   126 20F8 20 5B 20		 JSR @FILL
   127 					eif
   128
   129 					.ifdef MAIN.@DEFINES.ROMOFF
   130 					icl 'atari\romoff.asm'
   131 					.endif
   132
   133 20FB A9 CF 85 82 A9 22 + 	mwa #PROGRAMSTACK psptr
   134
   135 2103 A2 0F			ldx #$0f					; DOS II+/D ParamStr
   136 2105 BD 40 03 9D AD 21 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   137
   138 210E E8				inx						; X = 0
   139 210F 86 90			stx bp						; BP = 0
   140
   141 2111 8E 08 D2			stx audctl					; reset POKEY
   142 2114 A9 03			lda #3
   143 2116 8D 0F D2			sta skctl
   144
   145 2119 CA				dex						; X = 255
   146
   147 211A				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: printe.a65]
Source: printe.a65
   148
   149 211A			.local	MAIN						; PROCEDURE
   150
   151 211A 4C A6 21			jmp l_003F
   152
   153 				; ------------------------------------------------------------
   154
   155 211D			.local	SYSTEM						; UNIT
   156
   157 				; ------------------------------------------------------------
   158
   159 = 0101			__PORTB_BANKS	= $0101
   160 = 0648			M_PI_2	= $0648
   161 = 0192			D_PI_2	= $0192
   162 = 0004			D_PI_180	= $04
   163 = 0000			MGTIA	= $00
   164 = 0080			MVBXE	= $80
   165 = 0000			VBXE_XDLADR	= $00
   166 = 0100			VBXE_BCBADR	= $0100
   167 = 1000			VBXE_MAPADR	= $1000
   168 = 5000			VBXE_OVRADR	= $5000
   169 = B000			VBXE_WINDOW	= $B000
   170 = 0000			IDLI	= $00
   171 = 0001			IVBL	= $01
   172 = 00FE			CH_DELCHR	= $FE
   173 = 009B			CH_ENTER	= $9B
   174 = 001B			CH_ESC	= $1B
   175 = 001C			CH_CURS_UP	= $1C
   176 = 001D			CH_CURS_DOWN	= $1D
   177 = 001E			CH_CURS_LEFT	= $1E
   178 = 001F			CH_CURS_RIGHT	= $1F
   179 = 007F			CH_TAB	= $7F
   180 = 009B			CH_EOL	= $9B
   181 = 007D			CH_CLR	= $7D
   182 = 00FD			CH_BELL	= $FD
   183 = 007E			CH_DEL	= $7E
   184 = 009C			CH_DELLINE	= $9C
   185 = 009D			CH_INSLINE	= $9D
   186 = 0000			COLOR_BLACK	= $00
   187 = 000E			COLOR_WHITE	= $0E
   188 = 0032			COLOR_RED	= $32
   189 = 0096			COLOR_CYAN	= $96
   190 = 0068			COLOR_VIOLET	= $68
   191 = 00C4			COLOR_GREEN	= $C4
   192 = 0074			COLOR_BLUE	= $74
   193 = 00EE			COLOR_YELLOW	= $EE
   194 = 0028			COLOR_ORANGE	= $28
   195 = 00E4			COLOR_BROWN	= $E4
   196 = 003C			COLOR_LIGHTRED	= $3C
   197 = 0004			COLOR_GRAY1	= $04
   198 = 0006			COLOR_GRAY2	= $06
   199 = 000A			COLOR_GRAY3	= $0A
   200 = 00CC			COLOR_LIGHTGREEN	= $CC
   201 = 007C			COLOR_LIGHTBLUE	= $7C
   202 = 0004			FMOPENREAD	= $04
   203 = 0008			FMOPENWRITE	= $08
   204 = 0009			FMOPENAPPEND	= $09
   205 = 000C			FMOPENREADWRITE	= $0C
   206 = 21BF			SCREENWIDTH	= DATAORIGIN+$0000
   207 = 21C1			SCREENHEIGHT	= DATAORIGIN+$0002
   208 = 21C3			DATESEPARATOR	= DATAORIGIN+$0004
   209 = D014			TVSYSTEM	= $D014
   210 = 02C0			adr.PALETTE	= $02C0
   211 211D			.var PALETTE	= adr.PALETTE .word
   212 = D012			adr.HPALETTE	= $D012
   213 211D			.var HPALETTE	= adr.HPALETTE .word
   214 = 21C4			FILEMODE	= DATAORIGIN+$0005
   215 = 21C5			GRAPHMODE	= DATAORIGIN+$0006
   216 = 21C6			IORESULT	= DATAORIGIN+$0007
   217 = 21C7			EOLN	= DATAORIGIN+$0008
   218 = 21C8			RNDSEED	= DATAORIGIN+$0009
   219
   220 = 211D C0 02		PALETTE
   220 = 211F 12 D0		HPALETTE
   220 				.endl							; UNIT SYSTEM
   221
   222 				; ------------------------------------------------------------
   223
   224 2121			.local	ATARI						; UNIT
   225
   226 				; ------------------------------------------------------------
   227
   228 = 0012			RTCLOK	= $12
   229 = 004D			ATRACT	= $4D
   230 = 0052			LMARGIN	= $52
   231 = 0053			RMARGIN	= $53
   232 = 0054			ROWCRS	= $54
   233 = 0055			COLCRS	= $55
   234 = 0057			DINDEX	= $57
   235 = 0058			SAVMSC	= $58
   236 = 0062			PALNTS	= $62
   237 = 006A			RAMTOP	= $6A
   238 = 0200			VDSLST	= $0200
   239 = 0230			SDLSTL	= $0230
   240 = 0290			TXTROW	= $0290
   241 = 0291			TXTCOL	= $0291
   242 = 0293			TINDEX	= $0293
   243 = 0294			TXTMSC	= $0294
   244 = 022F			SDMCTL	= $022F
   245 = 026F			GPRIOR	= $026F
   246 = 02F0			CRSINH	= $02F0
   247 = 02F3			CHACT	= $02F3
   248 = 02F4			CHBAS	= $02F4
   249 = 02FC			CH	= $02FC
   250 = 02C0			PCOLR0	= $02C0
   251 = 02C1			PCOLR1	= $02C1
   252 = 02C2			PCOLR2	= $02C2
   253 = 02C3			PCOLR3	= $02C3
   254 = 02C4			COLOR0	= $02C4
   255 = 02C5			COLOR1	= $02C5
   256 = 02C6			COLOR2	= $02C6
   257 = 02C7			COLOR3	= $02C7
   258 = 02C8			COLOR4	= $02C8
   259 = 02C8			COLBAKS	= $02C8
   260 = D000			HPOSP0	= $D000
   261 = D001			HPOSP1	= $D001
   262 = D002			HPOSP2	= $D002
   263 = D003			HPOSP3	= $D003
   264 = D004			HPOSM0	= $D004
   265 = D005			HPOSM1	= $D005
   266 = D006			HPOSM2	= $D006
   267 = D007			HPOSM3	= $D007
   268 = D008			SIZEP0	= $D008
   269 = D009			SIZEP1	= $D009
   270 = D00A			SIZEP2	= $D00A
   271 = D00B			SIZEP3	= $D00B
   272 = D00C			SIZEM	= $D00C
   273 = D00D			GRAFP0	= $D00D
   274 = D00E			GRAFP1	= $D00E
   275 = D00F			GRAFP2	= $D00F
   276 = D010			GRAFP3	= $D010
   277 = D011			GRAFM	= $D011
   278 = D004			P0PF	= $D004
   279 = D014			PAL	= $D014
   280 = D012			COLPM0	= $D012
   281 = D013			COLPM1	= $D013
   282 = D014			COLPM2	= $D014
   283 = D015			COLPM3	= $D015
   284 = D016			COLPF0	= $D016
   285 = D017			COLPF1	= $D017
   286 = D018			COLPF2	= $D018
   287 = D019			COLPF3	= $D019
   288 = D01A			COLBK	= $D01A
   289 = D01B			PRIOR	= $D01B
   290 = D01D			GRACTL	= $D01D
   291 = D01E			HITCLR	= $D01E
   292 = D200			AUDF1	= $D200
   293 = D201			AUDC1	= $D201
   294 = D202			AUDF2	= $D202
   295 = D203			AUDC2	= $D203
   296 = D204			AUDF3	= $D204
   297 = D205			AUDC3	= $D205
   298 = D206			AUDF4	= $D206
   299 = D207			AUDC4	= $D207
   300 = D208			AUDCTL	= $D208
   301 = D20F			SKSTAT	= $D20F
   302 = D301			PORTB	= $D301
   303 = D400			DMACTL	= $D400
   304 = D401			CHACTL	= $D401
   305 = D402			DLISTL	= $D402
   306 = D404			HSCROL	= $D404
   307 = D405			VSCROL	= $D405
   308 = D407			PMBASE	= $D407
   309 = D409			CHBASE	= $D409
   310 = D40A			WSYNC	= $D40A
   311 = D40B			VCOUNT	= $D40B
   312 = D40C			PENH	= $D40C
   313 = D40D			PENV	= $D40D
   314 = D40E			NMIEN	= $D40E
   315
   316 				.endl							; UNIT ATARI
   317
   318 				; ------------------------------------------------------------
   319
   320 2121			.local	CRT						; UNIT
   321
   322 2121			.local	READKEY						; FUNCTION | ASSEMBLER
   323
   324 				; ---------------------  ASM Block 049  ---------------------
   325
   326 2121 8A 48			txa:pha
   327
   328 2123 20 38 20			@GetKey
   329
   330 2126 8D CB 21			sta Result
   331
   332 2129 68 AA			pla:tax
   333
   334 212B			@exit
   335
   336 				; ------------------------------------------------------------
   337
   338 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   339 				; as Pointer
   340
   341 212B E8				inx
   342 212C AD CB 21 95 98		mva RESULT :STACKORIGIN,x
   343
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					eif
   351
   352 				; ------------------------------------------------------------
   353
   354 = 21CB			RESULT	= DATAORIGIN+$000C
   355
   356 = 21CB			@VarData	= RESULT
   357 = 0001			@VarDataSize	= 1
   358
   359 2131 60				rts						; ret
   360 				.endl
   361
   362 				; ------------------------------------------------------------
   363
   364 = 21CA			TEXTATTR	= DATAORIGIN+$000B
   365 = D01F			CONSOL	= $D01F
   366 = 0000			CN_START_SELECT_OPTION	= $00
   367 = 0001			CN_SELECT_OPTION	= $01
   368 = 0002			CN_START_OPTION	= $02
   369 = 0003			CN_OPTION	= $03
   370 = 0004			CN_START_SELECT	= $04
   371 = 0005			CN_SELECT	= $05
   372 = 0006			CN_START	= $06
   373 = 0007			CN_NONE	= $07
   374 = 0000			BW40	= $00
   375 = 0001			CO40	= $01
   376 = 0002			BW80	= $02
   377 = 0003			CO80	= $03
   378 = 0007			MONO	= $07
   379 = 0001			C40	= $01
   380 = 0003			C80	= $03
   381 = 0000			BLACK	= $00
   382 = 0001			BLUE	= $01
   383 = 0002			GREEN	= $02
   384 = 0003			CYAN	= $03
   385 = 0004			RED	= $04
   386 = 0005			MAGENTA	= $05
   387 = 0006			BROWN	= $06
   388 = 0007			LIGHTGRAY	= $07
   389 = 0008			DARKGRAY	= $08
   390 = 0009			LIGHTBLUE	= $09
   391 = 000A			LIGHTGREEN	= $0A
   392 = 000B			LIGHTCYAN	= $0B
   393 = 000C			LIGHTRED	= $0C
   394 = 000D			LIGHTMAGENTA	= $0D
   395 = 000E			YELLOW	= $0E
   396 = 000F			WHITE	= $0F
   397 = 0080			BLINK	= $80
   398
   399 				.endl							; UNIT CRT
   400
   401 				; ------------------------------------------------------------
   402
   403 2132			.local	DOS						; UNIT
   404
   405 				; ------------------------------------------------------------
   406
   407 = D014			PALNTSC	= $D014
   408
   409 				.endl							; UNIT DOS
   410
   411 				; ------------------------------------------------------------
   412
   413 2132			.local	STRUTILS					; UNIT
   414
   415 				; ------------------------------------------------------------
   416
   417 				.endl							; UNIT STRUTILS
   418
   419 				; ------------------------------------------------------------
   420
   421 2132			.local	SYSUTILS					; UNIT
   422
   423 				; ------------------------------------------------------------
   424
   425 = 0001			FAREADONLY	= $01
   426 = 0002			FAHIDDEN	= $02
   427 = 0004			FASYSFILE	= $04
   428 = 0008			FAVOLUMEID	= $08
   429 = 0010			FADIRECTORY	= $10
   430 = 0020			FAARCHIVE	= $20
   431 = 003F			FAANYFILE	= $3F
   432
   433 				.endl							; UNIT SYSUTILS
   434
   435 				; ------------------------------------------------------------
   436
   437 2132			.local	CIO						; UNIT
   438
   439 2132			.local	GET						; FUNCTION | ASSEMBLER
   440
   441 				; ------------------------------------------------------------
   442
   443 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   444 				; as Pointer
   445 2132 B5 98 8D CC 21		mva :STACKORIGIN,x CHN
   446 2137 CA				dex
   447
   448 				; ---------------------  ASM Block 080  ---------------------
   449
   450 2138 8A 48			txa:pha
   451
   452 213A AD CC 21			lda chn
   453 213D 0A 0A 0A 0A			:4 asl @
   454 2141 AA				tax
   455
   456 2142 A9 07			lda #7		;get char command
   457 2144 9D 42 03			sta iccmd,x
   458
   459 2147 A9 00			lda #$00	;zero out the unused
   460 2149 9D 48 03			sta icbufl,x	;store in accumulator
   461 214C 9D 49 03			sta icbufh,x	;...after CIOV jump
   462
   463 214F				m@call	ciov
Macro: M@CALL [Source: rtl6502.asm]
    12 214F 20 56 E4				jsr CIOV
Source: printe.a65
   464
   465 2152 8C C6 21			sty MAIN.SYSTEM.IOResult
   466
   467 2155 8D CD 21			sta Result
   468
   469 2158 68 AA			pla:tax
   470
   471 215A			@exit
   472
   473 				; ------------------------------------------------------------
   474
   475 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   476 				; as Pointer
   477
   478 215A E8				inx
   479 215B AD CD 21 95 98		mva RESULT :STACKORIGIN,x
   480
   481 					.ifdef @new
   482 					lda <@VarData
   483 					sta :ztmp
   484 					lda >@VarData
   485 					ldy #@VarDataSize-1
   486 					jmp @FreeMem
   487 					eif
   488
   489 				; ------------------------------------------------------------
   490
   491 = 21CC			CHN	= DATAORIGIN+$000D
   492 = 21CD			RESULT	= DATAORIGIN+$000E
   493
   494 = 21CC			@VarData	= CHN
   495 = 0002			@VarDataSize	= 2
   496
   497 2160 60				rts						; ret
   498 				.endl
   499
   500 				; ------------------------------------------------------------
   501
   502 				.endl							; UNIT CIO
   503
   504 2161			.local	MAINPROC					; PROCEDURE
   505
   506 				; optimize FAIL (100, examples\printe.pas), line = 17
   507 					@printSTRING #CODEORIGIN+$000D
   507 				 LDY> CODEORIGIN+$000D\ LDA< CODEORIGIN+$000D\ JSR @PRINTSTRING
   507 2161 A0 20		 LDY> CODEORIGIN+$000D
   507 2163 A9 0D		 LDA< CODEORIGIN+$000D
   507 2165 20 B1 20		 JSR @PRINTSTRING
   508 2168 20 A3 20			@printEOL
   509
   510 				; optimize FAIL (100, examples\printe.pas), line = 18
   511 					@printSTRING #CODEORIGIN+$001A
   511 				 LDY> CODEORIGIN+$001A\ LDA< CODEORIGIN+$001A\ JSR @PRINTSTRING
   511 216B A0 20		 LDY> CODEORIGIN+$001A
   511 216D A9 1A		 LDA< CODEORIGIN+$001A
   511 216F 20 B1 20		 JSR @PRINTSTRING
   512 2172 20 A3 20			@printEOL
   513
   514 				; optimize FAIL (100, examples\printe.pas), line = 19
   515 					@printSTRING #CODEORIGIN+$001C
   515 				 LDY> CODEORIGIN+$001C\ LDA< CODEORIGIN+$001C\ JSR @PRINTSTRING
   515 2175 A0 20		 LDY> CODEORIGIN+$001C
   515 2177 A9 1C		 LDA< CODEORIGIN+$001C
   515 2179 20 B1 20		 JSR @PRINTSTRING
   516 217C 20 A3 20			@printEOL
   517
   518 				; optimize FAIL (100, examples\printe.pas), line = 20
   519 					@printSTRING #CODEORIGIN+$0019
   519 				 LDY> CODEORIGIN+$0019\ LDA< CODEORIGIN+$0019\ JSR @PRINTSTRING
   519 217F A0 20		 LDY> CODEORIGIN+$0019
   519 2181 A9 19		 LDA< CODEORIGIN+$0019
   519 2183 20 B1 20		 JSR @PRINTSTRING
   520 2186 20 A3 20			@printEOL
   521
   522 				; optimize FAIL (100, examples\printe.pas), line = 21
   523 					@printSTRING #CODEORIGIN+$0026
   523 				 LDY> CODEORIGIN+$0026\ LDA< CODEORIGIN+$0026\ JSR @PRINTSTRING
   523 2189 A0 20		 LDY> CODEORIGIN+$0026
   523 218B A9 26		 LDA< CODEORIGIN+$0026
   523 218D 20 B1 20		 JSR @PRINTSTRING
   524 2190 20 A3 20			@printEOL
   525
   526 				; optimize FAIL ('CIO.GET', examples\printe.pas), line = 22
   527 2193 E8				inx
   528 2194 A9 07 95 98			mva #$07 :STACKORIGIN,x
   529 2198 20 32 21			jsr CIO.GET
   530 219B B5 98 8D CE 22		mva :STACKORIGIN,x KEY
   531 21A0 CA				dex
   532
   533 21A1 20 21 21			jsr CRT.READKEY					; call Entry
   534
   535 21A4 CA				dex
   536
   537 				; ------------------------------------------------------------
   538
   539 = 22CE			KEY	= DATAORIGIN+$010F
   540
   541 = 22CE			@VarData	= KEY
   542 = 0001			@VarDataSize	= 1
   543
   544 21A5			@exit
   545 					.ifdef @new
   546 					lda <@VarData
   547 					sta :ztmp
   548 					lda >@VarData
   549 					ldy #@VarDataSize-1
   550 					jmp @FreeMem
   551 					eif
   552 21A5 60				rts						; ret
   553 				.endl
   554 21A6			l_003F
   555
   556 				; optimize FAIL ('MAINPROC', examples\printe.pas), line = 27
   557 21A6 20 61 21			jsr MAINPROC
   558
   559 				; ------------------------------------------------------------
   560
   561 = 21CE			adr.STRBUFFER	= DATAORIGIN+$000F
   562 21A9			.var STRBUFFER	= adr.STRBUFFER .word
   563 21A9			@exit
   564
   565 21A9 A2 00		@halt	ldx #0
   566 21AB 9A				txs
   567 					.ifdef MAIN.@DEFINES.ROMOFF
   568 					inc portb
   569 					.endif
   570
   571 21AC 60				rts
   572
   573 				; ------------------------------------------------------------
   574
   575 21AD 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   576
   577 				; ------------------------------------------------------------
   578
   579 21BD			.local	@DEFINES
   580 21BD			ATARI
   581 				.endl
   582
   583 = 21BD CE 21		STRBUFFER
   583 				.endl							; MAIN
   584
   585 				; ------------------------------------------------------------
   586 				; ------------------------------------------------------------
   587
   588 				.macro	UNITINITIALIZATION
   589 				
   590 					.ifdef MAIN.SYSTEM.@UnitInit
   591 					jsr MAIN.SYSTEM.@UnitInit
   592 					eif
   593 				
   594 					.ifdef MAIN.ATARI.@UnitInit
   595 					jsr MAIN.ATARI.@UnitInit
   596 					eif
   597 				
   598 					.ifdef MAIN.CRT.@UnitInit
   599 					jsr MAIN.CRT.@UnitInit
   600 					eif
   601 				
   602 					.ifdef MAIN.DOS.@UnitInit
   603 					jsr MAIN.DOS.@UnitInit
   604 					eif
   605 				
   606 					.ifdef MAIN.STRUTILS.@UnitInit
   607 					jsr MAIN.STRUTILS.@UnitInit
   608 					eif
   609 				
   610 					.ifdef MAIN.SYSUTILS.@UnitInit
   611 					jsr MAIN.SYSUTILS.@UnitInit
   612 					eif
   613 				
   614 					.ifdef MAIN.CIO.@UnitInit
   615 					jsr MAIN.CIO.@UnitInit
   616 					eif
   617 				.endm
   618
   619 				; ------------------------------------------------------------
   620
   621 					ift .SIZEOF(MAIN.SYSTEM) > 0
   622 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   622 				SYSTEM: $211D..$2120
   623 					eif
   624
   625 					ift .SIZEOF(MAIN.ATARI) > 0
   626 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   627 					eif
   628
   629 					ift .SIZEOF(MAIN.CRT) > 0
   630 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   630 				CRT: $2121..$2131
   631 					eif
   632
   633 					ift .SIZEOF(MAIN.DOS) > 0
   634 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   635 					eif
   636
   637 					ift .SIZEOF(MAIN.STRUTILS) > 0
   638 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   639 					eif
   640
   641 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   642 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   643 					eif
   644
   645 					ift .SIZEOF(MAIN.CIO) > 0
   646 					.print 'CIO: ',MAIN.CIO,'..',MAIN.CIO+.SIZEOF(MAIN.CIO)-1
   646 				CIO: $2132..$2160
   647 					eif
   648
   649 					.print 'CODE: ',CODEORIGIN,'..',*-1
   649 				CODE: $2000..$21BE
   650
   651 				; ------------------------------------------------------------
   652
   653 21BF			DATAORIGIN
   654 21BF 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
   655
   656 = 0006			VARINITSIZE	= *-DATAORIGIN
   657 = 0110			VARDATASIZE	= 272
   658
   659 = 22CF			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   660
   661 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   661 				DATA: $21BF..$22CF
   662
   663 02E0-02E1> E0 20			run START
   664
   665 				; ------------------------------------------------------------
   666
   667 				.macro	STATICDATA
   668 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $0B $48 $45  $4C $4C $4F $20 $57 $4F $52 $4C
   669 				.by  $44 $00 $00 $00 $08 $4E $45 $57  $20 $4C $49 $4E $45 $00 $10 $41  $4E $4F $54 $48 $45 $52 $20 $4E
   670 				.by  $45 $57 $20 $4C $49 $4E $45 $00
   671 				.endm
   672
   673 					end
