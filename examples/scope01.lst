mads 2.1.0 build 8 (23 Dec 19)
   388 					opt l+
   101
   102 				.print 'ZPAGE: ',fxptr,'..',zpend-1
   102 				ZPAGE: $0080..$00D7
   103
   104 				.print 'RTLIB: ',RTLIB,'..',*-1
   104 				RTLIB: $200D..$20CA
   105
   106 				; ------------------------------------------------------------
   107
   108 20CB			START
   109 20CB BA				tsx
   110 20CC 8E 67 21			stx MAIN.@halt+1
   111
   112 					.ifdef fmulinit
   113 					fmulinit
   114 					eif
   115
   116 = 0000			VLEN	= VARDATASIZE-VARINITSIZE
   117 = 228D			VADR	= DATAORIGIN+VARINITSIZE
   118
   119 					ift VADR > $BFFF
   120 					ert 'Invalid memory address range ',VADR
   121 					eli (VLEN>0) && (VLEN<=256)
   122 					ldx #256-VLEN
   123 					lda #0
   124 					sta:rne VADR+VLEN-256,x+
   125 					eli VLEN>0
   126 					@fill #VADR #VLEN #0
   127 					eif
   128
   129 					.ifdef MAIN.@DEFINES.ROMOFF
   130 					icl 'atari\romoff.asm'
   131 					.endif
   132
   133 20CF A9 8D 85 82 A9 22 + 	mwa #PROGRAMSTACK psptr
   134
   135 20D7 A2 0F			ldx #$0f					; DOS II+/D ParamStr
   136 20D9 BD 40 03 9D 6A 21 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   137
   138 20E2 E8				inx						; X = 0
   139 20E3 86 90			stx bp						; BP = 0
   140
   141 20E5 8E 08 D2			stx audctl					; reset POKEY
   142 20E8 A9 03			lda #3
   143 20EA 8D 0F D2			sta skctl
   144
   145 20ED CA				dex						; X = 255
   146
   147 20EE				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: scope01.a65]
   148
   149 20EE			.local	MAIN						; PROCEDURE
   150
   151 20EE 4C 63 21			jmp l_0014
   152
   153 				; ------------------------------------------------------------
   154
   155 20F1			.local	SYSTEM						; UNIT
   156
   157 				; ------------------------------------------------------------
   158
   159 = 0101			__PORTB_BANKS	= $0101
   160 = 0648			M_PI_2	= $0648
   161 = 0192			D_PI_2	= $0192
   162 = 0004			D_PI_180	= $04
   163 = 0000			MGTIA	= $00
   164 = 0080			MVBXE	= $80
   165 = 0000			VBXE_XDLADR	= $00
   166 = 0100			VBXE_BCBADR	= $0100
   167 = 1000			VBXE_MAPADR	= $1000
   168 = 5000			VBXE_OVRADR	= $5000
   169 = B000			VBXE_WINDOW	= $B000
   170 = 0000			IDLI	= $00
   171 = 0001			IVBL	= $01
   172 = 00FE			CH_DELCHR	= $FE
   173 = 009B			CH_ENTER	= $9B
   174 = 001B			CH_ESC	= $1B
   175 = 001C			CH_CURS_UP	= $1C
   176 = 001D			CH_CURS_DOWN	= $1D
   177 = 001E			CH_CURS_LEFT	= $1E
   178 = 001F			CH_CURS_RIGHT	= $1F
   179 = 007F			CH_TAB	= $7F
   180 = 009B			CH_EOL	= $9B
   181 = 007D			CH_CLR	= $7D
   182 = 00FD			CH_BELL	= $FD
   183 = 007E			CH_DEL	= $7E
   184 = 009C			CH_DELLINE	= $9C
   185 = 009D			CH_INSLINE	= $9D
   186 = 0000			COLOR_BLACK	= $00
   187 = 000E			COLOR_WHITE	= $0E
   188 = 0032			COLOR_RED	= $32
   189 = 0096			COLOR_CYAN	= $96
   190 = 0068			COLOR_VIOLET	= $68
   191 = 00C4			COLOR_GREEN	= $C4
   192 = 0074			COLOR_BLUE	= $74
   193 = 00EE			COLOR_YELLOW	= $EE
   194 = 0028			COLOR_ORANGE	= $28
   195 = 00E4			COLOR_BROWN	= $E4
   196 = 003C			COLOR_LIGHTRED	= $3C
   197 = 0004			COLOR_GRAY1	= $04
   198 = 0006			COLOR_GRAY2	= $06
   199 = 000A			COLOR_GRAY3	= $0A
   200 = 00CC			COLOR_LIGHTGREEN	= $CC
   201 = 007C			COLOR_LIGHTBLUE	= $7C
   202 = 0004			FMOPENREAD	= $04
   203 = 0008			FMOPENWRITE	= $08
   204 = 0009			FMOPENAPPEND	= $09
   205 = 000C			FMOPENREADWRITE	= $0C
   206 = 217C			SCREENWIDTH	= DATAORIGIN+$0000
   207 = 217E			SCREENHEIGHT	= DATAORIGIN+$0002
   208 = 2180			DATESEPARATOR	= DATAORIGIN+$0004
   209 = D014			TVSYSTEM	= $D014
   210 = 02C0			adr.PALETTE	= $02C0
   211 20F1			.var PALETTE	= adr.PALETTE .word
   212 = D012			adr.HPALETTE	= $D012
   213 20F1			.var HPALETTE	= adr.HPALETTE .word
   214 = 2181			FILEMODE	= DATAORIGIN+$0005
   215 = 2182			GRAPHMODE	= DATAORIGIN+$0006
   216 = 2183			IORESULT	= DATAORIGIN+$0007
   217 = 2184			EOLN	= DATAORIGIN+$0008
   218 = 2185			RNDSEED	= DATAORIGIN+$0009
   219
   220 = 20F1 C0 02		PALETTE
   220 = 20F3 12 D0		HPALETTE
   220 				.endl							; UNIT SYSTEM
   221
   222 				; ------------------------------------------------------------
   223
   224 20F5			.local	ATARI						; UNIT
   225
   226 				; ------------------------------------------------------------
   227
   228 = 0012			RTCLOK	= $12
   229 = 004D			ATRACT	= $4D
   230 = 0052			LMARGIN	= $52
   231 = 0053			RMARGIN	= $53
   232 = 0054			ROWCRS	= $54
   233 = 0055			COLCRS	= $55
   234 = 0057			DINDEX	= $57
   235 = 0058			SAVMSC	= $58
   236 = 0062			PALNTS	= $62
   237 = 006A			RAMTOP	= $6A
   238 = 0200			VDSLST	= $0200
   239 = 0230			SDLSTL	= $0230
   240 = 0290			TXTROW	= $0290
   241 = 0291			TXTCOL	= $0291
   242 = 0293			TINDEX	= $0293
   243 = 0294			TXTMSC	= $0294
   244 = 022F			SDMCTL	= $022F
   245 = 026F			GPRIOR	= $026F
   246 = 02F0			CRSINH	= $02F0
   247 = 02F3			CHACT	= $02F3
   248 = 02F4			CHBAS	= $02F4
   249 = 02FC			CH	= $02FC
   250 = 02C0			PCOLR0	= $02C0
   251 = 02C1			PCOLR1	= $02C1
   252 = 02C2			PCOLR2	= $02C2
   253 = 02C3			PCOLR3	= $02C3
   254 = 02C4			COLOR0	= $02C4
   255 = 02C5			COLOR1	= $02C5
   256 = 02C6			COLOR2	= $02C6
   257 = 02C7			COLOR3	= $02C7
   258 = 02C8			COLOR4	= $02C8
   259 = 02C8			COLBAKS	= $02C8
   260 = D000			HPOSP0	= $D000
   261 = D001			HPOSP1	= $D001
   262 = D002			HPOSP2	= $D002
   263 = D003			HPOSP3	= $D003
   264 = D004			HPOSM0	= $D004
   265 = D005			HPOSM1	= $D005
   266 = D006			HPOSM2	= $D006
   267 = D007			HPOSM3	= $D007
   268 = D008			SIZEP0	= $D008
   269 = D009			SIZEP1	= $D009
   270 = D00A			SIZEP2	= $D00A
   271 = D00B			SIZEP3	= $D00B
   272 = D00C			SIZEM	= $D00C
   273 = D00D			GRAFP0	= $D00D
   274 = D00E			GRAFP1	= $D00E
   275 = D00F			GRAFP2	= $D00F
   276 = D010			GRAFP3	= $D010
   277 = D011			GRAFM	= $D011
   278 = D004			P0PF	= $D004
   279 = D014			PAL	= $D014
   280 = D012			COLPM0	= $D012
   281 = D013			COLPM1	= $D013
   282 = D014			COLPM2	= $D014
   283 = D015			COLPM3	= $D015
   284 = D016			COLPF0	= $D016
   285 = D017			COLPF1	= $D017
   286 = D018			COLPF2	= $D018
   287 = D019			COLPF3	= $D019
   288 = D01A			COLBK	= $D01A
   289 = D01B			PRIOR	= $D01B
   290 = D01D			GRACTL	= $D01D
   291 = D01E			HITCLR	= $D01E
   292 = D200			AUDF1	= $D200
   293 = D201			AUDC1	= $D201
   294 = D202			AUDF2	= $D202
   295 = D203			AUDC2	= $D203
   296 = D204			AUDF3	= $D204
   297 = D205			AUDC3	= $D205
   298 = D206			AUDF4	= $D206
   299 = D207			AUDC4	= $D207
   300 = D208			AUDCTL	= $D208
   301 = D20F			SKSTAT	= $D20F
   302 = D301			PORTB	= $D301
   303 = D400			DMACTL	= $D400
   304 = D401			CHACTL	= $D401
   305 = D402			DLISTL	= $D402
   306 = D404			HSCROL	= $D404
   307 = D405			VSCROL	= $D405
   308 = D407			PMBASE	= $D407
   309 = D409			CHBASE	= $D409
   310 = D40A			WSYNC	= $D40A
   311 = D40B			VCOUNT	= $D40B
   312 = D40C			PENH	= $D40C
   313 = D40D			PENV	= $D40D
   314 = D40E			NMIEN	= $D40E
   315
   316 				.endl							; UNIT ATARI
   317
   318 				; ------------------------------------------------------------
   319
   320 20F5			.local	CRT						; UNIT
   321
   322 20F5			.local	READKEY						; FUNCTION | ASSEMBLER
   323
   324 				; ---------------------  ASM Block 049  ---------------------
   325
   326 20F5 8A 48			txa:pha
   327
   328 20F7 20 0D 20			@GetKey
   329
   330 20FA 8D 88 21			sta Result
   331
   332 20FD 68 AA			pla:tax
   333
   334 20FF			@exit
   335
   336 				; ------------------------------------------------------------
   337
   338 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   339 				; as Pointer
   340
   341 20FF E8				inx
   342 2100 AD 88 21 95 98		mva RESULT :STACKORIGIN,x
   343
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					eif
   351
   352 				; ------------------------------------------------------------
   353
   354 = 2188			RESULT	= DATAORIGIN+$000C
   355
   356 = 2188			@VarData	= RESULT
   357 = 0001			@VarDataSize	= 1
   358
   359 2105 60				rts						; ret
   360 				.endl
   361
   362 				; ------------------------------------------------------------
   363
   364 = 2187			TEXTATTR	= DATAORIGIN+$000B
   365 = D01F			CONSOL	= $D01F
   366 = 0000			CN_START_SELECT_OPTION	= $00
   367 = 0001			CN_SELECT_OPTION	= $01
   368 = 0002			CN_START_OPTION	= $02
   369 = 0003			CN_OPTION	= $03
   370 = 0004			CN_START_SELECT	= $04
   371 = 0005			CN_SELECT	= $05
   372 = 0006			CN_START	= $06
   373 = 0007			CN_NONE	= $07
   374 = 0000			BW40	= $00
   375 = 0001			CO40	= $01
   376 = 0002			BW80	= $02
   377 = 0003			CO80	= $03
   378 = 0007			MONO	= $07
   379 = 0001			C40	= $01
   380 = 0003			C80	= $03
   381 = 0000			BLACK	= $00
   382 = 0001			BLUE	= $01
   383 = 0002			GREEN	= $02
   384 = 0003			CYAN	= $03
   385 = 0004			RED	= $04
   386 = 0005			MAGENTA	= $05
   387 = 0006			BROWN	= $06
   388 = 0007			LIGHTGRAY	= $07
   389 = 0008			DARKGRAY	= $08
   390 = 0009			LIGHTBLUE	= $09
   391 = 000A			LIGHTGREEN	= $0A
   392 = 000B			LIGHTCYAN	= $0B
   393 = 000C			LIGHTRED	= $0C
   394 = 000D			LIGHTMAGENTA	= $0D
   395 = 000E			YELLOW	= $0E
   396 = 000F			WHITE	= $0F
   397 = 0080			BLINK	= $80
   398
   399 				.endl							; UNIT CRT
   400
   401 				; ------------------------------------------------------------
   402
   403 2106			.local	DOS						; UNIT
   404
   405 				; ------------------------------------------------------------
   406
   407 = D014			PALNTSC	= $D014
   408
   409 				.endl							; UNIT DOS
   410
   411 				; ------------------------------------------------------------
   412
   413 2106			.local	STRUTILS					; UNIT
   414
   415 				; ------------------------------------------------------------
   416
   417 				.endl							; UNIT STRUTILS
   418
   419 				; ------------------------------------------------------------
   420
   421 2106			.local	SYSUTILS					; UNIT
   422
   423 				; ------------------------------------------------------------
   424
   425 = 0001			FAREADONLY	= $01
   426 = 0002			FAHIDDEN	= $02
   427 = 0004			FASYSFILE	= $04
   428 = 0008			FAVOLUMEID	= $08
   429 = 0010			FADIRECTORY	= $10
   430 = 0020			FAARCHIVE	= $20
   431 = 003F			FAANYFILE	= $3F
   432
   433 				.endl							; UNIT SYSUTILS
   434
   435 				; ------------------------------------------------------------
   436
   437 2106			.local	CIO						; UNIT
   438
   439 2106			.local	GET						; FUNCTION | ASSEMBLER
   440
   441 				; ------------------------------------------------------------
   442
   443 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   444 				; as Pointer
   445 2106 B5 98 8D 89 21		mva :STACKORIGIN,x CHN
   446 210B CA				dex
   447
   448 				; ---------------------  ASM Block 080  ---------------------
   449
   450 210C 8A 48			txa:pha
   451
   452 210E AD 89 21			lda chn
   453 2111 0A 0A 0A 0A			:4 asl @
   454 2115 AA				tax
   455
   456 2116 A9 07			lda #7		;get char command
   457 2118 9D 42 03			sta iccmd,x
   458
   459 211B A9 00			lda #$00	;zero out the unused
   460 211D 9D 48 03			sta icbufl,x	;store in accumulator
   461 2120 9D 49 03			sta icbufh,x	;...after CIOV jump
   462
   463 2123				m@call	ciov
Macro: M@CALL [Source: rtl6502.asm]
    12 2123 20 56 E4				jsr CIOV
   464
   465 2126 8C 83 21			sty MAIN.SYSTEM.IOResult
   466
   467 2129 8D 8A 21			sta Result
   468
   469 212C 68 AA			pla:tax
   470
   471 212E			@exit
   472
   473 				; ------------------------------------------------------------
   474
   475 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   476 				; as Pointer
   477
   478 212E E8				inx
   479 212F AD 8A 21 95 98		mva RESULT :STACKORIGIN,x
   480
   481 					.ifdef @new
   482 					lda <@VarData
   483 					sta :ztmp
   484 					lda >@VarData
   485 					ldy #@VarDataSize-1
   486 					jmp @FreeMem
   487 					eif
   488
   489 				; ------------------------------------------------------------
   490
   491 = 2189			CHN	= DATAORIGIN+$000D
   492 = 218A			RESULT	= DATAORIGIN+$000E
   493
   494 = 2189			@VarData	= CHN
   495 = 0002			@VarDataSize	= 2
   496
   497 2134 60				rts						; ret
   498 				.endl
   499
   500 				; ------------------------------------------------------------
   501
   502 				.endl							; UNIT CIO
   503
   504 2135			.local	CHANGEPROC					; PROCEDURE
   505
   506 				; optimize OK (examples\scope01.pas), line = 18
   507
   508 2135 A9 0A 8D 8C 22		mva #$0A N1
   509
   510 				; optimize FAIL (100, examples\scope01.pas), line = 19
   511 213A AD 8C 22			lda N1
   512 213D 20 40 20			jsr @printBYTE._a
   513 2140 20 30 20			@printEOL
   514 2143			@exit
   515 					.ifdef @new
   516 					lda <@VarData
   517 					sta :ztmp
   518 					lda >@VarData
   519 					ldy #@VarDataSize-1
   520 					jmp @FreeMem
   521 					eif
   522 2143 60				rts						; ret
   523 				.endl
   524
   525 2144			.local	MAINPROC					; PROCEDURE
   526
   527 				; optimize FAIL (100, examples\scope01.pas), line = 24
   528 2144 AD 8C 22			lda N1
   529 2147 20 40 20			jsr @printBYTE._a
   530 214A 20 30 20			@printEOL
   531
   532 				; optimize FAIL ('CHANGEPROC', examples\scope01.pas), line = 25
   533 214D 20 35 21			jsr CHANGEPROC
   534
   535 				; optimize FAIL ('CIO.GET', examples\scope01.pas), line = 26
   536 2150 E8				inx
   537 2151 A9 07 95 98			mva #$07 :STACKORIGIN,x
   538 2155 20 06 21			jsr CIO.GET
   539 2158 B5 98 8D 8B 22		mva :STACKORIGIN,x KEY
   540 215D CA				dex
   541
   542 215E 20 F5 20			jsr CRT.READKEY					; call Entry
   543
   544 2161 CA				dex
   545 2162			@exit
   546 					.ifdef @new
   547 					lda <@VarData
   548 					sta :ztmp
   549 					lda >@VarData
   550 					ldy #@VarDataSize-1
   551 					jmp @FreeMem
   552 					eif
   553 2162 60				rts						; ret
   554 				.endl
   555 2163			l_0014
   556
   557 				; optimize FAIL ('MAINPROC', examples\scope01.pas), line = 31
   558 2163 20 44 21			jsr MAINPROC
   559
   560 				; ------------------------------------------------------------
   561
   562 = 218B			adr.STRBUFFER	= DATAORIGIN+$000F
   563 2166			.var STRBUFFER	= adr.STRBUFFER .word
   564 = 228B			KEY	= DATAORIGIN+$010F
   565 = 228C			N1	= DATAORIGIN+$0110
   566 2166			@exit
   567
   568 2166 A2 00		@halt	ldx #0
   569 2168 9A				txs
   570 					.ifdef MAIN.@DEFINES.ROMOFF
   571 					inc portb
   572 					.endif
   573
   574 2169 60				rts
   575
   576 				; ------------------------------------------------------------
   577
   578 216A 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   579
   580 				; ------------------------------------------------------------
   581
   582 217A			.local	@DEFINES
   583 217A			ATARI
   584 				.endl
   585
   586 = 217A 8B 21		STRBUFFER
   586 				.endl							; MAIN
   587
   588 				; ------------------------------------------------------------
   589 				; ------------------------------------------------------------
   590
   591 				.macro	UNITINITIALIZATION
   592 				
   593 					.ifdef MAIN.SYSTEM.@UnitInit
   594 					jsr MAIN.SYSTEM.@UnitInit
   595 					eif
   596 				
   597 					.ifdef MAIN.ATARI.@UnitInit
   598 					jsr MAIN.ATARI.@UnitInit
   599 					eif
   600 				
   601 					.ifdef MAIN.CRT.@UnitInit
   602 					jsr MAIN.CRT.@UnitInit
   603 					eif
   604 				
   605 					.ifdef MAIN.DOS.@UnitInit
   606 					jsr MAIN.DOS.@UnitInit
   607 					eif
   608 				
   609 					.ifdef MAIN.STRUTILS.@UnitInit
   610 					jsr MAIN.STRUTILS.@UnitInit
   611 					eif
   612 				
   613 					.ifdef MAIN.SYSUTILS.@UnitInit
   614 					jsr MAIN.SYSUTILS.@UnitInit
   615 					eif
   616 				
   617 					.ifdef MAIN.CIO.@UnitInit
   618 					jsr MAIN.CIO.@UnitInit
   619 					eif
   620 				.endm
   621
   622 				; ------------------------------------------------------------
   623
   624 					ift .SIZEOF(MAIN.SYSTEM) > 0
   625 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   625 				SYSTEM: $20F1..$20F4
   626 					eif
   627
   628 					ift .SIZEOF(MAIN.ATARI) > 0
   629 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   630 					eif
   631
   632 					ift .SIZEOF(MAIN.CRT) > 0
   633 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   633 				CRT: $20F5..$2105
   634 					eif
   635
   636 					ift .SIZEOF(MAIN.DOS) > 0
   637 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   638 					eif
   639
   640 					ift .SIZEOF(MAIN.STRUTILS) > 0
   641 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   642 					eif
   643
   644 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   645 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   646 					eif
   647
   648 					ift .SIZEOF(MAIN.CIO) > 0
   649 					.print 'CIO: ',MAIN.CIO,'..',MAIN.CIO+.SIZEOF(MAIN.CIO)-1
   649 				CIO: $2106..$2134
   650 					eif
   651
   652 					.print 'CODE: ',CODEORIGIN,'..',*-1
   652 				CODE: $2000..$217B
   653
   654 				; ------------------------------------------------------------
   655
   656 217C			DATAORIGIN
   657 217C 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   658 2194 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   659 21AC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   660 21C4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   661 21DC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   662 21F4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   663 220C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   664 2224 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   665 223C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   666 2254 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   667 226C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   668 2284 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $0E
   669
   670 = 0111			VARINITSIZE	= *-DATAORIGIN
   671 = 0111			VARDATASIZE	= 273
   672
   673 = 228D			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   674
   675 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   675 				DATA: $217C..$228D
   676
   677 02E0-02E1> CB 20			run START
   678
   679 				; ------------------------------------------------------------
   680
   681 				.macro	STATICDATA
   682 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00
   683 				.endm
   684
   685 					end
