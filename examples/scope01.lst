mads 2.1.0
  3726 					opt l+
    95
    96 				.print 'RUNLIB: ',RUNLIB,'..',*
    96 				RUNLIB: $200D..$20D3
    97
    98 				; ------------------------------------------------------------
    99
   100 20D3			START
   101 20D3 BA				tsx
   102 20D4 8E 2E 21			stx MAIN.@halt+1
   103
   104 					.ifdef fmulinit
   105 					fmulinit
   106 					eif
   107
   108 = 0000			VLEN	= VARDATASIZE-VARINITSIZE
   109 = 2150			VADR	= DATAORIGIN+VARINITSIZE
   110
   111 					ift VADR > $BFFF
   112 					ert 'Invalid memory address range ',VADR
   113 					eli (VLEN>0) && (VLEN<=256)
   114 					ldx #256-VLEN
   115 					lda #0
   116 					sta:rne VADR+VLEN-256,x+
   117 					eli VLEN>0
   118 					@fill #VADR #VLEN #0
   119 					eif
   120
   121 20D7 A2 0F			ldx #$0f
   122 20D9 BD 40 03 9D 31 21 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   123
   124 20E2 E8				inx		; X = 0 !!!
   125 20E3 86 8E			stx bp		; lo BP = 0
   126
   127 20E5				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: scope01.a65]
   128
   129 20E5			.local	MAIN						; PROCEDURE
   130
   131 20E5 4C 2A 21			jmp l_0014
   132
   133 				; ------------------------------------------------------------
   134
   135 20E8			.local	SYSTEM						; UNIT
   136
   137 				; ------------------------------------------------------------
   138
   139 = 0648			M_PI_2	= $0648
   140 = 0192			D_PI_2	= $0192
   141 = 0004			D_PI_180	= $0004
   142 = 0000			MGTIA	= $0000
   143 = 0080			MVBXE	= $0080
   144 = 0000			VBXE_XDLADR	= $0000
   145 = 0100			VBXE_BCBADR	= $0100
   146 = 1000			VBXE_MAPADR	= $1000
   147 = 5000			VBXE_OVRADR	= $5000
   148 = B000			VBXE_WINDOW	= $B000
   149 = 0000			IDLI	= $0000
   150 = 0001			IVBL	= $0001
   151 = 00FE			CH_DELCHR	= $00FE
   152 = 009B			CH_ENTER	= $009B
   153 = 001B			CH_ESC	= $001B
   154 = 001C			CH_CURS_UP	= $001C
   155 = 001D			CH_CURS_DOWN	= $001D
   156 = 001E			CH_CURS_LEFT	= $001E
   157 = 001F			CH_CURS_RIGHT	= $001F
   158 = 007F			CH_TAB	= $007F
   159 = 009B			CH_EOL	= $009B
   160 = 007D			CH_CLR	= $007D
   161 = 00FD			CH_BELL	= $00FD
   162 = 007E			CH_DEL	= $007E
   163 = 009C			CH_DELLINE	= $009C
   164 = 009D			CH_INSLINE	= $009D
   165 = 0000			COLOR_BLACK	= $0000
   166 = 000E			COLOR_WHITE	= $000E
   167 = 0032			COLOR_RED	= $0032
   168 = 0096			COLOR_CYAN	= $0096
   169 = 0068			COLOR_VIOLET	= $0068
   170 = 00C4			COLOR_GREEN	= $00C4
   171 = 0074			COLOR_BLUE	= $0074
   172 = 00EE			COLOR_YELLOW	= $00EE
   173 = 0028			COLOR_ORANGE	= $0028
   174 = 00E4			COLOR_BROWN	= $00E4
   175 = 003C			COLOR_LIGHTRED	= $003C
   176 = 0004			COLOR_GRAY1	= $0004
   177 = 0006			COLOR_GRAY2	= $0006
   178 = 000A			COLOR_GRAY3	= $000A
   179 = 00CC			COLOR_LIGHTGREEN	= $00CC
   180 = 007C			COLOR_LIGHTBLUE	= $007C
   181 = 0004			FMOPENREAD	= $0004
   182 = 0008			FMOPENWRITE	= $0008
   183 = 0009			FMOPENAPPEND	= $0009
   184 = 000C			FMOPENREADWRITE	= $000C
   185 = 2141			SCREENWIDTH	= DATAORIGIN+$0000
   186 = 2143			SCREENHEIGHT	= DATAORIGIN+$0002
   187 = 2145			DATESEPARATOR	= DATAORIGIN+$0004
   188 = D014			TVSYSTEM	= $D014
   189 = 02C0			adr.PALETTE	= $02C0
   190 20E8			.var PALETTE	= adr.PALETTE .word
   191 = D012			adr.HPALETTE	= $D012
   192 20E8			.var HPALETTE	= adr.HPALETTE .word
   193 = 2146			FILEMODE	= DATAORIGIN+$0005
   194 = 2147			SCREENMODE	= DATAORIGIN+$0006
   195 = 2148			IORESULT	= DATAORIGIN+$0007
   196 = 2149			EOLN	= DATAORIGIN+$0008
   197 = 214A			RNDSEED	= DATAORIGIN+$0009
   198
   199 = 20E8 C0 02		PALETTE
   199 = 20EA 12 D0		HPALETTE
   199 				.endl							; UNIT SYSTEM
   200
   201 				; ------------------------------------------------------------
   202
   203 20EC			.local	DOS						; UNIT
   204
   205 				; ------------------------------------------------------------
   206
   207 = D014			PALNTSC	= $D014
   208
   209 				.endl							; UNIT DOS
   210
   211 				; ------------------------------------------------------------
   212
   213 20EC			.local	STRUTILS					; UNIT
   214
   215 				; ------------------------------------------------------------
   216
   217 				.endl							; UNIT STRUTILS
   218
   219 				; ------------------------------------------------------------
   220
   221 20EC			.local	SYSUTILS					; UNIT
   222
   223 				; ------------------------------------------------------------
   224
   225 = 0001			FAREADONLY	= $0001
   226 = 0002			FAHIDDEN	= $0002
   227 = 0004			FASYSFILE	= $0004
   228 = 0008			FAVOLUMEID	= $0008
   229 = 0010			FADIRECTORY	= $0010
   230 = 0020			FAARCHIVE	= $0020
   231 = 003F			FAANYFILE	= $003F
   232
   233 				.endl							; UNIT SYSUTILS
   234
   235 				; ------------------------------------------------------------
   236
   237 20EC			.local	ATARI						; UNIT
   238
   239 				; ------------------------------------------------------------
   240
   241 = 0012			RTCLOK	= $0012
   242 = 004D			ATRACT	= $004D
   243 = 0052			LMARGIN	= $0052
   244 = 0053			RMARGIN	= $0053
   245 = 0054			ROWCRS	= $0054
   246 = 0055			COLCRS	= $0055
   247 = 0057			DINDEX	= $0057
   248 = 0058			SAVMSC	= $0058
   249 = 006A			RAMTOP	= $006A
   250 = 0200			VDSLST	= $0200
   251 = 0230			SDLSTL	= $0230
   252 = 0290			TXTROW	= $0290
   253 = 0291			TXTCOL	= $0291
   254 = 0293			TINDEX	= $0293
   255 = 0294			TXTMSC	= $0294
   256 = 022F			SDMCTL	= $022F
   257 = 026F			GPRIOR	= $026F
   258 = 02F0			CRSINH	= $02F0
   259 = 02F3			CHACT	= $02F3
   260 = 02F4			CHBAS	= $02F4
   261 = 02FC			CH	= $02FC
   262 = 02C0			PCOLR0	= $02C0
   263 = 02C1			PCOLR1	= $02C1
   264 = 02C2			PCOLR2	= $02C2
   265 = 02C3			PCOLR3	= $02C3
   266 = 02C4			COLOR0	= $02C4
   267 = 02C5			COLOR1	= $02C5
   268 = 02C6			COLOR2	= $02C6
   269 = 02C7			COLOR3	= $02C7
   270 = 02C8			COLOR4	= $02C8
   271 = 02C8			COLBAKS	= $02C8
   272 = D000			HPOSP0	= $D000
   273 = D001			HPOSP1	= $D001
   274 = D002			HPOSP2	= $D002
   275 = D003			HPOSP3	= $D003
   276 = D004			HPOSM0	= $D004
   277 = D005			HPOSM1	= $D005
   278 = D006			HPOSM2	= $D006
   279 = D007			HPOSM3	= $D007
   280 = D008			SIZEP0	= $D008
   281 = D009			SIZEP1	= $D009
   282 = D00A			SIZEP2	= $D00A
   283 = D00B			SIZEP3	= $D00B
   284 = D00C			SIZEM	= $D00C
   285 = D00D			GRAFP0	= $D00D
   286 = D00E			GRAFP1	= $D00E
   287 = D00F			GRAFP2	= $D00F
   288 = D010			GRAFP3	= $D010
   289 = D011			GRAFM	= $D011
   290 = D004			P0PF	= $D004
   291 = D014			PAL	= $D014
   292 = D012			COLPM0	= $D012
   293 = D013			COLPM1	= $D013
   294 = D014			COLPM2	= $D014
   295 = D015			COLPM3	= $D015
   296 = D016			COLPF0	= $D016
   297 = D017			COLPF1	= $D017
   298 = D018			COLPF2	= $D018
   299 = D019			COLPF3	= $D019
   300 = D01A			COLBK	= $D01A
   301 = D01B			PRIOR	= $D01B
   302 = D01D			GRACTL	= $D01D
   303 = D01E			HITCLR	= $D01E
   304 = D200			AUDF1	= $D200
   305 = D201			AUDC1	= $D201
   306 = D202			AUDF2	= $D202
   307 = D203			AUDC2	= $D203
   308 = D204			AUDF3	= $D204
   309 = D205			AUDC3	= $D205
   310 = D206			AUDF4	= $D206
   311 = D207			AUDC4	= $D207
   312 = D208			AUDCTL	= $D208
   313 = D20F			SKSTAT	= $D20F
   314 = D301			PORTB	= $D301
   315 = D400			DMACTL	= $D400
   316 = D401			CHACTL	= $D401
   317 = D402			DLISTL	= $D402
   318 = D404			HSCROL	= $D404
   319 = D405			VSCROL	= $D405
   320 = D407			PMBASE	= $D407
   321 = D409			CHBASE	= $D409
   322 = D40A			WSYNC	= $D40A
   323 = D40B			VCOUNT	= $D40B
   324 = D40C			PENH	= $D40C
   325 = D40D			PENV	= $D40D
   326 = D40E			NMIEN	= $D40E
   327
   328 				.endl							; UNIT ATARI
   329
   330 				; ------------------------------------------------------------
   331
   332 20EC			.local	CRT						; UNIT
   333
   334 20EC			.local	READKEY						; FUNCTION | ASSEMBLER
   335
   336 				; ---------------------  ASM Block 063  ---------------------
   337
   338 20EC 8A 48			txa:pha
   339
   340 20EE 20 C3 20			@GetKey
   341
   342 20F1 8D 4D 21			sta Result
   343
   344 20F4 68 AA			pla:tax
   345
   346 20F6			@exit
   347
   348 				; ------------------------------------------------------------
   349
   350 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   351 				; as Pointer
   352
   353 20F6 E8				inx						; add bx, 1
   354 20F7 AD 4D 21 95 98		mva RESULT :STACKORIGIN,x
   355
   356 					.ifdef @new
   357 					@FreeMem #@VarData #@VarDataSize
   358 					eif
   359
   360 				; ------------------------------------------------------------
   361
   362 = 214D			RESULT	= DATAORIGIN+$000C
   363
   364 = 214D			@VarData	= RESULT
   365 = 0001			@VarDataSize	= 1
   366
   367 20FC 60				rts						; ret
   368 				.endl
   369
   370 				; ------------------------------------------------------------
   371
   372 = 214C			TEXTATTR	= DATAORIGIN+$000B
   373 = D01F			CONSOL	= $D01F
   374 = 0000			CN_START_SELECT_OPTION	= $0000
   375 = 0001			CN_SELECT_OPTION	= $0001
   376 = 0002			CN_START_OPTION	= $0002
   377 = 0003			CN_OPTION	= $0003
   378 = 0004			CN_START_SELECT	= $0004
   379 = 0005			CN_SELECT	= $0005
   380 = 0006			CN_START	= $0006
   381 = 0007			CN_NONE	= $0007
   382 = 0000			BW40	= $0000
   383 = 0001			CO40	= $0001
   384 = 0002			BW80	= $0002
   385 = 0003			CO80	= $0003
   386 = 0007			MONO	= $0007
   387 = 0001			C40	= $0001
   388 = 0003			C80	= $0003
   389 = 0000			BLACK	= $0000
   390 = 0001			BLUE	= $0001
   391 = 0002			GREEN	= $0002
   392 = 0003			CYAN	= $0003
   393 = 0004			RED	= $0004
   394 = 0005			MAGENTA	= $0005
   395 = 0006			BROWN	= $0006
   396 = 0007			LIGHTGRAY	= $0007
   397 = 0008			DARKGRAY	= $0008
   398 = 0009			LIGHTBLUE	= $0009
   399 = 000A			LIGHTGREEN	= $000A
   400 = 000B			LIGHTCYAN	= $000B
   401 = 000C			LIGHTRED	= $000C
   402 = 000D			LIGHTMAGENTA	= $000D
   403 = 000E			YELLOW	= $000E
   404 = 000F			WHITE	= $000F
   405 = 0080			BLINK	= $0080
   406
   407 				.endl							; UNIT CRT
   408
   409 20FD			.local	CHANGEPROC					; PROCEDURE
   410
   411 				; optimize OK (examples\scope01.pas), line = 16
   412
   413 20FD A9 0A 8D 4F 21		mva #$0A N1
   414
   415 				; optimize FAIL (100, examples\scope01.pas), line = 17
   416 2102 E8				inx
   417 2103 AD 4F 21 95 98		mva N1 :STACKORIGIN,x
   418 2108 20 2C 20			jsr @printBYTE
   419 210B CA				dex
   420 210C 20 0D 20			@printEOL
   421 210F			@exit
   422 					.ifdef @new
   423 					@FreeMem #@VarData #@VarDataSize
   424 					eif
   425 210F 60				rts						; ret
   426 				.endl
   427
   428 2110			.local	MAINPROC					; PROCEDURE
   429
   430 				; optimize FAIL (100, examples\scope01.pas), line = 22
   431 2110 E8				inx
   432 2111 AD 4F 21 95 98		mva N1 :STACKORIGIN,x
   433 2116 20 2C 20			jsr @printBYTE
   434 2119 CA				dex
   435 211A 20 0D 20			@printEOL
   436
   437 				; optimize FAIL ('CHANGEPROC', examples\scope01.pas), line = 23
   438 211D 20 FD 20			jsr CHANGEPROC
   439
   440 				; optimize FAIL ('CRT.READKEY', examples\scope01.pas), line = 24
   441 2120 20 EC 20			jsr CRT.READKEY
   442 2123 B5 98 8D 4E 21		mva :STACKORIGIN,x KEY
   443 2128 CA				dex
   444 2129			@exit
   445 					.ifdef @new
   446 					@FreeMem #@VarData #@VarDataSize
   447 					eif
   448 2129 60				rts						; ret
   449 				.endl
   450 212A			l_0014
   451
   452 				; optimize FAIL ('MAINPROC', examples\scope01.pas), line = 28
   453 212A 20 10 21			jsr MAINPROC
   454
   455 				; ------------------------------------------------------------
   456
   457 = 214E			KEY	= DATAORIGIN+$000D
   458 = 214F			N1	= DATAORIGIN+$000E
   459 212D			@exit
   460
   461 212D A2 00		@halt	ldx #0
   462 212F 9A				txs
   463
   464 2130 60				rts
   465
   466 				; ------------------------------------------------------------
   467
   468 2131 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   469
   470 				; ------------------------------------------------------------
   471
   472 2141			.local	@DEFINES
   473 2141			ATARI
   474 				.endl
   475
   476 				.endl							; MAIN
   477
   478 				; ------------------------------------------------------------
   479 				; ------------------------------------------------------------
   480
   481 				.macro	UNITINITIALIZATION
   482 				
   483 					.ifdef MAIN.SYSTEM.@UnitInit
   484 					jsr MAIN.SYSTEM.@UnitInit
   485 					eif
   486 				
   487 					.ifdef MAIN.DOS.@UnitInit
   488 					jsr MAIN.DOS.@UnitInit
   489 					eif
   490 				
   491 					.ifdef MAIN.STRUTILS.@UnitInit
   492 					jsr MAIN.STRUTILS.@UnitInit
   493 					eif
   494 				
   495 					.ifdef MAIN.SYSUTILS.@UnitInit
   496 					jsr MAIN.SYSUTILS.@UnitInit
   497 					eif
   498 				
   499 					.ifdef MAIN.ATARI.@UnitInit
   500 					jsr MAIN.ATARI.@UnitInit
   501 					eif
   502 				
   503 					.ifdef MAIN.CRT.@UnitInit
   504 					jsr MAIN.CRT.@UnitInit
   505 					eif
   506 				.endm
   507
   508 				; ------------------------------------------------------------
   509
   510 					ift .SIZEOF(MAIN.SYSTEM) > 0
   511 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   511 				SYSTEM: $20E8..$20EB
   512 					eif
   513
   514 					ift .SIZEOF(MAIN.DOS) > 0
   515 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   516 					eif
   517
   518 					ift .SIZEOF(MAIN.STRUTILS) > 0
   519 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   520 					eif
   521
   522 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   523 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   524 					eif
   525
   526 					ift .SIZEOF(MAIN.ATARI) > 0
   527 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   528 					eif
   529
   530 					ift .SIZEOF(MAIN.CRT) > 0
   531 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   531 				CRT: $20EC..$20FC
   532 					eif
   533
   534 					.print 'CODE: ',CODEORIGIN,'..',*-1
   534 				CODE: $2000..$2140
   535
   536 				; ------------------------------------------------------------
   537
   538 2141			DATAORIGIN
   539 2141 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $0E
   540
   541 = 000F			VARINITSIZE	= *-DATAORIGIN
   542 = 000F			VARDATASIZE	= 15
   543
   544 = 2150			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   545
   546 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   546 				DATA: $2141..$2150
   547
   548 02E0-02E1> D3 20			run START
   549
   550 				; ------------------------------------------------------------
   551
   552 				.macro	STATICDATA
   553 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00
   554 				.endm
   555
   556 					end
