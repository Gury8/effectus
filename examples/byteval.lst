mads 2.1.0 build 4 (27 Oct 19)
  3726 					opt l+
    95
    96 				.print 'RUNLIB: ',RUNLIB,'..',*
    96 				RUNLIB: $204D..$2132
    97
    98 				; ------------------------------------------------------------
    99
   100 2132			START
   101 2132 BA				tsx
   102 2133 8E AD 21			stx MAIN.@halt+1
   103
   104 					.ifdef fmulinit
   105 					fmulinit
   106 					eif
   107
   108 = 0000			VLEN	= VARDATASIZE-VARINITSIZE
   109 = 21CE			VADR	= DATAORIGIN+VARINITSIZE
   110
   111 					ift VADR > $BFFF
   112 					ert 'Invalid memory address range ',VADR
   113 					eli (VLEN>0) && (VLEN<=256)
   114 					ldx #256-VLEN
   115 					lda #0
   116 					sta:rne VADR+VLEN-256,x+
   117 					eli VLEN>0
   118 					@fill #VADR #VLEN #0
   119 					eif
   120
   121 2136 A2 0F			ldx #$0f
   122 2138 BD 40 03 9D B0 21 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   123
   124 2141 E8				inx		; X = 0 !!!
   125 2142 86 8E			stx bp		; lo BP = 0
   126
   127 2144				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: byteval.a65]
   128
   129 2144			.local	MAIN						; PROCEDURE
   130
   131 2144 4C A9 21			jmp l_0054
   132
   133 				; ------------------------------------------------------------
   134
   135 2147			.local	SYSTEM						; UNIT
   136
   137 				; ------------------------------------------------------------
   138
   139 = 0648			M_PI_2	= $0648
   140 = 0192			D_PI_2	= $0192
   141 = 0004			D_PI_180	= $0004
   142 = 0000			MGTIA	= $0000
   143 = 0080			MVBXE	= $0080
   144 = 0000			VBXE_XDLADR	= $0000
   145 = 0100			VBXE_BCBADR	= $0100
   146 = 1000			VBXE_MAPADR	= $1000
   147 = 5000			VBXE_OVRADR	= $5000
   148 = B000			VBXE_WINDOW	= $B000
   149 = 0000			IDLI	= $0000
   150 = 0001			IVBL	= $0001
   151 = 00FE			CH_DELCHR	= $00FE
   152 = 009B			CH_ENTER	= $009B
   153 = 001B			CH_ESC	= $001B
   154 = 001C			CH_CURS_UP	= $001C
   155 = 001D			CH_CURS_DOWN	= $001D
   156 = 001E			CH_CURS_LEFT	= $001E
   157 = 001F			CH_CURS_RIGHT	= $001F
   158 = 007F			CH_TAB	= $007F
   159 = 009B			CH_EOL	= $009B
   160 = 007D			CH_CLR	= $007D
   161 = 00FD			CH_BELL	= $00FD
   162 = 007E			CH_DEL	= $007E
   163 = 009C			CH_DELLINE	= $009C
   164 = 009D			CH_INSLINE	= $009D
   165 = 0000			COLOR_BLACK	= $0000
   166 = 000E			COLOR_WHITE	= $000E
   167 = 0032			COLOR_RED	= $0032
   168 = 0096			COLOR_CYAN	= $0096
   169 = 0068			COLOR_VIOLET	= $0068
   170 = 00C4			COLOR_GREEN	= $00C4
   171 = 0074			COLOR_BLUE	= $0074
   172 = 00EE			COLOR_YELLOW	= $00EE
   173 = 0028			COLOR_ORANGE	= $0028
   174 = 00E4			COLOR_BROWN	= $00E4
   175 = 003C			COLOR_LIGHTRED	= $003C
   176 = 0004			COLOR_GRAY1	= $0004
   177 = 0006			COLOR_GRAY2	= $0006
   178 = 000A			COLOR_GRAY3	= $000A
   179 = 00CC			COLOR_LIGHTGREEN	= $00CC
   180 = 007C			COLOR_LIGHTBLUE	= $007C
   181 = 0004			FMOPENREAD	= $0004
   182 = 0008			FMOPENWRITE	= $0008
   183 = 0009			FMOPENAPPEND	= $0009
   184 = 000C			FMOPENREADWRITE	= $000C
   185 = 21C0			SCREENWIDTH	= DATAORIGIN+$0000
   186 = 21C2			SCREENHEIGHT	= DATAORIGIN+$0002
   187 = 21C4			DATESEPARATOR	= DATAORIGIN+$0004
   188 = D014			TVSYSTEM	= $D014
   189 = 02C0			adr.PALETTE	= $02C0
   190 2147			.var PALETTE	= adr.PALETTE .word
   191 = D012			adr.HPALETTE	= $D012
   192 2147			.var HPALETTE	= adr.HPALETTE .word
   193 = 21C5			FILEMODE	= DATAORIGIN+$0005
   194 = 21C6			SCREENMODE	= DATAORIGIN+$0006
   195 = 21C7			IORESULT	= DATAORIGIN+$0007
   196 = 21C8			EOLN	= DATAORIGIN+$0008
   197 = 21C9			RNDSEED	= DATAORIGIN+$0009
   198
   199 = 2147 C0 02		PALETTE
   199 = 2149 12 D0		HPALETTE
   199 				.endl							; UNIT SYSTEM
   200
   201 				; ------------------------------------------------------------
   202
   203 214B			.local	DOS						; UNIT
   204
   205 				; ------------------------------------------------------------
   206
   207 = D014			PALNTSC	= $D014
   208
   209 				.endl							; UNIT DOS
   210
   211 				; ------------------------------------------------------------
   212
   213 214B			.local	STRUTILS					; UNIT
   214
   215 				; ------------------------------------------------------------
   216
   217 				.endl							; UNIT STRUTILS
   218
   219 				; ------------------------------------------------------------
   220
   221 214B			.local	SYSUTILS					; UNIT
   222
   223 				; ------------------------------------------------------------
   224
   225 = 0001			FAREADONLY	= $0001
   226 = 0002			FAHIDDEN	= $0002
   227 = 0004			FASYSFILE	= $0004
   228 = 0008			FAVOLUMEID	= $0008
   229 = 0010			FADIRECTORY	= $0010
   230 = 0020			FAARCHIVE	= $0020
   231 = 003F			FAANYFILE	= $003F
   232
   233 				.endl							; UNIT SYSUTILS
   234
   235 				; ------------------------------------------------------------
   236
   237 214B			.local	ATARI						; UNIT
   238
   239 				; ------------------------------------------------------------
   240
   241 = 0012			RTCLOK	= $0012
   242 = 004D			ATRACT	= $004D
   243 = 0052			LMARGIN	= $0052
   244 = 0053			RMARGIN	= $0053
   245 = 0054			ROWCRS	= $0054
   246 = 0055			COLCRS	= $0055
   247 = 0057			DINDEX	= $0057
   248 = 0058			SAVMSC	= $0058
   249 = 006A			RAMTOP	= $006A
   250 = 0200			VDSLST	= $0200
   251 = 0230			SDLSTL	= $0230
   252 = 0290			TXTROW	= $0290
   253 = 0291			TXTCOL	= $0291
   254 = 0293			TINDEX	= $0293
   255 = 0294			TXTMSC	= $0294
   256 = 022F			SDMCTL	= $022F
   257 = 026F			GPRIOR	= $026F
   258 = 02F0			CRSINH	= $02F0
   259 = 02F3			CHACT	= $02F3
   260 = 02F4			CHBAS	= $02F4
   261 = 02FC			CH	= $02FC
   262 = 02C0			PCOLR0	= $02C0
   263 = 02C1			PCOLR1	= $02C1
   264 = 02C2			PCOLR2	= $02C2
   265 = 02C3			PCOLR3	= $02C3
   266 = 02C4			COLOR0	= $02C4
   267 = 02C5			COLOR1	= $02C5
   268 = 02C6			COLOR2	= $02C6
   269 = 02C7			COLOR3	= $02C7
   270 = 02C8			COLOR4	= $02C8
   271 = 02C8			COLBAKS	= $02C8
   272 = D000			HPOSP0	= $D000
   273 = D001			HPOSP1	= $D001
   274 = D002			HPOSP2	= $D002
   275 = D003			HPOSP3	= $D003
   276 = D004			HPOSM0	= $D004
   277 = D005			HPOSM1	= $D005
   278 = D006			HPOSM2	= $D006
   279 = D007			HPOSM3	= $D007
   280 = D008			SIZEP0	= $D008
   281 = D009			SIZEP1	= $D009
   282 = D00A			SIZEP2	= $D00A
   283 = D00B			SIZEP3	= $D00B
   284 = D00C			SIZEM	= $D00C
   285 = D00D			GRAFP0	= $D00D
   286 = D00E			GRAFP1	= $D00E
   287 = D00F			GRAFP2	= $D00F
   288 = D010			GRAFP3	= $D010
   289 = D011			GRAFM	= $D011
   290 = D004			P0PF	= $D004
   291 = D014			PAL	= $D014
   292 = D012			COLPM0	= $D012
   293 = D013			COLPM1	= $D013
   294 = D014			COLPM2	= $D014
   295 = D015			COLPM3	= $D015
   296 = D016			COLPF0	= $D016
   297 = D017			COLPF1	= $D017
   298 = D018			COLPF2	= $D018
   299 = D019			COLPF3	= $D019
   300 = D01A			COLBK	= $D01A
   301 = D01B			PRIOR	= $D01B
   302 = D01D			GRACTL	= $D01D
   303 = D01E			HITCLR	= $D01E
   304 = D200			AUDF1	= $D200
   305 = D201			AUDC1	= $D201
   306 = D202			AUDF2	= $D202
   307 = D203			AUDC2	= $D203
   308 = D204			AUDF3	= $D204
   309 = D205			AUDC3	= $D205
   310 = D206			AUDF4	= $D206
   311 = D207			AUDC4	= $D207
   312 = D208			AUDCTL	= $D208
   313 = D20F			SKSTAT	= $D20F
   314 = D301			PORTB	= $D301
   315 = D400			DMACTL	= $D400
   316 = D401			CHACTL	= $D401
   317 = D402			DLISTL	= $D402
   318 = D404			HSCROL	= $D404
   319 = D405			VSCROL	= $D405
   320 = D407			PMBASE	= $D407
   321 = D409			CHBASE	= $D409
   322 = D40A			WSYNC	= $D40A
   323 = D40B			VCOUNT	= $D40B
   324 = D40C			PENH	= $D40C
   325 = D40D			PENV	= $D40D
   326 = D40E			NMIEN	= $D40E
   327
   328 				.endl							; UNIT ATARI
   329
   330 				; ------------------------------------------------------------
   331
   332 214B			.local	CRT						; UNIT
   333
   334 				; ------------------------------------------------------------
   335
   336 = 21CB			TEXTATTR	= DATAORIGIN+$000B
   337 = D01F			CONSOL	= $D01F
   338 = 0000			CN_START_SELECT_OPTION	= $0000
   339 = 0001			CN_SELECT_OPTION	= $0001
   340 = 0002			CN_START_OPTION	= $0002
   341 = 0003			CN_OPTION	= $0003
   342 = 0004			CN_START_SELECT	= $0004
   343 = 0005			CN_SELECT	= $0005
   344 = 0006			CN_START	= $0006
   345 = 0007			CN_NONE	= $0007
   346 = 0000			BW40	= $0000
   347 = 0001			CO40	= $0001
   348 = 0002			BW80	= $0002
   349 = 0003			CO80	= $0003
   350 = 0007			MONO	= $0007
   351 = 0001			C40	= $0001
   352 = 0003			C80	= $0003
   353 = 0000			BLACK	= $0000
   354 = 0001			BLUE	= $0001
   355 = 0002			GREEN	= $0002
   356 = 0003			CYAN	= $0003
   357 = 0004			RED	= $0004
   358 = 0005			MAGENTA	= $0005
   359 = 0006			BROWN	= $0006
   360 = 0007			LIGHTGRAY	= $0007
   361 = 0008			DARKGRAY	= $0008
   362 = 0009			LIGHTBLUE	= $0009
   363 = 000A			LIGHTGREEN	= $000A
   364 = 000B			LIGHTCYAN	= $000B
   365 = 000C			LIGHTRED	= $000C
   366 = 000D			LIGHTMAGENTA	= $000D
   367 = 000E			YELLOW	= $000E
   368 = 000F			WHITE	= $000F
   369 = 0080			BLINK	= $0080
   370
   371 				.endl							; UNIT CRT
   372
   373 214B			.local	MAINPROC					; PROCEDURE
   374
   375 				; optimize FAIL (100, examples\byteval.pas), line = 17
   376 					@print #$7D
   376 				 LDY# $7D\ JSR @PRINT
   376 214B A0 7D		 LDY# $7D
   376 214D 20 52 20		 JSR @PRINT
   377
   378 				; optimize OK (examples\byteval.pas), line = 18
   379
   380 2150 A9 0E 8D CC 21		mva #$0E N2
   381
   382 				; optimize FAIL (100, examples\byteval.pas), line = 19
   383 					@printSTRING #CODEORIGIN+$000D
   383 				 LDY> CODEORIGIN+$000D\ LDA< CODEORIGIN+$000D\ JSR @PRINTSTRING
   383 2155 A0 20		 LDY> CODEORIGIN+$000D
   383 2157 A9 0D		 LDA< CODEORIGIN+$000D
   383 2159 20 5B 20		 JSR @PRINTSTRING
   384
   385 				; optimize FAIL (100, examples\byteval.pas), line = 20
   386 215C E8				inx
   387 215D AD FC 02 95 98		mva N1 :STACKORIGIN,x
   388 2162 20 9B 20			jsr @printBYTE
   389 2165 CA				dex
   390 2166 20 4D 20			@printEOL
   391
   392 				; optimize FAIL (100, examples\byteval.pas), line = 21
   393 					@printSTRING #CODEORIGIN+$001F
   393 				 LDY> CODEORIGIN+$001F\ LDA< CODEORIGIN+$001F\ JSR @PRINTSTRING
   393 2169 A0 20		 LDY> CODEORIGIN+$001F
   393 216B A9 1F		 LDA< CODEORIGIN+$001F
   393 216D 20 5B 20		 JSR @PRINTSTRING
   394
   395 				; optimize FAIL (100, examples\byteval.pas), line = 22
   396 2170 E8				inx
   397 2171 AD CC 21 95 98		mva N2 :STACKORIGIN,x
   398 2176 20 9B 20			jsr @printBYTE
   399 2179 CA				dex
   400 217A 20 4D 20			@printEOL
   401
   402 				; optimize FAIL (100, examples\byteval.pas), line = 23
   403 					@printSTRING #CODEORIGIN+$0030
   403 				 LDY> CODEORIGIN+$0030\ LDA< CODEORIGIN+$0030\ JSR @PRINTSTRING
   403 217D A0 20		 LDY> CODEORIGIN+$0030
   403 217F A9 30		 LDA< CODEORIGIN+$0030
   403 2181 20 5B 20		 JSR @PRINTSTRING
   404
   405 				; optimize FAIL (100, examples\byteval.pas), line = 24
   406 2184 E8				inx
   407 2185 AD CD 21 95 98		mva N3 :STACKORIGIN,x
   408 218A 20 9B 20			jsr @printBYTE
   409 218D CA				dex
   410 218E 20 4D 20			@printEOL
   411
   412 				; optimize OK (examples\byteval.pas), line = 25
   413
   414 2191 A9 FF 8D FC 02		mva #$FF N1
   415
   416 				; optimize OK (examples\byteval.pas), line = 26
   417
   418 2196 8D FC 02			sta N1
   419
   420 				; --- WhileProlog
   421 2199			l_00C9
   422
   423 				; optimize OK (examples\byteval.pas), line = 27
   424
   425 2199 AD FC 02			lda N1
   426 219C C9 FF			cmp #$FF
   427 219E D0 03			jne l_00D8
   428 21A0 4C 99 21			jmp l_00C9
   429 21A3			l_00D8
   430
   431 				; optimize OK (examples\byteval.pas), line = 29
   432
   433 21A3 A9 FF 8D FC 02		mva #$FF N1
   434
   435 				; ------------------------------------------------------------
   436
   437 = 02FC			N1	= $02FC
   438 = 21CC			N2	= DATAORIGIN+$000C
   439 = 21CD			N3	= DATAORIGIN+$000D
   440
   441 = 21CC			@VarData	= N2
   442 = 0002			@VarDataSize	= 2
   443
   444 21A8			@exit
   445 					.ifdef @new
   446 					@FreeMem #@VarData #@VarDataSize
   447 					eif
   448 21A8 60				rts						; ret
   449 				.endl
   450 21A9			l_0054
   451
   452 				; optimize FAIL ('MAINPROC', examples\byteval.pas), line = 33
   453 21A9 20 4B 21			jsr MAINPROC
   454
   455 				; ------------------------------------------------------------
   456
   457 21AC			@exit
   458
   459 21AC A2 00		@halt	ldx #0
   460 21AE 9A				txs
   461
   462 21AF 60				rts
   463
   464 				; ------------------------------------------------------------
   465
   466 21B0 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   467
   468 				; ------------------------------------------------------------
   469
   470 21C0			.local	@DEFINES
   471 21C0			ATARI
   472 				.endl
   473
   474 				.endl							; MAIN
   475
   476 				; ------------------------------------------------------------
   477 				; ------------------------------------------------------------
   478
   479 				.macro	UNITINITIALIZATION
   480 				
   481 					.ifdef MAIN.SYSTEM.@UnitInit
   482 					jsr MAIN.SYSTEM.@UnitInit
   483 					eif
   484 				
   485 					.ifdef MAIN.DOS.@UnitInit
   486 					jsr MAIN.DOS.@UnitInit
   487 					eif
   488 				
   489 					.ifdef MAIN.STRUTILS.@UnitInit
   490 					jsr MAIN.STRUTILS.@UnitInit
   491 					eif
   492 				
   493 					.ifdef MAIN.SYSUTILS.@UnitInit
   494 					jsr MAIN.SYSUTILS.@UnitInit
   495 					eif
   496 				
   497 					.ifdef MAIN.ATARI.@UnitInit
   498 					jsr MAIN.ATARI.@UnitInit
   499 					eif
   500 				
   501 					.ifdef MAIN.CRT.@UnitInit
   502 					jsr MAIN.CRT.@UnitInit
   503 					eif
   504 				.endm
   505
   506 				; ------------------------------------------------------------
   507
   508 					ift .SIZEOF(MAIN.SYSTEM) > 0
   509 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   509 				SYSTEM: $2147..$214A
   510 					eif
   511
   512 					ift .SIZEOF(MAIN.DOS) > 0
   513 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   514 					eif
   515
   516 					ift .SIZEOF(MAIN.STRUTILS) > 0
   517 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   518 					eif
   519
   520 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   521 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   522 					eif
   523
   524 					ift .SIZEOF(MAIN.ATARI) > 0
   525 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   526 					eif
   527
   528 					ift .SIZEOF(MAIN.CRT) > 0
   529 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   530 					eif
   531
   532 					.print 'CODE: ',CODEORIGIN,'..',*-1
   532 				CODE: $2000..$21BF
   533
   534 				; ------------------------------------------------------------
   535
   536 21C0			DATAORIGIN
   537 21C0 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $0C
   538
   539 = 000E			VARINITSIZE	= *-DATAORIGIN
   540 = 000E			VARDATASIZE	= 14
   541
   542 = 21CE			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   543
   544 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   544 				DATA: $21C0..$21CE
   545
   546 02E0-02E1> 32 21			run START
   547
   548 				; ------------------------------------------------------------
   549
   550 				.macro	STATICDATA
   551 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $10 $56 $61  $6C $75 $65 $20 $6F $66 $20 $37
   552 				.by  $36 $34 $20 $69 $73 $20 $00 $0F  $56 $61 $6C $75 $65 $20 $6F $66  $20 $4E $32 $20 $69 $73 $20 $00
   553 				.by  $1B $50 $72 $65 $64 $65 $63 $6C  $61 $72 $65 $64 $20 $76 $61 $6C  $75 $65 $20 $6F $66 $20 $4E $33
   554 				.by  $20 $69 $73 $20 $00
   555 				.endm
   556
   557 					end
