mads 2.1.0 build 8 (23 Dec 19)
   388 					opt l+
   101
   102 				.print 'ZPAGE: ',fxptr,'..',zpend-1
   102 				ZPAGE: $0080..$00D7
   103
   104 				.print 'RTLIB: ',RTLIB,'..',*-1
   104 				RTLIB: $2000..$2013
   105
   106 				; ------------------------------------------------------------
   107
   108 2014			START
   109 2014 BA				tsx
   110 2015 8E EA 20			stx MAIN.@halt+1
   111
   112 					.ifdef fmulinit
   113 					fmulinit
   114 					eif
   115
   116 = 0002			VLEN	= VARDATASIZE-VARINITSIZE
   117 = 2117			VADR	= DATAORIGIN+VARINITSIZE
   118
   119 					ift VADR > $BFFF
   120 					ert 'Invalid memory address range ',VADR
   121 					eli (VLEN>0) && (VLEN<=256)
   122 2018 A2 FE			ldx #256-VLEN
   123 201A A9 00			lda #0
   124 201C 9D 19 20 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   125 					eli VLEN>0
   126 					@fill #VADR #VLEN #0
   127 					eif
   128
   129 					.ifdef MAIN.@DEFINES.ROMOFF
   130 					icl 'atari\romoff.asm'
   131 					.endif
   132
   133 2022 A9 19 85 82 A9 21 + 	mwa #PROGRAMSTACK psptr
   134
   135 202A A2 0F			ldx #$0f					; DOS II+/D ParamStr
   136 202C BD 40 03 9D ED 20 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   137
   138 2035 E8				inx						; X = 0
   139 2036 86 90			stx bp						; BP = 0
   140
   141 2038 8E 08 D2			stx audctl					; reset POKEY
   142 203B A9 03			lda #3
   143 203D 8D 0F D2			sta skctl
   144
   145 2040 CA				dex						; X = 255
   146
   147 2041				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: rscroll.a65]
   148
   149 2041			.local	MAIN						; PROCEDURE
   150
   151 2041 4C E6 20			jmp l_0007
   152
   153 				; ------------------------------------------------------------
   154
   155 2044			.local	SYSTEM						; UNIT
   156
   157 2044			.local	RANDOM_0007					; FUNCTION | ASSEMBLER | OVERLOAD
   158
   159 				; ------------------------------------------------------------
   160
   161 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   162 				; as Pointer
   163 2044 B5 98 8D 08 21		mva :STACKORIGIN,x RANGE
   164 2049 CA				dex
   165
   166 				; ---------------------  ASM Block 006  ---------------------
   167
   168
   169 				;BYTE FUNC Rand(BYTE range)
   170 				; returns random number between 0 and
   171 				; range-1.  If range=0, then a random
   172 				; number between 0 and 255 is returned
   173
   174 204A AC 0A D2			ldy	$d20a		; RANDOM
   175
   176 204D AD 08 21			lda	range
   177 2050 F0 08			beq	stop
   178
   179 2052 85 8C			sta	ecx
   180 2054 84 84			sty	eax
   181
   182 2056 20 00 20			jsr	imulCL
   183 2059 A8				tay
   184
   185 205A 8C 09 21		stop	sty	Result
   186
   187 205D			@exit
   188
   189 				; ------------------------------------------------------------
   190
   191 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   192 				; as Pointer
   193
   194 205D E8				inx
   195 205E AD 09 21 95 98		mva RESULT :STACKORIGIN,x
   196
   197 					.ifdef @new
   198 					lda <@VarData
   199 					sta :ztmp
   200 					lda >@VarData
   201 					ldy #@VarDataSize-1
   202 					jmp @FreeMem
   203 					eif
   204
   205 				; ------------------------------------------------------------
   206
   207 = 2108			RANGE	= DATAORIGIN+$000B
   208 = 2109			RESULT	= DATAORIGIN+$000C
   209
   210 = 2108			@VarData	= RANGE
   211 = 0002			@VarDataSize	= 2
   212
   213 2063 60				rts						; ret
   214 				.endl
   215
   216 				; ------------------------------------------------------------
   217
   218 = 0101			__PORTB_BANKS	= $0101
   219 = 0648			M_PI_2	= $0648
   220 = 0192			D_PI_2	= $0192
   221 = 0004			D_PI_180	= $04
   222 = 0000			MGTIA	= $00
   223 = 0080			MVBXE	= $80
   224 = 0000			VBXE_XDLADR	= $00
   225 = 0100			VBXE_BCBADR	= $0100
   226 = 1000			VBXE_MAPADR	= $1000
   227 = 5000			VBXE_OVRADR	= $5000
   228 = B000			VBXE_WINDOW	= $B000
   229 = 0000			IDLI	= $00
   230 = 0001			IVBL	= $01
   231 = 00FE			CH_DELCHR	= $FE
   232 = 009B			CH_ENTER	= $9B
   233 = 001B			CH_ESC	= $1B
   234 = 001C			CH_CURS_UP	= $1C
   235 = 001D			CH_CURS_DOWN	= $1D
   236 = 001E			CH_CURS_LEFT	= $1E
   237 = 001F			CH_CURS_RIGHT	= $1F
   238 = 007F			CH_TAB	= $7F
   239 = 009B			CH_EOL	= $9B
   240 = 007D			CH_CLR	= $7D
   241 = 00FD			CH_BELL	= $FD
   242 = 007E			CH_DEL	= $7E
   243 = 009C			CH_DELLINE	= $9C
   244 = 009D			CH_INSLINE	= $9D
   245 = 0000			COLOR_BLACK	= $00
   246 = 000E			COLOR_WHITE	= $0E
   247 = 0032			COLOR_RED	= $32
   248 = 0096			COLOR_CYAN	= $96
   249 = 0068			COLOR_VIOLET	= $68
   250 = 00C4			COLOR_GREEN	= $C4
   251 = 0074			COLOR_BLUE	= $74
   252 = 00EE			COLOR_YELLOW	= $EE
   253 = 0028			COLOR_ORANGE	= $28
   254 = 00E4			COLOR_BROWN	= $E4
   255 = 003C			COLOR_LIGHTRED	= $3C
   256 = 0004			COLOR_GRAY1	= $04
   257 = 0006			COLOR_GRAY2	= $06
   258 = 000A			COLOR_GRAY3	= $0A
   259 = 00CC			COLOR_LIGHTGREEN	= $CC
   260 = 007C			COLOR_LIGHTBLUE	= $7C
   261 = 0004			FMOPENREAD	= $04
   262 = 0008			FMOPENWRITE	= $08
   263 = 0009			FMOPENAPPEND	= $09
   264 = 000C			FMOPENREADWRITE	= $0C
   265 = 20FD			SCREENWIDTH	= DATAORIGIN+$0000
   266 = 20FF			SCREENHEIGHT	= DATAORIGIN+$0002
   267 = 2101			DATESEPARATOR	= DATAORIGIN+$0004
   268 = D014			TVSYSTEM	= $D014
   269 = 02C0			adr.PALETTE	= $02C0
   270 2064			.var PALETTE	= adr.PALETTE .word
   271 = D012			adr.HPALETTE	= $D012
   272 2064			.var HPALETTE	= adr.HPALETTE .word
   273 = 2102			FILEMODE	= DATAORIGIN+$0005
   274 = 2103			GRAPHMODE	= DATAORIGIN+$0006
   275 = 2104			IORESULT	= DATAORIGIN+$0007
   276 = 2105			EOLN	= DATAORIGIN+$0008
   277 = 2106			RNDSEED	= DATAORIGIN+$0009
   278
   279 = 2064 C0 02		PALETTE
   279 = 2066 12 D0		HPALETTE
   279 				.endl							; UNIT SYSTEM
   280
   281 				; ------------------------------------------------------------
   282
   283 2068			.local	ATARI						; UNIT
   284
   285 				; ------------------------------------------------------------
   286
   287 = 0012			RTCLOK	= $12
   288 = 004D			ATRACT	= $4D
   289 = 0052			LMARGIN	= $52
   290 = 0053			RMARGIN	= $53
   291 = 0054			ROWCRS	= $54
   292 = 0055			COLCRS	= $55
   293 = 0057			DINDEX	= $57
   294 = 0058			SAVMSC	= $58
   295 = 0062			PALNTS	= $62
   296 = 006A			RAMTOP	= $6A
   297 = 0200			VDSLST	= $0200
   298 = 0230			SDLSTL	= $0230
   299 = 0290			TXTROW	= $0290
   300 = 0291			TXTCOL	= $0291
   301 = 0293			TINDEX	= $0293
   302 = 0294			TXTMSC	= $0294
   303 = 022F			SDMCTL	= $022F
   304 = 026F			GPRIOR	= $026F
   305 = 02F0			CRSINH	= $02F0
   306 = 02F3			CHACT	= $02F3
   307 = 02F4			CHBAS	= $02F4
   308 = 02FC			CH	= $02FC
   309 = 02C0			PCOLR0	= $02C0
   310 = 02C1			PCOLR1	= $02C1
   311 = 02C2			PCOLR2	= $02C2
   312 = 02C3			PCOLR3	= $02C3
   313 = 02C4			COLOR0	= $02C4
   314 = 02C5			COLOR1	= $02C5
   315 = 02C6			COLOR2	= $02C6
   316 = 02C7			COLOR3	= $02C7
   317 = 02C8			COLOR4	= $02C8
   318 = 02C8			COLBAKS	= $02C8
   319 = D000			HPOSP0	= $D000
   320 = D001			HPOSP1	= $D001
   321 = D002			HPOSP2	= $D002
   322 = D003			HPOSP3	= $D003
   323 = D004			HPOSM0	= $D004
   324 = D005			HPOSM1	= $D005
   325 = D006			HPOSM2	= $D006
   326 = D007			HPOSM3	= $D007
   327 = D008			SIZEP0	= $D008
   328 = D009			SIZEP1	= $D009
   329 = D00A			SIZEP2	= $D00A
   330 = D00B			SIZEP3	= $D00B
   331 = D00C			SIZEM	= $D00C
   332 = D00D			GRAFP0	= $D00D
   333 = D00E			GRAFP1	= $D00E
   334 = D00F			GRAFP2	= $D00F
   335 = D010			GRAFP3	= $D010
   336 = D011			GRAFM	= $D011
   337 = D004			P0PF	= $D004
   338 = D014			PAL	= $D014
   339 = D012			COLPM0	= $D012
   340 = D013			COLPM1	= $D013
   341 = D014			COLPM2	= $D014
   342 = D015			COLPM3	= $D015
   343 = D016			COLPF0	= $D016
   344 = D017			COLPF1	= $D017
   345 = D018			COLPF2	= $D018
   346 = D019			COLPF3	= $D019
   347 = D01A			COLBK	= $D01A
   348 = D01B			PRIOR	= $D01B
   349 = D01D			GRACTL	= $D01D
   350 = D01E			HITCLR	= $D01E
   351 = D200			AUDF1	= $D200
   352 = D201			AUDC1	= $D201
   353 = D202			AUDF2	= $D202
   354 = D203			AUDC2	= $D203
   355 = D204			AUDF3	= $D204
   356 = D205			AUDC3	= $D205
   357 = D206			AUDF4	= $D206
   358 = D207			AUDC4	= $D207
   359 = D208			AUDCTL	= $D208
   360 = D20F			SKSTAT	= $D20F
   361 = D301			PORTB	= $D301
   362 = D400			DMACTL	= $D400
   363 = D401			CHACTL	= $D401
   364 = D402			DLISTL	= $D402
   365 = D404			HSCROL	= $D404
   366 = D405			VSCROL	= $D405
   367 = D407			PMBASE	= $D407
   368 = D409			CHBASE	= $D409
   369 = D40A			WSYNC	= $D40A
   370 = D40B			VCOUNT	= $D40B
   371 = D40C			PENH	= $D40C
   372 = D40D			PENV	= $D40D
   373 = D40E			NMIEN	= $D40E
   374
   375 				.endl							; UNIT ATARI
   376
   377 				; ------------------------------------------------------------
   378
   379 2068			.local	CRT						; UNIT
   380
   381 				; ------------------------------------------------------------
   382
   383 = 210A			TEXTATTR	= DATAORIGIN+$000D
   384 = D01F			CONSOL	= $D01F
   385 = 0000			CN_START_SELECT_OPTION	= $00
   386 = 0001			CN_SELECT_OPTION	= $01
   387 = 0002			CN_START_OPTION	= $02
   388 = 0003			CN_OPTION	= $03
   389 = 0004			CN_START_SELECT	= $04
   390 = 0005			CN_SELECT	= $05
   391 = 0006			CN_START	= $06
   392 = 0007			CN_NONE	= $07
   393 = 0000			BW40	= $00
   394 = 0001			CO40	= $01
   395 = 0002			BW80	= $02
   396 = 0003			CO80	= $03
   397 = 0007			MONO	= $07
   398 = 0001			C40	= $01
   399 = 0003			C80	= $03
   400 = 0000			BLACK	= $00
   401 = 0001			BLUE	= $01
   402 = 0002			GREEN	= $02
   403 = 0003			CYAN	= $03
   404 = 0004			RED	= $04
   405 = 0005			MAGENTA	= $05
   406 = 0006			BROWN	= $06
   407 = 0007			LIGHTGRAY	= $07
   408 = 0008			DARKGRAY	= $08
   409 = 0009			LIGHTBLUE	= $09
   410 = 000A			LIGHTGREEN	= $0A
   411 = 000B			LIGHTCYAN	= $0B
   412 = 000C			LIGHTRED	= $0C
   413 = 000D			LIGHTMAGENTA	= $0D
   414 = 000E			YELLOW	= $0E
   415 = 000F			WHITE	= $0F
   416 = 0080			BLINK	= $80
   417
   418 				.endl							; UNIT CRT
   419
   420 2068			.local	MAINPROC					; PROCEDURE
   421
   422 				; optimize OK (examples\rscroll.pas), line = 21
   423
   424 2068 A9 01 8D 18 21		mva #$01 DIR
   425
   426 				; optimize OK (examples\rscroll.pas), line = 22
   427
   428 206D A5 58 8D 0D 21		mva SCRLOC SCREEN
   429 2072 A5 59 8D 0E 21		mva SCRLOC+1 SCREEN+1
   430
   431 				; --- RepeatUntilProlog
   432 2077			l_006A
   433 				; --- For
   434
   435 				; optimize OK (examples\rscroll.pas), line = 24
   436
   437 2077 A9 00 8D 0B 21		mva #$00 I
   438 207C 8D 0C 21			sta I+1
   439
   440 				; optimize OK (examples\rscroll.pas), line = 24
   441
   442 207F			l_0073
   443 				; --- ForToDoCondition
   444
   445 				; optimize OK (examples\rscroll.pas), line = 24
   446
   447 207F AD 0C 21			lda I+1
   448 2082 C9 03			cmp #$03
   449 2084 D0 05			bne @+
   450 2086 AD 0B 21			lda I
   451 2089 C9 C0			cmp #$C0
   452 208B			@
   453 208B B0 27			jcs l_007F
   454
   455 				; optimize OK (examples\rscroll.pas), line = 25
   456
   457 208D AD 17 21			lda CH
   458 2090 18 6D 0B 21			add I
   459 2094 85 A2			sta :STACKORIGIN+10
   460 2096 AD 0D 21			lda SCREEN
   461 2099 18 6D 0B 21			add I
   462 209D A8				tay
   463 209E AD 0E 21			lda SCREEN+1
   464 20A1 6D 0C 21			adc I+1
   465 20A4 85 91			sta :bp+1
   466 20A6 A5 A2			lda :STACKORIGIN+10
   467 20A8 91 90			sta (:bp),y
   468
   469 				; --- ForToDoEpilog
   470 20AA EE 0B 21			inc I
   471 20AD D0 D0			jne l_0073
   472 20AF EE 0C 21			inc I+1
   473 20B2 D0 CB			jne l_0073
   474 20B4			l_007F
   475
   476 				; optimize FAIL ('SYSTEM.RANDOM_0007', examples\rscroll.pas), line = 27
   477 20B4 E8				inx
   478 20B5 A9 0A 95 98			mva #$0A :STACKORIGIN,x
   479 20B9 20 44 20			jsr SYSTEM.RANDOM_0007
   480 20BC CA				dex
   481 20BD B5 99			lda :STACKORIGIN+1,x
   482 20BF D0 15			jne l_00A2
   483 20C1			@
   484
   485 				; optimize FAIL ('SYSTEM.RANDOM_0007', examples\rscroll.pas), line = 28
   486 20C1 E8				inx
   487 20C2 A9 08 95 98			mva #$08 :STACKORIGIN,x
   488 20C6 20 44 20			jsr SYSTEM.RANDOM_0007
   489 20C9 B4 98			ldy :STACKORIGIN,x
   490 20CB B9 0F 21 95 98		mva adr.NEW_DIR,y :STACKORIGIN,x
   491 20D0 B5 98 8D 18 21		mva :STACKORIGIN,x DIR
   492 20D5 CA				dex
   493 20D6			l_00A2
   494
   495 				; optimize OK (examples\rscroll.pas), line = 30
   496
   497 20D6 AD 17 21			lda CH
   498 20D9 18 6D 18 21			add DIR
   499 20DD 8D 17 21			sta CH
   500
   501 				; optimize OK (examples\rscroll.pas), line = 31
   502
   503 20E0 4C 77 20			jmp l_006A
   504
   505 				; ------------------------------------------------------------
   506
   507 = 210B			I	= DATAORIGIN+$000E
   508 = 0058			SCRLOC	= $58
   509 = 210D			SCREEN	= DATAORIGIN+$0010
   510 = 210F			adr.NEW_DIR	= DATAORIGIN+$0012
   511 20E3			.var NEW_DIR	= adr.NEW_DIR .word
   512 = 2117			CH	= DATAORIGIN+$001A
   513 = 2118			DIR	= DATAORIGIN+$001B
   514 = 03BF			@FORTMP_0070	= $03BF
   515
   516 = 210B			@VarData	= I
   517 = 000E			@VarDataSize	= 14
   518
   519 20E3			@exit
   520 					.ifdef @new
   521 					lda <@VarData
   522 					sta :ztmp
   523 					lda >@VarData
   524 					ldy #@VarDataSize-1
   525 					jmp @FreeMem
   526 					eif
   527 20E3 60				rts						; ret
   528 = 20E4 0F 21		NEW_DIR
   528 				.endl
   529 20E6			l_0007
   530
   531 				; optimize FAIL ('MAINPROC', examples\rscroll.pas), line = 35
   532 20E6 20 68 20			jsr MAINPROC
   533
   534 				; ------------------------------------------------------------
   535
   536 20E9			@exit
   537
   538 20E9 A2 00		@halt	ldx #0
   539 20EB 9A				txs
   540 					.ifdef MAIN.@DEFINES.ROMOFF
   541 					inc portb
   542 					.endif
   543
   544 20EC 60				rts
   545
   546 				; ------------------------------------------------------------
   547
   548 20ED 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   549
   550 				; ------------------------------------------------------------
   551
   552 20FD			.local	@DEFINES
   553 20FD			ATARI
   554 				.endl
   555
   556 				.endl							; MAIN
   557
   558 				; ------------------------------------------------------------
   559 				; ------------------------------------------------------------
   560
   561 				.macro	UNITINITIALIZATION
   562 				
   563 					.ifdef MAIN.SYSTEM.@UnitInit
   564 					jsr MAIN.SYSTEM.@UnitInit
   565 					eif
   566 				
   567 					.ifdef MAIN.ATARI.@UnitInit
   568 					jsr MAIN.ATARI.@UnitInit
   569 					eif
   570 				
   571 					.ifdef MAIN.CRT.@UnitInit
   572 					jsr MAIN.CRT.@UnitInit
   573 					eif
   574 				.endm
   575
   576 				; ------------------------------------------------------------
   577
   578 					ift .SIZEOF(MAIN.SYSTEM) > 0
   579 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   579 				SYSTEM: $2044..$2067
   580 					eif
   581
   582 					ift .SIZEOF(MAIN.ATARI) > 0
   583 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   584 					eif
   585
   586 					ift .SIZEOF(MAIN.CRT) > 0
   587 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   588 					eif
   589
   590 					.print 'CODE: ',CODEORIGIN,'..',*-1
   590 				CODE: $2000..$20FC
   591
   592 				; ------------------------------------------------------------
   593
   594 20FD			DATAORIGIN
   595 20FD 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $D7 $D8 $D9 $FF $01 $27
   596 2115 28 29		.by  $28 $29
   597
   598 = 001A			VARINITSIZE	= *-DATAORIGIN
   599 = 001C			VARDATASIZE	= 28
   600
   601 = 2119			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   602
   603 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   603 				DATA: $20FD..$2119
   604
   605 02E0-02E1> 14 20			run START
   606
   607 				; ------------------------------------------------------------
   608
   609 				.macro	STATICDATA
   610 				.endm
   611
   612 					end
