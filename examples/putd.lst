mads 2.1.0 build 8 (23 Dec 19)
   388 					opt l+
   101
   102 				.print 'ZPAGE: ',fxptr,'..',zpend-1
   102 				ZPAGE: $0080..$00D7
   103
   104 				.print 'RTLIB: ',RTLIB,'..',*-1
   104 				RTLIB: $200D..$20ED
   105
   106 				; ------------------------------------------------------------
   107
   108 20EE			START
   109 20EE BA				tsx
   110 20EF 8E 28 22			stx MAIN.@halt+1
   111
   112 					.ifdef fmulinit
   113 					fmulinit
   114 					eif
   115
   116 = 0119			VLEN	= VARDATASIZE-VARINITSIZE
   117 = 2250			VADR	= DATAORIGIN+VARINITSIZE
   118
   119 					ift VADR > $BFFF
   120 					ert 'Invalid memory address range ',VADR
   121 					eli (VLEN>0) && (VLEN<=256)
   122 					ldx #256-VLEN
   123 					lda #0
   124 					sta:rne VADR+VLEN-256,x+
   125 					eli VLEN>0
   126 					@fill #VADR #VLEN #0
   126 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #0 @FILL.PTR2\ JSR @FILL
   126 20F2 A9 50 85 88 A9 22 +  MWA #VADR @FILL.PTR1
   126 20FA A9 19 85 8C A9 01 +  MWA #VLEN @FILL.PTR3
   126 2102 A9 00 85 84		 MVA #0 @FILL.PTR2
   126 2106 20 A6 20		 JSR @FILL
   127 					eif
   128
   129 					.ifdef MAIN.@DEFINES.ROMOFF
   130 					icl 'atari\romoff.asm'
   131 					.endif
   132
   133 2109 A9 69 85 82 A9 23 + 	mwa #PROGRAMSTACK psptr
   134
   135 2111 A2 0F			ldx #$0f					; DOS II+/D ParamStr
   136 2113 BD 40 03 9D 2B 22 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   137
   138 211C E8				inx						; X = 0
   139 211D 86 90			stx bp						; BP = 0
   140
   141 211F 8E 08 D2			stx audctl					; reset POKEY
   142 2122 A9 03			lda #3
   143 2124 8D 0F D2			sta skctl
   144
   145 2127 CA				dex						; X = 255
   146
   147 2128				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: putd.a65]
Source: putd.a65
   148
   149 2128			.local	MAIN						; PROCEDURE
   150
   151 2128 4C 24 22			jmp l_0014
   152
   153 				; ------------------------------------------------------------
   154
   155 212B			.local	SYSTEM						; UNIT
   156
   157 				; ------------------------------------------------------------
   158
   159 = 0101			__PORTB_BANKS	= $0101
   160 = 0648			M_PI_2	= $0648
   161 = 0192			D_PI_2	= $0192
   162 = 0004			D_PI_180	= $04
   163 = 0000			MGTIA	= $00
   164 = 0080			MVBXE	= $80
   165 = 0000			VBXE_XDLADR	= $00
   166 = 0100			VBXE_BCBADR	= $0100
   167 = 1000			VBXE_MAPADR	= $1000
   168 = 5000			VBXE_OVRADR	= $5000
   169 = B000			VBXE_WINDOW	= $B000
   170 = 0000			IDLI	= $00
   171 = 0001			IVBL	= $01
   172 = 00FE			CH_DELCHR	= $FE
   173 = 009B			CH_ENTER	= $9B
   174 = 001B			CH_ESC	= $1B
   175 = 001C			CH_CURS_UP	= $1C
   176 = 001D			CH_CURS_DOWN	= $1D
   177 = 001E			CH_CURS_LEFT	= $1E
   178 = 001F			CH_CURS_RIGHT	= $1F
   179 = 007F			CH_TAB	= $7F
   180 = 009B			CH_EOL	= $9B
   181 = 007D			CH_CLR	= $7D
   182 = 00FD			CH_BELL	= $FD
   183 = 007E			CH_DEL	= $7E
   184 = 009C			CH_DELLINE	= $9C
   185 = 009D			CH_INSLINE	= $9D
   186 = 0000			COLOR_BLACK	= $00
   187 = 000E			COLOR_WHITE	= $0E
   188 = 0032			COLOR_RED	= $32
   189 = 0096			COLOR_CYAN	= $96
   190 = 0068			COLOR_VIOLET	= $68
   191 = 00C4			COLOR_GREEN	= $C4
   192 = 0074			COLOR_BLUE	= $74
   193 = 00EE			COLOR_YELLOW	= $EE
   194 = 0028			COLOR_ORANGE	= $28
   195 = 00E4			COLOR_BROWN	= $E4
   196 = 003C			COLOR_LIGHTRED	= $3C
   197 = 0004			COLOR_GRAY1	= $04
   198 = 0006			COLOR_GRAY2	= $06
   199 = 000A			COLOR_GRAY3	= $0A
   200 = 00CC			COLOR_LIGHTGREEN	= $CC
   201 = 007C			COLOR_LIGHTBLUE	= $7C
   202 = 0004			FMOPENREAD	= $04
   203 = 0008			FMOPENWRITE	= $08
   204 = 0009			FMOPENAPPEND	= $09
   205 = 000C			FMOPENREADWRITE	= $0C
   206 = 223D			SCREENWIDTH	= DATAORIGIN+$0000
   207 = 223F			SCREENHEIGHT	= DATAORIGIN+$0002
   208 = 2241			DATESEPARATOR	= DATAORIGIN+$0004
   209 = D014			TVSYSTEM	= $D014
   210 = 02C0			adr.PALETTE	= $02C0
   211 212B			.var PALETTE	= adr.PALETTE .word
   212 = D012			adr.HPALETTE	= $D012
   213 212B			.var HPALETTE	= adr.HPALETTE .word
   214 = 2242			FILEMODE	= DATAORIGIN+$0005
   215 = 2243			GRAPHMODE	= DATAORIGIN+$0006
   216 = 2244			IORESULT	= DATAORIGIN+$0007
   217 = 2245			EOLN	= DATAORIGIN+$0008
   218 = 2246			RNDSEED	= DATAORIGIN+$0009
   219
   220 = 212B C0 02		PALETTE
   220 = 212D 12 D0		HPALETTE
   220 				.endl							; UNIT SYSTEM
   221
   222 				; ------------------------------------------------------------
   223
   224 212F			.local	ATARI						; UNIT
   225
   226 				; ------------------------------------------------------------
   227
   228 = 0012			RTCLOK	= $12
   229 = 004D			ATRACT	= $4D
   230 = 0052			LMARGIN	= $52
   231 = 0053			RMARGIN	= $53
   232 = 0054			ROWCRS	= $54
   233 = 0055			COLCRS	= $55
   234 = 0057			DINDEX	= $57
   235 = 0058			SAVMSC	= $58
   236 = 0062			PALNTS	= $62
   237 = 006A			RAMTOP	= $6A
   238 = 0200			VDSLST	= $0200
   239 = 0230			SDLSTL	= $0230
   240 = 0290			TXTROW	= $0290
   241 = 0291			TXTCOL	= $0291
   242 = 0293			TINDEX	= $0293
   243 = 0294			TXTMSC	= $0294
   244 = 022F			SDMCTL	= $022F
   245 = 026F			GPRIOR	= $026F
   246 = 02F0			CRSINH	= $02F0
   247 = 02F3			CHACT	= $02F3
   248 = 02F4			CHBAS	= $02F4
   249 = 02FC			CH	= $02FC
   250 = 02C0			PCOLR0	= $02C0
   251 = 02C1			PCOLR1	= $02C1
   252 = 02C2			PCOLR2	= $02C2
   253 = 02C3			PCOLR3	= $02C3
   254 = 02C4			COLOR0	= $02C4
   255 = 02C5			COLOR1	= $02C5
   256 = 02C6			COLOR2	= $02C6
   257 = 02C7			COLOR3	= $02C7
   258 = 02C8			COLOR4	= $02C8
   259 = 02C8			COLBAKS	= $02C8
   260 = D000			HPOSP0	= $D000
   261 = D001			HPOSP1	= $D001
   262 = D002			HPOSP2	= $D002
   263 = D003			HPOSP3	= $D003
   264 = D004			HPOSM0	= $D004
   265 = D005			HPOSM1	= $D005
   266 = D006			HPOSM2	= $D006
   267 = D007			HPOSM3	= $D007
   268 = D008			SIZEP0	= $D008
   269 = D009			SIZEP1	= $D009
   270 = D00A			SIZEP2	= $D00A
   271 = D00B			SIZEP3	= $D00B
   272 = D00C			SIZEM	= $D00C
   273 = D00D			GRAFP0	= $D00D
   274 = D00E			GRAFP1	= $D00E
   275 = D00F			GRAFP2	= $D00F
   276 = D010			GRAFP3	= $D010
   277 = D011			GRAFM	= $D011
   278 = D004			P0PF	= $D004
   279 = D014			PAL	= $D014
   280 = D012			COLPM0	= $D012
   281 = D013			COLPM1	= $D013
   282 = D014			COLPM2	= $D014
   283 = D015			COLPM3	= $D015
   284 = D016			COLPF0	= $D016
   285 = D017			COLPF1	= $D017
   286 = D018			COLPF2	= $D018
   287 = D019			COLPF3	= $D019
   288 = D01A			COLBK	= $D01A
   289 = D01B			PRIOR	= $D01B
   290 = D01D			GRACTL	= $D01D
   291 = D01E			HITCLR	= $D01E
   292 = D200			AUDF1	= $D200
   293 = D201			AUDC1	= $D201
   294 = D202			AUDF2	= $D202
   295 = D203			AUDC2	= $D203
   296 = D204			AUDF3	= $D204
   297 = D205			AUDC3	= $D205
   298 = D206			AUDF4	= $D206
   299 = D207			AUDC4	= $D207
   300 = D208			AUDCTL	= $D208
   301 = D20F			SKSTAT	= $D20F
   302 = D301			PORTB	= $D301
   303 = D400			DMACTL	= $D400
   304 = D401			CHACTL	= $D401
   305 = D402			DLISTL	= $D402
   306 = D404			HSCROL	= $D404
   307 = D405			VSCROL	= $D405
   308 = D407			PMBASE	= $D407
   309 = D409			CHBASE	= $D409
   310 = D40A			WSYNC	= $D40A
   311 = D40B			VCOUNT	= $D40B
   312 = D40C			PENH	= $D40C
   313 = D40D			PENV	= $D40D
   314 = D40E			NMIEN	= $D40E
   315
   316 				.endl							; UNIT ATARI
   317
   318 				; ------------------------------------------------------------
   319
   320 212F			.local	CRT						; UNIT
   321
   322 				; ------------------------------------------------------------
   323
   324 = 2248			TEXTATTR	= DATAORIGIN+$000B
   325 = D01F			CONSOL	= $D01F
   326 = 0000			CN_START_SELECT_OPTION	= $00
   327 = 0001			CN_SELECT_OPTION	= $01
   328 = 0002			CN_START_OPTION	= $02
   329 = 0003			CN_OPTION	= $03
   330 = 0004			CN_START_SELECT	= $04
   331 = 0005			CN_SELECT	= $05
   332 = 0006			CN_START	= $06
   333 = 0007			CN_NONE	= $07
   334 = 0000			BW40	= $00
   335 = 0001			CO40	= $01
   336 = 0002			BW80	= $02
   337 = 0003			CO80	= $03
   338 = 0007			MONO	= $07
   339 = 0001			C40	= $01
   340 = 0003			C80	= $03
   341 = 0000			BLACK	= $00
   342 = 0001			BLUE	= $01
   343 = 0002			GREEN	= $02
   344 = 0003			CYAN	= $03
   345 = 0004			RED	= $04
   346 = 0005			MAGENTA	= $05
   347 = 0006			BROWN	= $06
   348 = 0007			LIGHTGRAY	= $07
   349 = 0008			DARKGRAY	= $08
   350 = 0009			LIGHTBLUE	= $09
   351 = 000A			LIGHTGREEN	= $0A
   352 = 000B			LIGHTCYAN	= $0B
   353 = 000C			LIGHTRED	= $0C
   354 = 000D			LIGHTMAGENTA	= $0D
   355 = 000E			YELLOW	= $0E
   356 = 000F			WHITE	= $0F
   357 = 0080			BLINK	= $80
   358
   359 				.endl							; UNIT CRT
   360
   361 				; ------------------------------------------------------------
   362
   363 212F			.local	DOS						; UNIT
   364
   365 				; ------------------------------------------------------------
   366
   367 = D014			PALNTSC	= $D014
   368
   369 				.endl							; UNIT DOS
   370
   371 				; ------------------------------------------------------------
   372
   373 212F			.local	STRUTILS					; UNIT
   374
   375 				; ------------------------------------------------------------
   376
   377 				.endl							; UNIT STRUTILS
   378
   379 				; ------------------------------------------------------------
   380
   381 212F			.local	SYSUTILS					; UNIT
   382
   383 				; ------------------------------------------------------------
   384
   385 = 0001			FAREADONLY	= $01
   386 = 0002			FAHIDDEN	= $02
   387 = 0004			FASYSFILE	= $04
   388 = 0008			FAVOLUMEID	= $08
   389 = 0010			FADIRECTORY	= $10
   390 = 0020			FAARCHIVE	= $20
   391 = 003F			FAANYFILE	= $3F
   392
   393 				.endl							; UNIT SYSUTILS
   394
   395 				; ------------------------------------------------------------
   396
   397 212F			.local	TYPES						; UNIT
   398
   399 				; ------------------------------------------------------------
   400
   401 				.endl							; UNIT TYPES
   402
   403 				; ------------------------------------------------------------
   404
   405 212F			.local	GRAPH						; UNIT
   406
   407 212F			.local	INITGRAPH_00A2					; PROCEDURE | OVERLOAD
   408
   409 				; ------------------------------------------------------------
   410
   411 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   412 				; as Pointer
   413 212F B5 98 8D 66 22		mva :STACKORIGIN,x MODE
   414 2134 CA				dex
   415
   416 				; ---------------------  ASM Block 078  ---------------------
   417
   418
   419 2135 8A 48			txa:pha
   420
   421 2137 AD 66 22			lda mode
   422 213A 8D 43 22			sta MAIN.SYSTEM.GraphMode
   423 213D 29 0F			and #$0f
   424 213F A8				tay
   425
   426 2140 A2 60			ldx #$60		; 6*16
   427 2142 AD 66 22			lda mode		; %00010000 with text window
   428 2145 29 10			and #$10
   429 2147 49 10			eor #$10
   430 2149 09 02			ora #2			; read
   431
   432 					.nowarn @GRAPHICS
   432 214B 20 3E 20		 JSR @GRAPHICS
   433
   434 214E 8C 51 22			sty GraphResult
   435
   436
   437 					.ifdef MAIN.@DEFINES.ROMOFF
   438 					inc portb
   439 					.endif
   440
   441 = EE6D			tlshc	equ $ee6d
   442
   443 2151 A6 57			ldx dindex
   444 2153 BC 6D EE			ldy tlshc,x
   445 2156 A9 05			lda #5
   446 2158 0A			shift	asl @
   447 2159 88				dey
   448 215A D0 FC			bne shift
   449
   450 215C 8D 65 22			sta SCANLINE_WIDTH
   451
   452 				; Fox/TQA
   453
   454 = 0057			dindex	equ $57
   455 = EE7D			tmccn	equ $ee7d
   456 = EE8D			tmrcn	equ $ee8d
   457
   458 215F A6 57			ldx dindex
   459 2161 BD 7D EE			lda tmccn,x
   460 2164 BC 8D EE			ldy tmrcn,x
   461 2167 A2 00			ldx #0
   462 2169 C9 40			cmp #<320
   463 216B D0 01 E8			sne:inx
   464
   465 				; X:A = horizontal resolution
   466 				; Y = vertical resolution
   467
   468 216E 20 78 20			@SCREENSIZE
   469
   470 					.ifdef MAIN.@DEFINES.ROMOFF
   471 					dec portb
   472 					.endif
   473
   474 2171 68 AA			pla:tax
   475
   476
   477 				; optimize OK (GRAPH), line = 132
   478
   479 2173 A5 58 8D 63 22		mva ATARI.SAVMSC VIDEORAM
   480 2178 A5 59 8D 64 22		mva ATARI.SAVMSC+1 VIDEORAM+1
   481
   482 				; ------------------------------------------------------------
   483
   484 = 2266			MODE	= DATAORIGIN+$0029
   485
   486 = 2266			@VarData	= MODE
   487 = 0001			@VarDataSize	= 1
   488
   489 217D			@exit
   490 					.ifdef @new
   491 					lda <@VarData
   492 					sta :ztmp
   493 					lda >@VarData
   494 					ldy #@VarDataSize-1
   495 					jmp @FreeMem
   496 					eif
   497 217D 60				rts						; ret
   498 				.endl
   499
   500 				; ------------------------------------------------------------
   501
   502 = 0080			CURRENTDRIVER	= $80
   503 = 0000			DETECT	= $00
   504 = 0001			CGA	= $01
   505 = 0002			MCGA	= $02
   506 = 0003			EGA	= $03
   507 = 0004			EGA64	= $04
   508 = 0005			EGAMONO	= $05
   509 = 0006			LOWRES	= $06
   510 = 0007			HERCMONO	= $07
   511 = 0009			VGA	= $09
   512 = 000A			VESA	= $0A
   513 = 000B			D1BIT	= $0B
   514 = 000C			D2BIT	= $0C
   515 = 000D			D4BIT	= $0D
   516 = 000E			D6BIT	= $0E
   517 = 000F			D8BIT	= $0F
   518 = 0010			D12BIT	= $10
   519 = 0018			M640X400	= $18
   520 = 0018			M640X480	= $18
   521 = 0001			GROK	= $01
   522 = 00FF			GRNOINITGRAPH	= $FF
   523 = 00FE			GRNOTDETECTED	= $FE
   524 = 00FD			GRFILENOTFOUND	= $FD
   525 = 00FC			GRINVALIDDRIVER	= $FC
   526 = 00FB			GRNOLOADMEM	= $FB
   527 = 00FA			GRNOSCANMEM	= $FA
   528 = 00F9			GRNOFLOODMEM	= $F9
   529 = 00F8			GRFONTNOTFOUND	= $F8
   530 = 00F7			GRNOFONTMEM	= $F7
   531 = 00F6			GRINVALIDMODE	= $F6
   532 = 00F5			GRERROR	= $F5
   533 = 00F4			GRIOERROR	= $F4
   534 = 00F3			GRINVALIDFONT	= $F3
   535 = 00F2			GRINVALIDFONTNUM	= $F2
   536 = 00EE			GRINVALIDVERSION	= $EE
   537 = 0000			CGAC0	= $00
   538 = 0001			CGAC1	= $01
   539 = 0002			CGAC2	= $02
   540 = 0003			CGAC3	= $03
   541 = 0004			CGAHI	= $04
   542 = 0000			MCGAC0	= $00
   543 = 0001			MCGAC1	= $01
   544 = 0002			MCGAC2	= $02
   545 = 0003			MCGAC3	= $03
   546 = 0004			MCGAMED	= $04
   547 = 0005			MCGAHI	= $05
   548 = 0000			EGALO	= $00
   549 = 0001			EGAHI	= $01
   550 = 0000			EGA64LO	= $00
   551 = 0001			EGA64HI	= $01
   552 = 0003			EGAMONOHI	= $03
   553 = 000A			VGALO	= $0A
   554 = 001F			VGAMED	= $1F
   555 = 0018			VGAHI	= $18
   556 = 2249			WIN_LEFT	= DATAORIGIN+$000C
   557 = 224B			WIN_RIGHT	= DATAORIGIN+$000E
   558 = 224D			WIN_TOP	= DATAORIGIN+$0010
   559 = 224F			WIN_BOTTOM	= DATAORIGIN+$0012
   560 = 2251			GRAPHRESULT	= DATAORIGIN+$0014
   561 = 2252			GETCOLOR	= DATAORIGIN+$0015
   562 = 2253			adr.LASTARCCOORDS	= DATAORIGIN+$0016
   563 217E			.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
   564 = 2253			LASTARCCOORDS.X	= DATAORIGIN+$0016
   565 = 2255			LASTARCCOORDS.Y	= DATAORIGIN+$0018
   566 = 2257			LASTARCCOORDS.XSTART	= DATAORIGIN+$001A
   567 = 2259			LASTARCCOORDS.YSTART	= DATAORIGIN+$001C
   568 = 225B			LASTARCCOORDS.XEND	= DATAORIGIN+$001E
   569 = 225D			LASTARCCOORDS.YEND	= DATAORIGIN+$0020
   570 = 225F			CURRENTX	= DATAORIGIN+$0022
   571 = 2261			CURRENTY	= DATAORIGIN+$0024
   572 = 2263			VIDEORAM	= DATAORIGIN+$0026
   573 = 2265			SCANLINE_WIDTH	= DATAORIGIN+$0028
   574
   575 = 217E 53 22		LASTARCCOORDS
   575 				.endl							; UNIT GRAPH
   576
   577 				; ------------------------------------------------------------
   578
   579 2180			.local	CIO						; UNIT
   580
   581 2180			.local	PUT						; PROCEDURE | ASSEMBLER
   582
   583 				; ------------------------------------------------------------
   584
   585 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   586 				; as Pointer
   587 2180 B5 98 8D 68 22		mva :STACKORIGIN,x A
   588 2185 CA				dex
   589
   590 				; ------------------------------------------------------------
   591
   592 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   593 				; as Pointer
   594 2186 B5 98 8D 67 22		mva :STACKORIGIN,x CHN
   595 218B CA				dex
   596
   597 				; ---------------------  ASM Block 097  ---------------------
   598
   599 218C 8A 48			txa:pha
   600
   601 218E AD 67 22			lda chn
   602 2191 0A 0A 0A 0A			:4 asl @
   603 2195 AA				tax
   604
   605 2196 A9 0B			lda #11		;put char command
   606 2198 9D 42 03			sta iccmd,x
   607
   608 219B A9 00			lda #$00	;zero out the unused
   609 219D 9D 48 03			sta icbufl,x	;store in accumulator
   610 21A0 9D 49 03			sta icbufh,x	;...after CIOV jump
   611
   612 21A3 AD 68 22			lda a
   613
   614 21A6				m@call	ciov
Macro: M@CALL [Source: rtl6502.asm]
    12 21A6 20 56 E4				jsr CIOV
Source: putd.a65
   615
   616 21A9 8C 44 22			sty MAIN.SYSTEM.IOResult
   617
   618 21AC 68 AA			pla:tax
   619
   620
   621 				; ------------------------------------------------------------
   622
   623 = 2267			CHN	= DATAORIGIN+$002A
   624 = 2268			A	= DATAORIGIN+$002B
   625
   626 = 2267			@VarData	= CHN
   627 = 0002			@VarDataSize	= 2
   628
   629 21AE			@exit
   630 					.ifdef @new
   631 					lda <@VarData
   632 					sta :ztmp
   633 					lda >@VarData
   634 					ldy #@VarDataSize-1
   635 					jmp @FreeMem
   636 					eif
   637 21AE 60				rts						; ret
   638 				.endl
   639
   640 				; ------------------------------------------------------------
   641
   642 				.endl							; UNIT CIO
   643
   644 21AF			.local	PUTD_TESTPROC					; PROCEDURE
   645
   646 				; optimize FAIL ('GRAPH.INITGRAPH_00A2', examples\putd.pas), line = 18
   647 21AF E8				inx
   648 21B0 A9 11 95 98			mva #$11 :STACKORIGIN,x
   649 21B4 20 2F 21			jsr GRAPH.INITGRAPH_00A2
   650
   651 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 19
   652 21B7 E8				inx
   653 21B8 A9 06 95 98			mva #$06 :STACKORIGIN,x
   654 21BC E8				inx
   655 21BD A9 41 95 98			mva #$41 :STACKORIGIN,x
   656 21C1 20 80 21			jsr CIO.PUT
   657
   658 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 20
   659 21C4 E8				inx
   660 21C5 A9 06 95 98			mva #$06 :STACKORIGIN,x
   661 21C9 E8				inx
   662 21CA A9 42 95 98			mva #$42 :STACKORIGIN,x
   663 21CE 20 80 21			jsr CIO.PUT
   664
   665 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 21
   666 21D1 E8				inx
   667 21D2 A9 06 95 98			mva #$06 :STACKORIGIN,x
   668 21D6 E8				inx
   669 21D7 A9 43 95 98			mva #$43 :STACKORIGIN,x
   670 21DB 20 80 21			jsr CIO.PUT
   671
   672 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 22
   673 21DE E8				inx
   674 21DF A9 06 95 98			mva #$06 :STACKORIGIN,x
   675 21E3 E8				inx
   676 21E4 A9 9B 95 98			mva #$9B :STACKORIGIN,x
   677 21E8 20 80 21			jsr CIO.PUT
   678
   679 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 23
   680 21EB E8				inx
   681 21EC A9 06 95 98			mva #$06 :STACKORIGIN,x
   682 21F0 E8				inx
   683 21F1 A9 44 95 98			mva #$44 :STACKORIGIN,x
   684 21F5 20 80 21			jsr CIO.PUT
   685
   686 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 24
   687 21F8 E8				inx
   688 21F9 A9 06 95 98			mva #$06 :STACKORIGIN,x
   689 21FD E8				inx
   690 21FE A9 45 95 98			mva #$45 :STACKORIGIN,x
   691 2202 20 80 21			jsr CIO.PUT
   692
   693 				; optimize FAIL ('CIO.PUT', examples\putd.pas), line = 25
   694 2205 E8				inx
   695 2206 A9 06 95 98			mva #$06 :STACKORIGIN,x
   696 220A E8				inx
   697 220B A9 46 95 98			mva #$46 :STACKORIGIN,x
   698 220F 20 80 21			jsr CIO.PUT
   699
   700 				; optimize OK (examples\putd.pas), line = 27
   701
   702 2212 A9 FF 8D FC 02		mva #$FF CH
   703
   704 				; --- RepeatUntilProlog
   705 2217			l_011C
   706
   707 				; optimize OK (examples\putd.pas), line = 29
   708
   709 2217 AD FC 02			lda CH
   710 221A C9 FF			cmp #$FF
   711 221C F0 F9			jeq l_011C
   712
   713 				; optimize OK (examples\putd.pas), line = 30
   714
   715 221E A9 FF 8D FC 02		mva #$FF CH
   716
   717 				; ------------------------------------------------------------
   718
   719 = 02FC			CH	= $02FC
   720 2223			@exit
   721 					.ifdef @new
   722 					lda <@VarData
   723 					sta :ztmp
   724 					lda >@VarData
   725 					ldy #@VarDataSize-1
   726 					jmp @FreeMem
   727 					eif
   728 2223 60				rts						; ret
   729 				.endl
   730 2224			l_0014
   731
   732 				; optimize FAIL ('PUTD_TESTPROC', examples\putd.pas), line = 34
   733 2224 20 AF 21			jsr PUTD_TESTPROC
   734
   735 				; ------------------------------------------------------------
   736
   737 = 2269			adr.STRBUFFER	= DATAORIGIN+$002C
   738 2227			.var STRBUFFER	= adr.STRBUFFER .word
   739 2227			@exit
   740
   741 2227 A2 00		@halt	ldx #0
   742 2229 9A				txs
   743 					.ifdef MAIN.@DEFINES.ROMOFF
   744 					inc portb
   745 					.endif
   746
   747 222A 60				rts
   748
   749 				; ------------------------------------------------------------
   750
   751 222B 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   752
   753 				; ------------------------------------------------------------
   754
   755 223B			.local	@DEFINES
   756 223B			ATARI
   757 				.endl
   758
   759 = 223B 69 22		STRBUFFER
   759 				.endl							; MAIN
   760
   761 				; ------------------------------------------------------------
   762 				; ------------------------------------------------------------
   763
   764 				.macro	UNITINITIALIZATION
   765 				
   766 					.ifdef MAIN.SYSTEM.@UnitInit
   767 					jsr MAIN.SYSTEM.@UnitInit
   768 					eif
   769 				
   770 					.ifdef MAIN.ATARI.@UnitInit
   771 					jsr MAIN.ATARI.@UnitInit
   772 					eif
   773 				
   774 					.ifdef MAIN.CRT.@UnitInit
   775 					jsr MAIN.CRT.@UnitInit
   776 					eif
   777 				
   778 					.ifdef MAIN.DOS.@UnitInit
   779 					jsr MAIN.DOS.@UnitInit
   780 					eif
   781 				
   782 					.ifdef MAIN.STRUTILS.@UnitInit
   783 					jsr MAIN.STRUTILS.@UnitInit
   784 					eif
   785 				
   786 					.ifdef MAIN.SYSUTILS.@UnitInit
   787 					jsr MAIN.SYSUTILS.@UnitInit
   788 					eif
   789 				
   790 					.ifdef MAIN.TYPES.@UnitInit
   791 					jsr MAIN.TYPES.@UnitInit
   792 					eif
   793 				
   794 					.ifdef MAIN.GRAPH.@UnitInit
   795 					jsr MAIN.GRAPH.@UnitInit
   796 					eif
   797 				
   798 					.ifdef MAIN.CIO.@UnitInit
   799 					jsr MAIN.CIO.@UnitInit
   800 					eif
   801 				.endm
   802
   803 				; ------------------------------------------------------------
   804
   805 					ift .SIZEOF(MAIN.SYSTEM) > 0
   806 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   806 				SYSTEM: $212B..$212E
   807 					eif
   808
   809 					ift .SIZEOF(MAIN.ATARI) > 0
   810 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   811 					eif
   812
   813 					ift .SIZEOF(MAIN.CRT) > 0
   814 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   815 					eif
   816
   817 					ift .SIZEOF(MAIN.DOS) > 0
   818 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   819 					eif
   820
   821 					ift .SIZEOF(MAIN.STRUTILS) > 0
   822 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   823 					eif
   824
   825 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   826 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   827 					eif
   828
   829 					ift .SIZEOF(MAIN.TYPES) > 0
   830 					.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
   831 					eif
   832
   833 					ift .SIZEOF(MAIN.GRAPH) > 0
   834 					.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
   834 				GRAPH: $212F..$217F
   835 					eif
   836
   837 					ift .SIZEOF(MAIN.CIO) > 0
   838 					.print 'CIO: ',MAIN.CIO,'..',MAIN.CIO+.SIZEOF(MAIN.CIO)-1
   838 				CIO: $2180..$21AE
   839 					eif
   840
   841 					.print 'CODE: ',CODEORIGIN,'..',*-1
   841 				CODE: $2000..$223C
   842
   843 				; ------------------------------------------------------------
   844
   845 223D			DATAORIGIN
   846 223D 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $27 $00  $00 $00 $17
   847
   848 = 0013			VARINITSIZE	= *-DATAORIGIN
   849 = 012C			VARDATASIZE	= 300
   850
   851 = 2369			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   852
   853 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   853 				DATA: $223D..$2369
   854
   855 02E0-02E1> EE 20			run START
   856
   857 				; ------------------------------------------------------------
   858
   859 				.macro	STATICDATA
   860 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00
   861 				.endm
   862
   863 					end
