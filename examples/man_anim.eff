; Effectus example
; - - - - - - - - - - - - - - - - - -
; Player animation demo

; Colors for players
BYTE ARRAY
  p0Color = [26 26 26 26],
  p1Color = [36 36 36 36]

; Player 0 data
BYTE ARRAY
  p0Frame1 = [0 0 12 8 28 28 28 24 
    24 16 25 61 127 127 94 220 220 
    156 156 160 188 28 44 52 116 96 
    96 0 0 0],
  p0Frame2 = [0 0 12 8 28 28 28 24 
    24 16 24 56 60 124 94 94 94 
    126 124 32 60 60 60 52 52 48 
    48 0 0 0],
  p0Frame3 = [0 0 0 12 8 28 28 28 
    24 24 16 56 60 60 92 92 94 
    102 124 124 32 60 58 54 54 6 
    6 6 0 0],
  p0Frame4 = [0 0 12 8 28 28 28 24 
    24 16 24 56 60 124 94 94 94 
    126 124 32 60 60 60 52 52 48 
    48 0 0 0]

; Player 1 data
BYTE ARRAY
  p1Frame1 = [28 28 60 60 60 60 60 56 
    24 8 1 1 0 0 32 32 32 
    32 32 156 128 33 19 11 3 3 
    128 192 224 96],
  p1Frame2 = [28 28 60 60 60 60 60 56 
    24 8 0 0 0 0 32 32 34 
    34 96 60 0 0 0 8 8 14 
    14 62 56 24],
  p1Frame3 = [0 28 28 60 60 60 60 60 
    56 24 8 0 0 0 32 32 38 
    30 0 0 28 0 4 200 192 240 
    128 128 7 7],
  p1Frame4 = [28 28 60 60 60 60 60 56 
    24 8 0 0 0 0 32 32 34 
    34 96 60 0 0 0 8 8 14 
    14 62 56 24]

BYTE PMBASE = $D407  ; PLAYER/MISSILE BASE ADDRESS
BYTE SDMCTL = $22F   ; PLAYER RESOLUTION
BYTE GRACTL = $D01D  ; 1 = MISSILE DMA, 2 = PLAYER DMA
BYTE RAMTOP = $6A    ; TOP OF RAM IN 256-BYTE PAGES
BYTE PRIOR  = 623    ; Priority Register
BYTE CH     = $2FC   ; KEYBOARD CODE OF LAST KEY PRESSED
CARD PMGMEM

BYTE ARRAY
  PCOLR(1) = $2C0,   ; PLAYER COLOR
  HPOSP(1) = $D000,  ; PLAYER HORIZONTAL POSITION
  SIZEP(1) = $D008   ; PLAYER SIZE

CARD ARRAY
  PCOLR33(1) = $3C0  ; PLAYER COLOR

BYTE px0 = [40]
BYTE px1 = [40]
BYTE py0 = [46]
BYTE height = [30]
BYTE frame = [1]
INT delay

PROC NextFrame()

IF frame = 1 THEN
  MoveBlock(PMGMEM + 512 + py0, p0Frame1, height)
  MoveBlock(PMGMEM + 640 + py0, p1Frame1, height)
ELSEIF frame = 2 THEN
  MoveBlock(PMGMEM + 512 + py0, p0Frame2, height)
  MoveBlock(PMGMEM + 640 + py0, p1Frame2, height)
ELSEIF frame = 3 THEN
  MoveBlock(PMGMEM + 512 + py0, p0Frame3, height)
  MoveBlock(PMGMEM + 640 + py0, p1Frame3, height)
ELSEIF frame = 4 THEN
  MoveBlock(PMGMEM + 512 + py0, p0Frame4, height)
  MoveBlock(PMGMEM + 640 + py0, p1Frame4, height)
FI

RETURN

PROC Playground()
BYTE i

SetColor(0, 11, 8)
SetColor(1, 0, 6)
SetColor(2, 11, 10)

FOR i = 26 to 42 DO
  color = i
  Plot(0, i) Drawto(159, i)
OD

color=1
Plot(0, 54) Drawto(159, 54)
Plot(0, 64) Drawto(159, 64)
color=2
FOR i = 55 to 63 DO
  Plot(0, i) Drawto(159, i)
OD

RETURN

PROC MAIN()

; Set environment
Graphics(7)
Poke(710, 0) Poke(712, 0) Poke(752, 1)
Playground()

; Set P/M graphics
GRACTL = 0
PMGMEM = RAMTOP - 24
PMBASE = PMGMEM
PMGMEM ==* 256

; P/M graphics double resolution
SDMCTL = 46

; Clear player memory
Zero(PMGMEM + 384, 511 + 128)

; Enable third color
PRIOR = 33

; Player normal size
Zero(SIZEP, 2)

; Turn on P/M graphics
GRACTL = 3

Print("Man running on the street")
HPOSP(0) = px0
HPOSP(1) = px1

CH=255
WHILE CH = 255 DO
  NextFrame()
  PCOLR(0) = p0Color(0)
  PCOLR(1) = p1Color(0)
  HPOSP(0) = PX0
  HPOSP(1) = PX1
  px0 ==+ 2
  px1 ==+ 2
  IF px0 > 210 THEN
    px0 = 40
    px1 = 40
  FI
  FOR delay = 0 TO 1500 DO OD
  frame ==+ 1
  IF frame > 4 THEN frame = 1 FI
OD

CH = 255

; TURN OFF P/M GRAPHICS
GRACTL = 0

RETURN
