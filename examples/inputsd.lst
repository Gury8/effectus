mads 2.1.0
  3726 					opt l+
    95
    96 				.print 'RUNLIB: ',RUNLIB,'..',*
    96 				RUNLIB: $20A1..$23DE
    97
    98 				; ------------------------------------------------------------
    99
   100 23DE			START
   101 23DE BA				tsx
   102 23DF 8E B6 25			stx MAIN.@halt+1
   103
   104 					.ifdef fmulinit
   105 					fmulinit
   106 					eif
   107
   108 = 0218			VLEN	= VARDATASIZE-VARINITSIZE
   109 = 25D5			VADR	= DATAORIGIN+VARINITSIZE
   110
   111 					ift VADR > $BFFF
   112 					ert 'Invalid memory address range ',VADR
   113 					eli (VLEN>0) && (VLEN<=256)
   114 					ldx #256-VLEN
   115 					lda #0
   116 					sta:rne VADR+VLEN-256,x+
   117 					eli VLEN>0
   118 					@fill #VADR #VLEN #0
   118 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #0 @FILL.PTR2\ JSR @FILL
   118 23E2 A9 D5 85 86 A9 25 +  MWA #VADR @FILL.PTR1
   118 23EA A9 18 85 8A A9 02 +  MWA #VLEN @FILL.PTR3
   118 23F2 A9 00 85 82		 MVA #0 @FILL.PTR2
   118 23F6 20 70 23		 JSR @FILL
   119 					eif
   120
   121 23F9 A2 0F			ldx #$0f
   122 23FB BD 40 03 9D B9 25 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   123
   124 2404 E8				inx		; X = 0 !!!
   125 2405 86 8E			stx bp		; lo BP = 0
   126
   127 2407				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: inputsd.a65]
Source: inputsd.a65
   128
   129 2407			.local	MAIN						; PROCEDURE
   130
   131 2407 4C A4 25			jmp l_00A8
   132
   133 				; ------------------------------------------------------------
   134
   135 240A			.local	SYSTEM						; UNIT
   136
   137 				; ------------------------------------------------------------
   138
   139 = 0648			M_PI_2	= $0648
   140 = 0192			D_PI_2	= $0192
   141 = 0004			D_PI_180	= $0004
   142 = 0000			MGTIA	= $0000
   143 = 0080			MVBXE	= $0080
   144 = 0000			VBXE_XDLADR	= $0000
   145 = 0100			VBXE_BCBADR	= $0100
   146 = 1000			VBXE_MAPADR	= $1000
   147 = 5000			VBXE_OVRADR	= $5000
   148 = B000			VBXE_WINDOW	= $B000
   149 = 0000			IDLI	= $0000
   150 = 0001			IVBL	= $0001
   151 = 00FE			CH_DELCHR	= $00FE
   152 = 009B			CH_ENTER	= $009B
   153 = 001B			CH_ESC	= $001B
   154 = 001C			CH_CURS_UP	= $001C
   155 = 001D			CH_CURS_DOWN	= $001D
   156 = 001E			CH_CURS_LEFT	= $001E
   157 = 001F			CH_CURS_RIGHT	= $001F
   158 = 007F			CH_TAB	= $007F
   159 = 009B			CH_EOL	= $009B
   160 = 007D			CH_CLR	= $007D
   161 = 00FD			CH_BELL	= $00FD
   162 = 007E			CH_DEL	= $007E
   163 = 009C			CH_DELLINE	= $009C
   164 = 009D			CH_INSLINE	= $009D
   165 = 0000			COLOR_BLACK	= $0000
   166 = 000E			COLOR_WHITE	= $000E
   167 = 0032			COLOR_RED	= $0032
   168 = 0096			COLOR_CYAN	= $0096
   169 = 0068			COLOR_VIOLET	= $0068
   170 = 00C4			COLOR_GREEN	= $00C4
   171 = 0074			COLOR_BLUE	= $0074
   172 = 00EE			COLOR_YELLOW	= $00EE
   173 = 0028			COLOR_ORANGE	= $0028
   174 = 00E4			COLOR_BROWN	= $00E4
   175 = 003C			COLOR_LIGHTRED	= $003C
   176 = 0004			COLOR_GRAY1	= $0004
   177 = 0006			COLOR_GRAY2	= $0006
   178 = 000A			COLOR_GRAY3	= $000A
   179 = 00CC			COLOR_LIGHTGREEN	= $00CC
   180 = 007C			COLOR_LIGHTBLUE	= $007C
   181 = 0004			FMOPENREAD	= $0004
   182 = 0008			FMOPENWRITE	= $0008
   183 = 0009			FMOPENAPPEND	= $0009
   184 = 000C			FMOPENREADWRITE	= $000C
   185 = 25CF			SCREENWIDTH	= DATAORIGIN+$0000
   186 = 25D1			SCREENHEIGHT	= DATAORIGIN+$0002
   187 = 25D3			DATESEPARATOR	= DATAORIGIN+$0004
   188 = D014			TVSYSTEM	= $D014
   189 = 02C0			adr.PALETTE	= $02C0
   190 240A			.var PALETTE	= adr.PALETTE .word
   191 = D012			adr.HPALETTE	= $D012
   192 240A			.var HPALETTE	= adr.HPALETTE .word
   193 = 25D4			FILEMODE	= DATAORIGIN+$0005
   194 = 25D5			SCREENMODE	= DATAORIGIN+$0006
   195 = 25D6			IORESULT	= DATAORIGIN+$0007
   196 = 25D7			EOLN	= DATAORIGIN+$0008
   197 = 25D8			RNDSEED	= DATAORIGIN+$0009
   198
   199 = 240A C0 02		PALETTE
   199 = 240C 12 D0		HPALETTE
   199 				.endl							; UNIT SYSTEM
   200
   201 				; ------------------------------------------------------------
   202
   203 240E			.local	DOS						; UNIT
   204
   205 				; ------------------------------------------------------------
   206
   207 = D014			PALNTSC	= $D014
   208
   209 				.endl							; UNIT DOS
   210
   211 				; ------------------------------------------------------------
   212
   213 240E			.local	STRUTILS					; UNIT
   214
   215 				; ------------------------------------------------------------
   216
   217 				.endl							; UNIT STRUTILS
   218
   219 				; ------------------------------------------------------------
   220
   221 240E			.local	SYSUTILS					; UNIT
   222
   223 				; ------------------------------------------------------------
   224
   225 = 0001			FAREADONLY	= $0001
   226 = 0002			FAHIDDEN	= $0002
   227 = 0004			FASYSFILE	= $0004
   228 = 0008			FAVOLUMEID	= $0008
   229 = 0010			FADIRECTORY	= $0010
   230 = 0020			FAARCHIVE	= $0020
   231 = 003F			FAANYFILE	= $003F
   232
   233 				.endl							; UNIT SYSUTILS
   234
   235 				; ------------------------------------------------------------
   236
   237 240E			.local	ATARI						; UNIT
   238
   239 				; ------------------------------------------------------------
   240
   241 = 0012			RTCLOK	= $0012
   242 = 004D			ATRACT	= $004D
   243 = 0052			LMARGIN	= $0052
   244 = 0053			RMARGIN	= $0053
   245 = 0054			ROWCRS	= $0054
   246 = 0055			COLCRS	= $0055
   247 = 0057			DINDEX	= $0057
   248 = 0058			SAVMSC	= $0058
   249 = 006A			RAMTOP	= $006A
   250 = 0200			VDSLST	= $0200
   251 = 0230			SDLSTL	= $0230
   252 = 0290			TXTROW	= $0290
   253 = 0291			TXTCOL	= $0291
   254 = 0293			TINDEX	= $0293
   255 = 0294			TXTMSC	= $0294
   256 = 022F			SDMCTL	= $022F
   257 = 026F			GPRIOR	= $026F
   258 = 02F0			CRSINH	= $02F0
   259 = 02F3			CHACT	= $02F3
   260 = 02F4			CHBAS	= $02F4
   261 = 02FC			CH	= $02FC
   262 = 02C0			PCOLR0	= $02C0
   263 = 02C1			PCOLR1	= $02C1
   264 = 02C2			PCOLR2	= $02C2
   265 = 02C3			PCOLR3	= $02C3
   266 = 02C4			COLOR0	= $02C4
   267 = 02C5			COLOR1	= $02C5
   268 = 02C6			COLOR2	= $02C6
   269 = 02C7			COLOR3	= $02C7
   270 = 02C8			COLOR4	= $02C8
   271 = 02C8			COLBAKS	= $02C8
   272 = D000			HPOSP0	= $D000
   273 = D001			HPOSP1	= $D001
   274 = D002			HPOSP2	= $D002
   275 = D003			HPOSP3	= $D003
   276 = D004			HPOSM0	= $D004
   277 = D005			HPOSM1	= $D005
   278 = D006			HPOSM2	= $D006
   279 = D007			HPOSM3	= $D007
   280 = D008			SIZEP0	= $D008
   281 = D009			SIZEP1	= $D009
   282 = D00A			SIZEP2	= $D00A
   283 = D00B			SIZEP3	= $D00B
   284 = D00C			SIZEM	= $D00C
   285 = D00D			GRAFP0	= $D00D
   286 = D00E			GRAFP1	= $D00E
   287 = D00F			GRAFP2	= $D00F
   288 = D010			GRAFP3	= $D010
   289 = D011			GRAFM	= $D011
   290 = D004			P0PF	= $D004
   291 = D014			PAL	= $D014
   292 = D012			COLPM0	= $D012
   293 = D013			COLPM1	= $D013
   294 = D014			COLPM2	= $D014
   295 = D015			COLPM3	= $D015
   296 = D016			COLPF0	= $D016
   297 = D017			COLPF1	= $D017
   298 = D018			COLPF2	= $D018
   299 = D019			COLPF3	= $D019
   300 = D01A			COLBK	= $D01A
   301 = D01B			PRIOR	= $D01B
   302 = D01D			GRACTL	= $D01D
   303 = D01E			HITCLR	= $D01E
   304 = D200			AUDF1	= $D200
   305 = D201			AUDC1	= $D201
   306 = D202			AUDF2	= $D202
   307 = D203			AUDC2	= $D203
   308 = D204			AUDF3	= $D204
   309 = D205			AUDC3	= $D205
   310 = D206			AUDF4	= $D206
   311 = D207			AUDC4	= $D207
   312 = D208			AUDCTL	= $D208
   313 = D20F			SKSTAT	= $D20F
   314 = D301			PORTB	= $D301
   315 = D400			DMACTL	= $D400
   316 = D401			CHACTL	= $D401
   317 = D402			DLISTL	= $D402
   318 = D404			HSCROL	= $D404
   319 = D405			VSCROL	= $D405
   320 = D407			PMBASE	= $D407
   321 = D409			CHBASE	= $D409
   322 = D40A			WSYNC	= $D40A
   323 = D40B			VCOUNT	= $D40B
   324 = D40C			PENH	= $D40C
   325 = D40D			PENV	= $D40D
   326 = D40E			NMIEN	= $D40E
   327
   328 				.endl							; UNIT ATARI
   329
   330 				; ------------------------------------------------------------
   331
   332 240E			.local	CRT						; UNIT
   333
   334 240E			.local	READKEY						; FUNCTION | ASSEMBLER
   335
   336 				; ---------------------  ASM Block 063  ---------------------
   337
   338 240E 8A 48			txa:pha
   339
   340 2410 20 60 23			@GetKey
   341
   342 2413 8D DB 25			sta Result
   343
   344 2416 68 AA			pla:tax
   345
   346 2418			@exit
   347
   348 				; ------------------------------------------------------------
   349
   350 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   351 				; as Pointer
   352
   353 2418 E8				inx						; add bx, 1
   354 2419 AD DB 25 95 98		mva RESULT :STACKORIGIN,x
   355
   356 					.ifdef @new
   357 					@FreeMem #@VarData #@VarDataSize
   358 					eif
   359
   360 				; ------------------------------------------------------------
   361
   362 = 25DB			RESULT	= DATAORIGIN+$000C
   363
   364 = 25DB			@VarData	= RESULT
   365 = 0001			@VarDataSize	= 1
   366
   367 241E 60				rts						; ret
   368 				.endl
   369
   370 				; ------------------------------------------------------------
   371
   372 = 25DA			TEXTATTR	= DATAORIGIN+$000B
   373 = D01F			CONSOL	= $D01F
   374 = 0000			CN_START_SELECT_OPTION	= $0000
   375 = 0001			CN_SELECT_OPTION	= $0001
   376 = 0002			CN_START_OPTION	= $0002
   377 = 0003			CN_OPTION	= $0003
   378 = 0004			CN_START_SELECT	= $0004
   379 = 0005			CN_SELECT	= $0005
   380 = 0006			CN_START	= $0006
   381 = 0007			CN_NONE	= $0007
   382 = 0000			BW40	= $0000
   383 = 0001			CO40	= $0001
   384 = 0002			BW80	= $0002
   385 = 0003			CO80	= $0003
   386 = 0007			MONO	= $0007
   387 = 0001			C40	= $0001
   388 = 0003			C80	= $0003
   389 = 0000			BLACK	= $0000
   390 = 0001			BLUE	= $0001
   391 = 0002			GREEN	= $0002
   392 = 0003			CYAN	= $0003
   393 = 0004			RED	= $0004
   394 = 0005			MAGENTA	= $0005
   395 = 0006			BROWN	= $0006
   396 = 0007			LIGHTGRAY	= $0007
   397 = 0008			DARKGRAY	= $0008
   398 = 0009			LIGHTBLUE	= $0009
   399 = 000A			LIGHTGREEN	= $000A
   400 = 000B			LIGHTCYAN	= $000B
   401 = 000C			LIGHTRED	= $000C
   402 = 000D			LIGHTMAGENTA	= $000D
   403 = 000E			YELLOW	= $000E
   404 = 000F			WHITE	= $000F
   405 = 0080			BLINK	= $0080
   406
   407 				.endl							; UNIT CRT
   408
   409 241F			.local	MAINPROC					; PROCEDURE
   410
   411 				; optimize FAIL (100, examples\inputsd.pas), line = 24
   412 					@print #$7D
   412 				 LDY# $7D\ JSR @PRINT
   412 241F A0 7D		 LDY# $7D
   412 2421 20 93 22		 JSR @PRINT
   413
   414 				; optimize FAIL (100, examples\inputsd.pas), line = 25
   415 					@printSTRING #CODEORIGIN+$000D
   415 				 LDY> CODEORIGIN+$000D\ LDA< CODEORIGIN+$000D\ JSR @PRINTSTRING
   415 2424 A0 20		 LDY> CODEORIGIN+$000D
   415 2426 A9 0D		 LDA< CODEORIGIN+$000D
   415 2428 20 9C 22		 JSR @PRINTSTRING
   416 242B 20 8E 22			@printEOL
   417
   418 				; optimize FAIL (100, examples\inputsd.pas), line = 26
   419 					@printSTRING #CODEORIGIN+$001E
   419 				 LDY> CODEORIGIN+$001E\ LDA< CODEORIGIN+$001E\ JSR @PRINTSTRING
   419 242E A0 20		 LDY> CODEORIGIN+$001E
   419 2430 A9 1E		 LDA< CODEORIGIN+$001E
   419 2432 20 9C 22		 JSR @PRINTSTRING
   420 2435 20 8E 22			@printEOL
   421
   422 				; optimize FAIL (100, examples\inputsd.pas), line = 27
   423 					@printSTRING #CODEORIGIN+$0044
   423 				 LDY> CODEORIGIN+$0044\ LDA< CODEORIGIN+$0044\ JSR @PRINTSTRING
   423 2438 A0 20		 LDY> CODEORIGIN+$0044
   423 243A A9 44		 LDA< CODEORIGIN+$0044
   423 243C 20 9C 22		 JSR @PRINTSTRING
   424 243F 20 8E 22			@printEOL
   425
   426 				; optimize FAIL (100, examples\inputsd.pas), line = 28
   427 					@printSTRING #CODEORIGIN+$0057
   427 				 LDY> CODEORIGIN+$0057\ LDA< CODEORIGIN+$0057\ JSR @PRINTSTRING
   427 2442 A0 20		 LDY> CODEORIGIN+$0057
   427 2444 A9 57		 LDA< CODEORIGIN+$0057
   427 2446 20 9C 22		 JSR @PRINTSTRING
   428 2449 20 8E 22			@printEOL
   429
   430 				; optimize FAIL (100, examples\inputsd.pas), line = 29
   431 					@printSTRING #CODEORIGIN+$0059
   431 				 LDY> CODEORIGIN+$0059\ LDA< CODEORIGIN+$0059\ JSR @PRINTSTRING
   431 244C A0 20		 LDY> CODEORIGIN+$0059
   431 244E A9 59		 LDA< CODEORIGIN+$0059
   431 2450 20 9C 22		 JSR @PRINTSTRING
   432 2453 20 8E 22			@printEOL
   433 				; AssignFile
   434
   435 				; optimize OK (examples\inputsd.pas), line = 30
   436
   437 2456 AD C9 25 85 90 AD + 	mwa F :bp2
   438 2460 A0 00			ldy #s@file.pfname
   439 2462 A9 70			lda #$70
   440 2464 91 90			sta (:bp2),y
   441 2466 C8				iny
   442 2467 A9 20			lda #$20
   443 2469 91 90			sta (:bp2),y
   444
   445 				; optimize OK (examples\inputsd.pas), line = 30
   446
   447 246B A0 05			ldy #s@file.status
   448 246D A9 00			lda #$00
   449 246F 91 90			sta (:bp2),y
   450 				; Reset
   451
   452 				; optimize OK (examples\inputsd.pas), line = 31
   453
   454 2471 A0 02			ldy #s@file.record
   455 2473 A9 01			lda #$01
   456 2475 91 90			sta (:bp2),y
   457 2477 C8				iny
   458 2478 A9 00			lda #$00
   459 247A 91 90			sta (:bp2),y
   460
   461 247C 8A 48			txa:pha
   462 247E 38				sec
   463 					@openfile F, MAIN.SYSTEM.FileMode
   463 				 LDY F+1\ LDA F\ LDX MAIN.SYSTEM.FILEMODE\ JSR @OPENFILE
   463 247F AC CA 25		 LDY F+1
   463 2482 AD C9 25		 LDA F
   463 2485 AE D4 25		 LDX MAIN.SYSTEM.FILEMODE
   463 2488 20 A1 20		 JSR @OPENFILE
   464 248B 68 AA			pla:tax
   465
   466 				; optimize FAIL (100, examples\inputsd.pas), line = 32
   467 					@printSTRING #CODEORIGIN+$0056
   467 				 LDY> CODEORIGIN+$0056\ LDA< CODEORIGIN+$0056\ JSR @PRINTSTRING
   467 248D A0 20		 LDY> CODEORIGIN+$0056
   467 248F A9 56		 LDA< CODEORIGIN+$0056
   467 2491 20 9C 22		 JSR @PRINTSTRING
   468 					@print #$9B
   468 				 LDY# $9B\ JSR @PRINT
   468 2494 A0 9B		 LDY# $9B
   468 2496 20 93 22		 JSR @PRINT
   469 					@printSTRING #CODEORIGIN+$007D
   469 				 LDY> CODEORIGIN+$007D\ LDA< CODEORIGIN+$007D\ JSR @PRINTSTRING
   469 2499 A0 20		 LDY> CODEORIGIN+$007D
   469 249B A9 7D		 LDA< CODEORIGIN+$007D
   469 249D 20 9C 22		 JSR @PRINTSTRING
   470 					@print #$9B
   470 				 LDY# $9B\ JSR @PRINT
   470 24A0 A0 9B		 LDY# $9B
   470 24A2 20 93 22		 JSR @PRINT
   471 					@printSTRING #CODEORIGIN+$0056
   471 				 LDY> CODEORIGIN+$0056\ LDA< CODEORIGIN+$0056\ JSR @PRINTSTRING
   471 24A5 A0 20		 LDY> CODEORIGIN+$0056
   471 24A7 A9 56		 LDA< CODEORIGIN+$0056
   471 24A9 20 9C 22		 JSR @PRINTSTRING
   472 				; BlockRead
   473
   474 				; optimize OK (examples\inputsd.pas), line = 33
   475
   476 24AC AD C9 25 85 90 AD + 	mwa F :bp2
   477 24B6 A0 06			ldy #s@file.buffer
   478 24B8 AD CD 25			lda STR_BUFFER1
   479 24BB 91 90			sta (:bp2),y
   480 24BD C8				iny
   481 24BE AD CE 25			lda STR_BUFFER1+1
   482 24C1 91 90			sta (:bp2),y
   483
   484 				; optimize OK (examples\inputsd.pas), line = 33
   485
   486 24C3 A0 08			ldy #s@file.nrecord
   487 24C5 A9 FF			lda #$FF
   488 24C7 91 90			sta (:bp2),y
   489 24C9 C8				iny
   490 24CA A9 00			lda #$00
   491 24CC 91 90			sta (:bp2),y
   492
   493 24CE 8A 48			txa:pha
   494 24D0 38				sec
   495 					@readfile F, #7
   495 				 LDY F+1\ LDA F\ LDX# 7\ JSR @READFILE
   495 24D1 AC CA 25		 LDY F+1
   495 24D4 AD C9 25		 LDA F
   495 24D7 A2 07		 LDX# 7
   495 24D9 20 75 21		 JSR @READFILE
   496 24DC 68 AA			pla:tax
   497
   498 				; optimize FAIL (100, examples\inputsd.pas), line = 34
   499 					@printSTRING STR_BUFFER1
   499 				 LDY STR_BUFFER1+1\ LDA STR_BUFFER1\ JSR @PRINTSTRING
   499 24DE AC CE 25		 LDY STR_BUFFER1+1
   499 24E1 AD CD 25		 LDA STR_BUFFER1
   499 24E4 20 9C 22		 JSR @PRINTSTRING
   500 24E7 20 8E 22			@printEOL
   501 				; CloseFile
   502
   503 24EA 8A 48			txa:pha
   504 24EC 38				sec
   505 					@closefile F
   505 				 LDY F+1\ LDA F\ JSR @CLOSEFILE
   505 24ED AC CA 25		 LDY F+1
   505 24F0 AD C9 25		 LDA F
   505 24F3 20 48 21		 JSR @CLOSEFILE
   506 24F6 68 AA			pla:tax
   507
   508 				; AssignFile
   509
   510 				; optimize OK (examples\inputsd.pas), line = 36
   511
   512 24F8 AD C9 25 85 90 AD + 	mwa F :bp2
   513 2502 A0 00			ldy #s@file.pfname
   514 2504 A9 70			lda #$70
   515 2506 91 90			sta (:bp2),y
   516 2508 C8				iny
   517 2509 A9 20			lda #$20
   518 250B 91 90			sta (:bp2),y
   519
   520 				; optimize OK (examples\inputsd.pas), line = 36
   521
   522 250D A0 05			ldy #s@file.status
   523 250F A9 00			lda #$00
   524 2511 91 90			sta (:bp2),y
   525 				; Reset
   526
   527 				; optimize OK (examples\inputsd.pas), line = 37
   528
   529 2513 A0 02			ldy #s@file.record
   530 2515 A9 01			lda #$01
   531 2517 91 90			sta (:bp2),y
   532 2519 C8				iny
   533 251A A9 00			lda #$00
   534 251C 91 90			sta (:bp2),y
   535
   536 251E 8A 48			txa:pha
   537 2520 38				sec
   538 					@openfile F, MAIN.SYSTEM.FileMode
   538 				 LDY F+1\ LDA F\ LDX MAIN.SYSTEM.FILEMODE\ JSR @OPENFILE
   538 2521 AC CA 25		 LDY F+1
   538 2524 AD C9 25		 LDA F
   538 2527 AE D4 25		 LDX MAIN.SYSTEM.FILEMODE
   538 252A 20 A1 20		 JSR @OPENFILE
   539 252D 68 AA			pla:tax
   540
   541 				; optimize FAIL (100, examples\inputsd.pas), line = 38
   542 					@printSTRING #CODEORIGIN+$0056
   542 				 LDY> CODEORIGIN+$0056\ LDA< CODEORIGIN+$0056\ JSR @PRINTSTRING
   542 252F A0 20		 LDY> CODEORIGIN+$0056
   542 2531 A9 56		 LDA< CODEORIGIN+$0056
   542 2533 20 9C 22		 JSR @PRINTSTRING
   543 					@print #$9B
   543 				 LDY# $9B\ JSR @PRINT
   543 2536 A0 9B		 LDY# $9B
   543 2538 20 93 22		 JSR @PRINT
   544 					@printSTRING #CODEORIGIN+$008F
   544 				 LDY> CODEORIGIN+$008F\ LDA< CODEORIGIN+$008F\ JSR @PRINTSTRING
   544 253B A0 20		 LDY> CODEORIGIN+$008F
   544 253D A9 8F		 LDA< CODEORIGIN+$008F
   544 253F 20 9C 22		 JSR @PRINTSTRING
   545 					@print #$9B
   545 				 LDY# $9B\ JSR @PRINT
   545 2542 A0 9B		 LDY# $9B
   545 2544 20 93 22		 JSR @PRINT
   546 					@printSTRING #CODEORIGIN+$0056
   546 				 LDY> CODEORIGIN+$0056\ LDA< CODEORIGIN+$0056\ JSR @PRINTSTRING
   546 2547 A0 20		 LDY> CODEORIGIN+$0056
   546 2549 A9 56		 LDA< CODEORIGIN+$0056
   546 254B 20 9C 22		 JSR @PRINTSTRING
   547 				; BlockRead
   548
   549 				; optimize OK (examples\inputsd.pas), line = 39
   550
   551 254E AD C9 25 85 90 AD + 	mwa F :bp2
   552 2558 A0 06			ldy #s@file.buffer
   553 255A AD CD 25			lda STR_BUFFER1
   554 255D 91 90			sta (:bp2),y
   555 255F C8				iny
   556 2560 AD CE 25			lda STR_BUFFER1+1
   557 2563 91 90			sta (:bp2),y
   558
   559 				; optimize OK (examples\inputsd.pas), line = 39
   560
   561 2565 A0 08			ldy #s@file.nrecord
   562 2567 A9 FF			lda #$FF
   563 2569 91 90			sta (:bp2),y
   564 256B C8				iny
   565 256C A9 00			lda #$00
   566 256E 91 90			sta (:bp2),y
   567
   568 2570 8A 48			txa:pha
   569 2572 38				sec
   570 					@readfile F, #7
   570 				 LDY F+1\ LDA F\ LDX# 7\ JSR @READFILE
   570 2573 AC CA 25		 LDY F+1
   570 2576 AD C9 25		 LDA F
   570 2579 A2 07		 LDX# 7
   570 257B 20 75 21		 JSR @READFILE
   571 257E 68 AA			pla:tax
   572
   573 				; optimize FAIL (100, examples\inputsd.pas), line = 40
   574 					@printSTRING STR_BUFFER1
   574 				 LDY STR_BUFFER1+1\ LDA STR_BUFFER1\ JSR @PRINTSTRING
   574 2580 AC CE 25		 LDY STR_BUFFER1+1
   574 2583 AD CD 25		 LDA STR_BUFFER1
   574 2586 20 9C 22		 JSR @PRINTSTRING
   575 2589 20 8E 22			@printEOL
   576 				; CloseFile
   577
   578 258C 8A 48			txa:pha
   579 258E 38				sec
   580 					@closefile F
   580 				 LDY F+1\ LDA F\ JSR @CLOSEFILE
   580 258F AC CA 25		 LDY F+1
   580 2592 AD C9 25		 LDA F
   580 2595 20 48 21		 JSR @CLOSEFILE
   581 2598 68 AA			pla:tax
   582
   583 				; optimize FAIL ('CRT.READKEY', examples\inputsd.pas), line = 42
   584 259A 20 0E 24			jsr CRT.READKEY
   585 259D B5 98 8D EC 26		mva :STACKORIGIN,x KEY
   586 25A2 CA				dex
   587 25A3			@exit
   588 					.ifdef @new
   589 					@FreeMem #@VarData #@VarDataSize
   590 					eif
   591 25A3 60				rts						; ret
   592 				.endl
   593 25A4			l_00A8
   594
   595 				; optimize FAIL ('MAINPROC', examples\inputsd.pas), line = 46
   596 25A4 20 1F 24			jsr MAINPROC
   597 				; CloseFile
   598
   599 25A7 8A 48			txa:pha
   600 25A9 38				sec
   601 					@closefile F
   601 				 LDY F+1\ LDA F\ JSR @CLOSEFILE
   601 25AA AC CA 25		 LDY F+1
   601 25AD AD C9 25		 LDA F
   601 25B0 20 48 21		 JSR @CLOSEFILE
   602 25B3 68 AA			pla:tax
   603
   604 				; ------------------------------------------------------------
   605
   606 = 25DC			INTVALUE	= DATAORIGIN+$000D
   607 25B5			.var F	= DATAORIGIN+$0011 .word
   608 = 25EC			adr.STRBUFFER	= DATAORIGIN+$001D
   609 25B5			.var STRBUFFER	= adr.STRBUFFER .word
   610 = 26EC			KEY	= DATAORIGIN+$011D
   611 = 26ED			adr.STR_BUFFER1	= DATAORIGIN+$011E
   612 25B5			.var STR_BUFFER1	= adr.STR_BUFFER1 .word
   613 25B5			@exit
   614
   615 25B5 A2 00		@halt	ldx #0
   616 25B7 9A				txs
   617
   618 25B8 60				rts
   619
   620 				; ------------------------------------------------------------
   621
   622 25B9 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   623
   624 				; ------------------------------------------------------------
   625
   626 25C9			.local	@DEFINES
   627 25C9			ATARI
   628 				.endl
   629
   630 = 25C9 E0 25		F
   630 = 25CB EC 25		STRBUFFER
   630 = 25CD ED 26		STR_BUFFER1
   630 				.endl							; MAIN
   631
   632 				; ------------------------------------------------------------
   633 				; ------------------------------------------------------------
   634
   635 				.macro	UNITINITIALIZATION
   636 				
   637 					.ifdef MAIN.SYSTEM.@UnitInit
   638 					jsr MAIN.SYSTEM.@UnitInit
   639 					eif
   640 				
   641 					.ifdef MAIN.DOS.@UnitInit
   642 					jsr MAIN.DOS.@UnitInit
   643 					eif
   644 				
   645 					.ifdef MAIN.STRUTILS.@UnitInit
   646 					jsr MAIN.STRUTILS.@UnitInit
   647 					eif
   648 				
   649 					.ifdef MAIN.SYSUTILS.@UnitInit
   650 					jsr MAIN.SYSUTILS.@UnitInit
   651 					eif
   652 				
   653 					.ifdef MAIN.ATARI.@UnitInit
   654 					jsr MAIN.ATARI.@UnitInit
   655 					eif
   656 				
   657 					.ifdef MAIN.CRT.@UnitInit
   658 					jsr MAIN.CRT.@UnitInit
   659 					eif
   660 				.endm
   661
   662 				; ------------------------------------------------------------
   663
   664 					ift .SIZEOF(MAIN.SYSTEM) > 0
   665 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   665 				SYSTEM: $240A..$240D
   666 					eif
   667
   668 					ift .SIZEOF(MAIN.DOS) > 0
   669 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   670 					eif
   671
   672 					ift .SIZEOF(MAIN.STRUTILS) > 0
   673 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   674 					eif
   675
   676 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   677 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   678 					eif
   679
   680 					ift .SIZEOF(MAIN.ATARI) > 0
   681 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   682 					eif
   683
   684 					ift .SIZEOF(MAIN.CRT) > 0
   685 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   685 				CRT: $240E..$241E
   686 					eif
   687
   688 					.print 'CODE: ',CODEORIGIN,'..',*-1
   688 				CODE: $2000..$25CE
   689
   690 				; ------------------------------------------------------------
   691
   692 25CF			DATAORIGIN
   693 25CF 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
   694
   695 = 0006			VARINITSIZE	= *-DATAORIGIN
   696 = 021E			VARDATASIZE	= 542
   697
   698 = 27ED			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   699
   700 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   700 				DATA: $25CF..$27ED
   701
   702 02E0-02E1> DE 23			run START
   703
   704 				; ------------------------------------------------------------
   705
   706 				.macro	STATICDATA
   707 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $0F $44 $65  $76 $69 $63 $65 $20 $49 $2F $4F
   708 				.by  $20 $64 $65 $6D $6F $00 $24 $75  $73 $69 $6E $67 $20 $49 $6E $70  $75 $74 $53 $44 $20 $61 $6E $64
   709 				.by  $20 $49 $6E $70 $75 $74 $4D $44  $20 $70 $72 $6F $63 $65 $64 $75  $72 $65 $73 $00 $11 $74 $6F $20
   710 				.by  $72 $65 $61 $64 $20 $74 $65 $78  $74 $20 $66 $69 $6C $65 $00 $00  $00 $15 $53 $61 $6D $70 $6C $65
   711 				.by  $20 $66 $69 $6C $65 $3A $20 $54  $45 $53 $54 $2E $54 $58 $54 $00  $0B $48 $31 $3A $54 $45 $53 $54
   712 				.by  $2E $54 $58 $54 $00 $10 $49 $6E  $70 $75 $74 $53 $44 $20 $65 $78  $61 $6D $70 $6C $65 $3A $00 $10
   713 				.by  $49 $6E $70 $75 $74 $4D $44 $20  $65 $78 $61 $6D $70 $6C $65 $3A  $00
   714 				.endm
   715
   716 					end
