mads 2.1.0
  3726 					opt l+
    95
    96 				.print 'RUNLIB: ',RUNLIB,'..',*
    96 				RUNLIB: $20B0..$21D5
    97
    98 				; ------------------------------------------------------------
    99
   100 21D5			START
   101 21D5 BA				tsx
   102 21D6 8E 1F 24			stx MAIN.@halt+1
   103
   104 					.ifdef fmulinit
   105 					fmulinit
   106 					eif
   107
   108 = 00FA			VLEN	= VARDATASIZE-VARINITSIZE
   109 = 264E			VADR	= DATAORIGIN+VARINITSIZE
   110
   111 					ift VADR > $BFFF
   112 					ert 'Invalid memory address range ',VADR
   113 					eli (VLEN>0) && (VLEN<=256)
   114 21D9 A2 06			ldx #256-VLEN
   115 21DB A9 00			lda #0
   116 21DD 9D 48 26 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   117 					eli VLEN>0
   118 					@fill #VADR #VLEN #0
   119 					eif
   120
   121 21E3 A2 0F			ldx #$0f
   122 21E5 BD 40 03 9D 22 24 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   123
   124 21EE E8				inx		; X = 0 !!!
   125 21EF 86 8E			stx bp		; lo BP = 0
   126
   127 21F1				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: scompare.a65]
   128
   129 21F1			.local	MAIN						; PROCEDURE
   130
   131 21F1 4C 1B 24			jmp l_00B7
   132
   133 				; ------------------------------------------------------------
   134
   135 21F4			.local	SYSTEM						; UNIT
   136
   137 				; ------------------------------------------------------------
   138
   139 = 0648			M_PI_2	= $0648
   140 = 0192			D_PI_2	= $0192
   141 = 0004			D_PI_180	= $0004
   142 = 0000			MGTIA	= $0000
   143 = 0080			MVBXE	= $0080
   144 = 0000			VBXE_XDLADR	= $0000
   145 = 0100			VBXE_BCBADR	= $0100
   146 = 1000			VBXE_MAPADR	= $1000
   147 = 5000			VBXE_OVRADR	= $5000
   148 = B000			VBXE_WINDOW	= $B000
   149 = 0000			IDLI	= $0000
   150 = 0001			IVBL	= $0001
   151 = 00FE			CH_DELCHR	= $00FE
   152 = 009B			CH_ENTER	= $009B
   153 = 001B			CH_ESC	= $001B
   154 = 001C			CH_CURS_UP	= $001C
   155 = 001D			CH_CURS_DOWN	= $001D
   156 = 001E			CH_CURS_LEFT	= $001E
   157 = 001F			CH_CURS_RIGHT	= $001F
   158 = 007F			CH_TAB	= $007F
   159 = 009B			CH_EOL	= $009B
   160 = 007D			CH_CLR	= $007D
   161 = 00FD			CH_BELL	= $00FD
   162 = 007E			CH_DEL	= $007E
   163 = 009C			CH_DELLINE	= $009C
   164 = 009D			CH_INSLINE	= $009D
   165 = 0000			COLOR_BLACK	= $0000
   166 = 000E			COLOR_WHITE	= $000E
   167 = 0032			COLOR_RED	= $0032
   168 = 0096			COLOR_CYAN	= $0096
   169 = 0068			COLOR_VIOLET	= $0068
   170 = 00C4			COLOR_GREEN	= $00C4
   171 = 0074			COLOR_BLUE	= $0074
   172 = 00EE			COLOR_YELLOW	= $00EE
   173 = 0028			COLOR_ORANGE	= $0028
   174 = 00E4			COLOR_BROWN	= $00E4
   175 = 003C			COLOR_LIGHTRED	= $003C
   176 = 0004			COLOR_GRAY1	= $0004
   177 = 0006			COLOR_GRAY2	= $0006
   178 = 000A			COLOR_GRAY3	= $000A
   179 = 00CC			COLOR_LIGHTGREEN	= $00CC
   180 = 007C			COLOR_LIGHTBLUE	= $007C
   181 = 0004			FMOPENREAD	= $0004
   182 = 0008			FMOPENWRITE	= $0008
   183 = 0009			FMOPENAPPEND	= $0009
   184 = 000C			FMOPENREADWRITE	= $000C
   185 = 2432			SCREENWIDTH	= DATAORIGIN+$0000
   186 = 2434			SCREENHEIGHT	= DATAORIGIN+$0002
   187 = 2436			DATESEPARATOR	= DATAORIGIN+$0004
   188 = D014			TVSYSTEM	= $D014
   189 = 02C0			adr.PALETTE	= $02C0
   190 21F4			.var PALETTE	= adr.PALETTE .word
   191 = D012			adr.HPALETTE	= $D012
   192 21F4			.var HPALETTE	= adr.HPALETTE .word
   193 = 2437			FILEMODE	= DATAORIGIN+$0005
   194 = 2438			SCREENMODE	= DATAORIGIN+$0006
   195 = 2439			IORESULT	= DATAORIGIN+$0007
   196 = 243A			EOLN	= DATAORIGIN+$0008
   197 = 243B			RNDSEED	= DATAORIGIN+$0009
   198
   199 = 21F4 C0 02		PALETTE
   199 = 21F6 12 D0		HPALETTE
   199 				.endl							; UNIT SYSTEM
   200
   201 				; ------------------------------------------------------------
   202
   203 21F8			.local	DOS						; UNIT
   204
   205 				; ------------------------------------------------------------
   206
   207 = D014			PALNTSC	= $D014
   208
   209 				.endl							; UNIT DOS
   210
   211 				; ------------------------------------------------------------
   212
   213 21F8			.local	STRUTILS					; UNIT
   214
   215 				; ------------------------------------------------------------
   216
   217 				.endl							; UNIT STRUTILS
   218
   219 				; ------------------------------------------------------------
   220
   221 21F8			.local	SYSUTILS					; UNIT
   222
   223 				; ------------------------------------------------------------
   224
   225 = 0001			FAREADONLY	= $0001
   226 = 0002			FAHIDDEN	= $0002
   227 = 0004			FASYSFILE	= $0004
   228 = 0008			FAVOLUMEID	= $0008
   229 = 0010			FADIRECTORY	= $0010
   230 = 0020			FAARCHIVE	= $0020
   231 = 003F			FAANYFILE	= $003F
   232
   233 				.endl							; UNIT SYSUTILS
   234
   235 				; ------------------------------------------------------------
   236
   237 21F8			.local	ATARI						; UNIT
   238
   239 				; ------------------------------------------------------------
   240
   241 = 0012			RTCLOK	= $0012
   242 = 004D			ATRACT	= $004D
   243 = 0052			LMARGIN	= $0052
   244 = 0053			RMARGIN	= $0053
   245 = 0054			ROWCRS	= $0054
   246 = 0055			COLCRS	= $0055
   247 = 0057			DINDEX	= $0057
   248 = 0058			SAVMSC	= $0058
   249 = 006A			RAMTOP	= $006A
   250 = 0200			VDSLST	= $0200
   251 = 0230			SDLSTL	= $0230
   252 = 0290			TXTROW	= $0290
   253 = 0291			TXTCOL	= $0291
   254 = 0293			TINDEX	= $0293
   255 = 0294			TXTMSC	= $0294
   256 = 022F			SDMCTL	= $022F
   257 = 026F			GPRIOR	= $026F
   258 = 02F0			CRSINH	= $02F0
   259 = 02F3			CHACT	= $02F3
   260 = 02F4			CHBAS	= $02F4
   261 = 02FC			CH	= $02FC
   262 = 02C0			PCOLR0	= $02C0
   263 = 02C1			PCOLR1	= $02C1
   264 = 02C2			PCOLR2	= $02C2
   265 = 02C3			PCOLR3	= $02C3
   266 = 02C4			COLOR0	= $02C4
   267 = 02C5			COLOR1	= $02C5
   268 = 02C6			COLOR2	= $02C6
   269 = 02C7			COLOR3	= $02C7
   270 = 02C8			COLOR4	= $02C8
   271 = 02C8			COLBAKS	= $02C8
   272 = D000			HPOSP0	= $D000
   273 = D001			HPOSP1	= $D001
   274 = D002			HPOSP2	= $D002
   275 = D003			HPOSP3	= $D003
   276 = D004			HPOSM0	= $D004
   277 = D005			HPOSM1	= $D005
   278 = D006			HPOSM2	= $D006
   279 = D007			HPOSM3	= $D007
   280 = D008			SIZEP0	= $D008
   281 = D009			SIZEP1	= $D009
   282 = D00A			SIZEP2	= $D00A
   283 = D00B			SIZEP3	= $D00B
   284 = D00C			SIZEM	= $D00C
   285 = D00D			GRAFP0	= $D00D
   286 = D00E			GRAFP1	= $D00E
   287 = D00F			GRAFP2	= $D00F
   288 = D010			GRAFP3	= $D010
   289 = D011			GRAFM	= $D011
   290 = D004			P0PF	= $D004
   291 = D014			PAL	= $D014
   292 = D012			COLPM0	= $D012
   293 = D013			COLPM1	= $D013
   294 = D014			COLPM2	= $D014
   295 = D015			COLPM3	= $D015
   296 = D016			COLPF0	= $D016
   297 = D017			COLPF1	= $D017
   298 = D018			COLPF2	= $D018
   299 = D019			COLPF3	= $D019
   300 = D01A			COLBK	= $D01A
   301 = D01B			PRIOR	= $D01B
   302 = D01D			GRACTL	= $D01D
   303 = D01E			HITCLR	= $D01E
   304 = D200			AUDF1	= $D200
   305 = D201			AUDC1	= $D201
   306 = D202			AUDF2	= $D202
   307 = D203			AUDC2	= $D203
   308 = D204			AUDF3	= $D204
   309 = D205			AUDC3	= $D205
   310 = D206			AUDF4	= $D206
   311 = D207			AUDC4	= $D207
   312 = D208			AUDCTL	= $D208
   313 = D20F			SKSTAT	= $D20F
   314 = D301			PORTB	= $D301
   315 = D400			DMACTL	= $D400
   316 = D401			CHACTL	= $D401
   317 = D402			DLISTL	= $D402
   318 = D404			HSCROL	= $D404
   319 = D405			VSCROL	= $D405
   320 = D407			PMBASE	= $D407
   321 = D409			CHBASE	= $D409
   322 = D40A			WSYNC	= $D40A
   323 = D40B			VCOUNT	= $D40B
   324 = D40C			PENH	= $D40C
   325 = D40D			PENV	= $D40D
   326 = D40E			NMIEN	= $D40E
   327
   328 				.endl							; UNIT ATARI
   329
   330 				; ------------------------------------------------------------
   331
   332 21F8			.local	CRT						; UNIT
   333
   334 21F8			.local	READKEY						; FUNCTION | ASSEMBLER
   335
   336 				; ---------------------  ASM Block 063  ---------------------
   337
   338 21F8 8A 48			txa:pha
   339
   340 21FA 20 C5 21			@GetKey
   341
   342 21FD 8D 3E 24			sta Result
   343
   344 2200 68 AA			pla:tax
   345
   346 2202			@exit
   347
   348 				; ------------------------------------------------------------
   349
   350 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   351 				; as Pointer
   352
   353 2202 E8				inx						; add bx, 1
   354 2203 AD 3E 24 95 98		mva RESULT :STACKORIGIN,x
   355
   356 					.ifdef @new
   357 					@FreeMem #@VarData #@VarDataSize
   358 					eif
   359
   360 				; ------------------------------------------------------------
   361
   362 = 243E			RESULT	= DATAORIGIN+$000C
   363
   364 = 243E			@VarData	= RESULT
   365 = 0001			@VarDataSize	= 1
   366
   367 2208 60				rts						; ret
   368 				.endl
   369
   370 				; ------------------------------------------------------------
   371
   372 = 243D			TEXTATTR	= DATAORIGIN+$000B
   373 = D01F			CONSOL	= $D01F
   374 = 0000			CN_START_SELECT_OPTION	= $0000
   375 = 0001			CN_SELECT_OPTION	= $0001
   376 = 0002			CN_START_OPTION	= $0002
   377 = 0003			CN_OPTION	= $0003
   378 = 0004			CN_START_SELECT	= $0004
   379 = 0005			CN_SELECT	= $0005
   380 = 0006			CN_START	= $0006
   381 = 0007			CN_NONE	= $0007
   382 = 0000			BW40	= $0000
   383 = 0001			CO40	= $0001
   384 = 0002			BW80	= $0002
   385 = 0003			CO80	= $0003
   386 = 0007			MONO	= $0007
   387 = 0001			C40	= $0001
   388 = 0003			C80	= $0003
   389 = 0000			BLACK	= $0000
   390 = 0001			BLUE	= $0001
   391 = 0002			GREEN	= $0002
   392 = 0003			CYAN	= $0003
   393 = 0004			RED	= $0004
   394 = 0005			MAGENTA	= $0005
   395 = 0006			BROWN	= $0006
   396 = 0007			LIGHTGRAY	= $0007
   397 = 0008			DARKGRAY	= $0008
   398 = 0009			LIGHTBLUE	= $0009
   399 = 000A			LIGHTGREEN	= $000A
   400 = 000B			LIGHTCYAN	= $000B
   401 = 000C			LIGHTRED	= $000C
   402 = 000D			LIGHTMAGENTA	= $000D
   403 = 000E			YELLOW	= $000E
   404 = 000F			WHITE	= $000F
   405 = 0080			BLINK	= $0080
   406
   407 				.endl							; UNIT CRT
   408
   409 2209			.local	MAINPROC					; PROCEDURE
   410
   411 				; optimize FAIL (100, examples\scompare.pas), line = 26
   412 					@printSTRING #CODEORIGIN+$001B
   412 				 LDY> CODEORIGIN+$001B\ LDA< CODEORIGIN+$001B\ JSR @PRINTSTRING
   412 2209 A0 20		 LDY> CODEORIGIN+$001B
   412 220B A9 1B		 LDA< CODEORIGIN+$001B
   412 220D 20 D8 20		 JSR @PRINTSTRING
   413 2210 20 CA 20			@printEOL
   414
   415 				; optimize FAIL (100, examples\scompare.pas), line = 27
   416 					@printSTRING #CODEORIGIN+$001D
   416 				 LDY> CODEORIGIN+$001D\ LDA< CODEORIGIN+$001D\ JSR @PRINTSTRING
   416 2213 A0 20		 LDY> CODEORIGIN+$001D
   416 2215 A9 1D		 LDA< CODEORIGIN+$001D
   416 2217 20 D8 20		 JSR @PRINTSTRING
   417
   418 				; optimize FAIL (100, examples\scompare.pas), line = 28
   419 					@printSTRING STR1
   419 				 LDY STR1+1\ LDA STR1\ JSR @PRINTSTRING
   419 221A AC 16 24		 LDY STR1+1
   419 221D AD 15 24		 LDA STR1
   419 2220 20 D8 20		 JSR @PRINTSTRING
   420 2223 20 CA 20			@printEOL
   421
   422 				; optimize FAIL (100, examples\scompare.pas), line = 29
   423 					@printSTRING #CODEORIGIN+$0024
   423 				 LDY> CODEORIGIN+$0024\ LDA< CODEORIGIN+$0024\ JSR @PRINTSTRING
   423 2226 A0 20		 LDY> CODEORIGIN+$0024
   423 2228 A9 24		 LDA< CODEORIGIN+$0024
   423 222A 20 D8 20		 JSR @PRINTSTRING
   424
   425 				; optimize FAIL (100, examples\scompare.pas), line = 30
   426 					@printSTRING STR2
   426 				 LDY STR2+1\ LDA STR2\ JSR @PRINTSTRING
   426 222D AC 18 24		 LDY STR2+1
   426 2230 AD 17 24		 LDA STR2
   426 2233 20 D8 20		 JSR @PRINTSTRING
   427 2236 20 CA 20			@printEOL
   428
   429 				; optimize FAIL (100, examples\scompare.pas), line = 31
   430 					@printSTRING #CODEORIGIN+$002B
   430 				 LDY> CODEORIGIN+$002B\ LDA< CODEORIGIN+$002B\ JSR @PRINTSTRING
   430 2239 A0 20		 LDY> CODEORIGIN+$002B
   430 223B A9 2B		 LDA< CODEORIGIN+$002B
   430 223D 20 D8 20		 JSR @PRINTSTRING
   431
   432 				; optimize FAIL (100, examples\scompare.pas), line = 32
   433 					@printSTRING STR3
   433 				 LDY STR3+1\ LDA STR3\ JSR @PRINTSTRING
   433 2240 AC 1A 24		 LDY STR3+1
   433 2243 AD 19 24		 LDA STR3
   433 2246 20 D8 20		 JSR @PRINTSTRING
   434 2249 20 CA 20			@printEOL
   435
   436 				; optimize OK (examples\scompare.pas), line = 33
   437
   438 224C A0 FF			ldy #$FF
   439 224E A9 FF			lda #$FF
   440 2250 8D 43 24			sta VALUE
   441 2253 8C 44 24			sty VALUE+1
   442 2256 8C 45 24			sty VALUE+2
   443 2259 8C 46 24			sty VALUE+3
   444
   445 				; optimize FAIL (100, examples\scompare.pas), line = 34
   446 					@printSTRING #CODEORIGIN+$0032
   446 				 LDY> CODEORIGIN+$0032\ LDA< CODEORIGIN+$0032\ JSR @PRINTSTRING
   446 225C A0 20		 LDY> CODEORIGIN+$0032
   446 225E A9 32		 LDA< CODEORIGIN+$0032
   446 2260 20 D8 20		 JSR @PRINTSTRING
   447 2263 20 CA 20			@printEOL
   448
   449 				; optimize FAIL (100, examples\scompare.pas), line = 35
   450 2266 E8				inx
   451 2267 AD 43 24 95 98		mva VALUE :STACKORIGIN,x
   452 226C AD 44 24 95 A8		mva VALUE+1 :STACKORIGIN+STACKWIDTH,x
   453 2271 AD 45 24 95 B8		mva VALUE+2 :STACKORIGIN+STACKWIDTH*2,x
   454 2276 AD 46 24 95 C8		mva VALUE+3 :STACKORIGIN+STACKWIDTH*3,x
   455 227B 20 24 21			jsr @printINT
   456 227E CA				dex
   457 227F 20 CA 20			@printEOL
   458
   459 				; optimize FAIL (100, examples\scompare.pas), line = 36
   460 					@printSTRING #CODEORIGIN+$001A
   460 				 LDY> CODEORIGIN+$001A\ LDA< CODEORIGIN+$001A\ JSR @PRINTSTRING
   460 2282 A0 20		 LDY> CODEORIGIN+$001A
   460 2284 A9 1A		 LDA< CODEORIGIN+$001A
   460 2286 20 D8 20		 JSR @PRINTSTRING
   461 2289 20 CA 20			@printEOL
   462
   463 				; optimize OK (examples\scompare.pas), line = 37
   464
   465 228C				.LOCAL
   466 228C AD 46 24			lda VALUE+3
   467 228F B8 38			clv:sec
   468 2291 D0 1B			bne L4
   469 2293 AD 45 24			lda VALUE+2
   470 2296 D0 08			bne L1
   471 2298 AD 44 24			lda VALUE+1
   472 229B D0 03			bne L1
   473 229D AD 43 24			lda VALUE
   474 22A0 F0 04		L1	beq L2
   475 22A2 B0 05			bcs L3
   476 22A4 A9 FF			lda #$FF
   477 22A6 4C B4 22		L2	jmp L5
   478 22A9 A9 01		L3	lda #$01
   479 22AB 4C B4 22			jmp L5
   480 22AE 50 04		L4	bvc L5
   481 22B0 49 FF			eor #$FF
   482 22B2 09 01			ora #$01
   483 22B4			L5
   484 					.ENDL
   485 22B4 10 0D			jpl l_013A
   486
   487 				; optimize FAIL (100, examples\scompare.pas), line = 38
   488 					@printSTRING #CODEORIGIN+$0057
   488 				 LDY> CODEORIGIN+$0057\ LDA< CODEORIGIN+$0057\ JSR @PRINTSTRING
   488 22B6 A0 20		 LDY> CODEORIGIN+$0057
   488 22B8 A9 57		 LDA< CODEORIGIN+$0057
   488 22BA 20 D8 20		 JSR @PRINTSTRING
   489 22BD 20 CA 20			@printEOL
   490
   491 22C0 4C 04 23			jmp l_0147
   492 22C3			l_013A
   493
   494 				; optimize OK (examples\scompare.pas), line = 40
   495
   496 22C3				.LOCAL
   497 22C3 AD 46 24			lda VALUE+3
   498 22C6 B8 38			clv:sec
   499 22C8 D0 1B			bne L4
   500 22CA AD 45 24			lda VALUE+2
   501 22CD D0 08			bne L1
   502 22CF AD 44 24			lda VALUE+1
   503 22D2 D0 03			bne L1
   504 22D4 AD 43 24			lda VALUE
   505 22D7 F0 04		L1	beq L2
   506 22D9 B0 05			bcs L3
   507 22DB A9 FF			lda #$FF
   508 22DD 4C EB 22		L2	jmp L5
   509 22E0 A9 01		L3	lda #$01
   510 22E2 4C EB 22			jmp L5
   511 22E5 50 04		L4	bvc L5
   512 22E7 49 FF			eor #$FF
   513 22E9 09 01			ora #$01
   514 22EB			L5
   515 					.ENDL
   516 22EB D0 0D			jne l_0157
   517
   518 				; optimize FAIL (100, examples\scompare.pas), line = 41
   519 					@printSTRING #CODEORIGIN+$0072
   519 				 LDY> CODEORIGIN+$0072\ LDA< CODEORIGIN+$0072\ JSR @PRINTSTRING
   519 22ED A0 20		 LDY> CODEORIGIN+$0072
   519 22EF A9 72		 LDA< CODEORIGIN+$0072
   519 22F1 20 D8 20		 JSR @PRINTSTRING
   520 22F4 20 CA 20			@printEOL
   521
   522 22F7 4C 04 23			jmp l_0164
   523 22FA			l_0157
   524
   525 				; optimize FAIL (100, examples\scompare.pas), line = 44
   526 					@printSTRING #CODEORIGIN+$008B
   526 				 LDY> CODEORIGIN+$008B\ LDA< CODEORIGIN+$008B\ JSR @PRINTSTRING
   526 22FA A0 20		 LDY> CODEORIGIN+$008B
   526 22FC A9 8B		 LDA< CODEORIGIN+$008B
   526 22FE 20 D8 20		 JSR @PRINTSTRING
   527 2301 20 CA 20			@printEOL
   528 2304			l_0164
   529 2304			l_0147
   530
   531 				; optimize FAIL (100, examples\scompare.pas), line = 46
   532 					@printSTRING #CODEORIGIN+$001A
   532 				 LDY> CODEORIGIN+$001A\ LDA< CODEORIGIN+$001A\ JSR @PRINTSTRING
   532 2304 A0 20		 LDY> CODEORIGIN+$001A
   532 2306 A9 1A		 LDA< CODEORIGIN+$001A
   532 2308 20 D8 20		 JSR @PRINTSTRING
   533 					@print #$9B
   533 				 LDY# $9B\ JSR @PRINT
   533 230B A0 9B		 LDY# $9B
   533 230D 20 CF 20		 JSR @PRINT
   534 					@printSTRING #CODEORIGIN+$00A6
   534 				 LDY> CODEORIGIN+$00A6\ LDA< CODEORIGIN+$00A6\ JSR @PRINTSTRING
   534 2310 A0 20		 LDY> CODEORIGIN+$00A6
   534 2312 A9 A6		 LDA< CODEORIGIN+$00A6
   534 2314 20 D8 20		 JSR @PRINTSTRING
   535 					@print #$9B
   535 				 LDY# $9B\ JSR @PRINT
   535 2317 A0 9B		 LDY# $9B
   535 2319 20 CF 20		 JSR @PRINT
   536 					@printSTRING #CODEORIGIN+$001A
   536 				 LDY> CODEORIGIN+$001A\ LDA< CODEORIGIN+$001A\ JSR @PRINTSTRING
   536 231C A0 20		 LDY> CODEORIGIN+$001A
   536 231E A9 1A		 LDA< CODEORIGIN+$001A
   536 2320 20 D8 20		 JSR @PRINTSTRING
   537 					@print #$9B
   537 				 LDY# $9B\ JSR @PRINT
   537 2323 A0 9B		 LDY# $9B
   537 2325 20 CF 20		 JSR @PRINT
   538 					@printSTRING #CODEORIGIN+$001A
   538 				 LDY> CODEORIGIN+$001A\ LDA< CODEORIGIN+$001A\ JSR @PRINTSTRING
   538 2328 A0 20		 LDY> CODEORIGIN+$001A
   538 232A A9 1A		 LDA< CODEORIGIN+$001A
   538 232C 20 D8 20		 JSR @PRINTSTRING
   539
   540 				; optimize OK (examples\scompare.pas), line = 47
   541
   542 232F A0 FF			ldy #$FF
   543 2331 A9 FF			lda #$FF
   544 2333 8D 3F 24			sta INTVALUE
   545 2336 8C 40 24			sty INTVALUE+1
   546 2339 8C 41 24			sty INTVALUE+2
   547 233C 8C 42 24			sty INTVALUE+3
   548
   549 				; optimize OK (examples\scompare.pas), line = 48
   550
   551 233F A9 FF			lda #$FF
   552 2341 85 A2			sta :STACKORIGIN+10
   553 2343 85 C2			sta :STACKORIGIN+STACKWIDTH*2+10
   554 2345 A9 FF			lda #$FF
   555 2347 85 B2			sta :STACKORIGIN+STACKWIDTH+10
   556 2349 85 D2			sta :STACKORIGIN+STACKWIDTH*3+10
   557 234B A0 00			ldy #$00
   558 234D A5 A2			lda :STACKORIGIN+10
   559 234F 10 01			spl
   560 2351 88				dey
   561 2352 85 A2			sta :STACKORIGIN+10
   562 2354 84 B2			sty :STACKORIGIN+STACKWIDTH+10
   563 2356 84 C2			sty :STACKORIGIN+STACKWIDTH*2+10
   564 2358 84 D2			sty :STACKORIGIN+STACKWIDTH*3+10
   565 235A				.LOCAL
   566 235A AD 42 24			lda INTVALUE+3
   567 235D 38 E5 D2			sub :STACKORIGIN+STACKWIDTH*3+10
   568 2360 D0 21			bne L4
   569 2362 AD 41 24			lda INTVALUE+2
   570 2365 C5 C2			cmp :STACKORIGIN+STACKWIDTH*2+10
   571 2367 D0 0C			bne L1
   572 2369 AD 40 24			lda INTVALUE+1
   573 236C C5 B2			cmp :STACKORIGIN+STACKWIDTH+10
   574 236E D0 05			bne L1
   575 2370 AD 3F 24			lda INTVALUE
   576 2373 C5 A2			cmp :STACKORIGIN+10
   577 2375 F0 04		L1	beq L2
   578 2377 B0 05			bcs L3
   579 2379 A9 FF			lda #$FF
   580 237B 4C 89 23		L2	jmp L5
   581 237E A9 01		L3	lda #$01
   582 2380 4C 89 23			jmp L5
   583 2383 50 04		L4	bvc L5
   584 2385 49 FF			eor #$FF
   585 2387 09 01			ora #$01
   586 2389			L5
   587 					.ENDL
   588 2389 D0 1D			jne l_019C
   589
   590 				; optimize FAIL (100, examples\scompare.pas), line = 49
   591 					@printSTRING #CODEORIGIN+$0057
   591 				 LDY> CODEORIGIN+$0057\ LDA< CODEORIGIN+$0057\ JSR @PRINTSTRING
   591 238B A0 20		 LDY> CODEORIGIN+$0057
   591 238D A9 57		 LDA< CODEORIGIN+$0057
   591 238F 20 D8 20		 JSR @PRINTSTRING
   592 2392 20 CA 20			@printEOL
   593
   594 				; optimize OK (examples\scompare.pas), line = 50
   595
   596 2395 A0 FF			ldy #$FF
   597 2397 A9 FF			lda #$FF
   598 2399 8D 3F 24			sta INTVALUE
   599 239C 8C 40 24			sty INTVALUE+1
   600 239F 8C 41 24			sty INTVALUE+2
   601 23A2 8C 42 24			sty INTVALUE+3
   602
   603 23A5 4C 0B 24			jmp l_01AD
   604 23A8			l_019C
   605
   606 				; optimize OK (examples\scompare.pas), line = 52
   607
   608 23A8 A9 FF			lda #$FF
   609 23AA 85 A2			sta :STACKORIGIN+10
   610 23AC 85 C2			sta :STACKORIGIN+STACKWIDTH*2+10
   611 23AE A9 FF			lda #$FF
   612 23B0 85 B2			sta :STACKORIGIN+STACKWIDTH+10
   613 23B2 85 D2			sta :STACKORIGIN+STACKWIDTH*3+10
   614 23B4 A0 00			ldy #$00
   615 23B6 A5 A2			lda :STACKORIGIN+10
   616 23B8 10 01			spl
   617 23BA 88				dey
   618 23BB 85 A2			sta :STACKORIGIN+10
   619 23BD 84 B2			sty :STACKORIGIN+STACKWIDTH+10
   620 23BF 84 C2			sty :STACKORIGIN+STACKWIDTH*2+10
   621 23C1 84 D2			sty :STACKORIGIN+STACKWIDTH*3+10
   622 23C3				.LOCAL
   623 23C3 AD 42 24			lda INTVALUE+3
   624 23C6 38 E5 D2			sub :STACKORIGIN+STACKWIDTH*3+10
   625 23C9 D0 21			bne L4
   626 23CB AD 41 24			lda INTVALUE+2
   627 23CE C5 C2			cmp :STACKORIGIN+STACKWIDTH*2+10
   628 23D0 D0 0C			bne L1
   629 23D2 AD 40 24			lda INTVALUE+1
   630 23D5 C5 B2			cmp :STACKORIGIN+STACKWIDTH+10
   631 23D7 D0 05			bne L1
   632 23D9 AD 3F 24			lda INTVALUE
   633 23DC C5 A2			cmp :STACKORIGIN+10
   634 23DE F0 04		L1	beq L2
   635 23E0 B0 05			bcs L3
   636 23E2 A9 FF			lda #$FF
   637 23E4 4C F2 23		L2	jmp L5
   638 23E7 A9 01		L3	lda #$01
   639 23E9 4C F2 23			jmp L5
   640 23EC 50 04		L4	bvc L5
   641 23EE 49 FF			eor #$FF
   642 23F0 09 01			ora #$01
   643 23F2			L5
   644 					.ENDL
   645 23F2 D0 0D			jne l_01C0
   646
   647 				; optimize FAIL (100, examples\scompare.pas), line = 53
   648 					@printSTRING #CODEORIGIN+$0072
   648 				 LDY> CODEORIGIN+$0072\ LDA< CODEORIGIN+$0072\ JSR @PRINTSTRING
   648 23F4 A0 20		 LDY> CODEORIGIN+$0072
   648 23F6 A9 72		 LDA< CODEORIGIN+$0072
   648 23F8 20 D8 20		 JSR @PRINTSTRING
   649 23FB 20 CA 20			@printEOL
   650
   651 23FE 4C 0B 24			jmp l_01CD
   652 2401			l_01C0
   653
   654 				; optimize FAIL (100, examples\scompare.pas), line = 56
   655 					@printSTRING #CODEORIGIN+$008B
   655 				 LDY> CODEORIGIN+$008B\ LDA< CODEORIGIN+$008B\ JSR @PRINTSTRING
   655 2401 A0 20		 LDY> CODEORIGIN+$008B
   655 2403 A9 8B		 LDA< CODEORIGIN+$008B
   655 2405 20 D8 20		 JSR @PRINTSTRING
   656 2408 20 CA 20			@printEOL
   657 240B			l_01CD
   658 240B			l_01AD
   659
   660 				; optimize FAIL ('CRT.READKEY', examples\scompare.pas), line = 58
   661 240B 20 F8 21			jsr CRT.READKEY
   662 240E B5 98 8D 47 24		mva :STACKORIGIN,x KEY
   663 2413 CA				dex
   664
   665 				; ------------------------------------------------------------
   666
   667 = 2443			VALUE	= DATAORIGIN+$0011
   668 = 2447			KEY	= DATAORIGIN+$0015
   669 = 2448			adr.STR1	= DATAORIGIN+$0016
   670 2414			.var STR1	= adr.STR1 .word
   671 = 2548			adr.STR2	= DATAORIGIN+$0116
   672 2414			.var STR2	= adr.STR2 .word
   673 = 2648			adr.STR3	= DATAORIGIN+$0216
   674 2414			.var STR3	= adr.STR3 .word
   675
   676 = 2443			@VarData	= VALUE
   677 = 0305			@VarDataSize	= 773
   678
   679 2414			@exit
   680 					.ifdef @new
   681 					@FreeMem #@VarData #@VarDataSize
   682 					eif
   683 2414 60				rts						; ret
   684 = 2415 48 24		STR1
   684 = 2417 48 25		STR2
   684 = 2419 48 26		STR3
   684 				.endl
   685 241B			l_00B7
   686
   687 				; optimize FAIL ('MAINPROC', examples\scompare.pas), line = 62
   688 241B 20 09 22			jsr MAINPROC
   689
   690 				; ------------------------------------------------------------
   691
   692 = 243F			INTVALUE	= DATAORIGIN+$000D
   693 241E			@exit
   694
   695 241E A2 00		@halt	ldx #0
   696 2420 9A				txs
   697
   698 2421 60				rts
   699
   700 				; ------------------------------------------------------------
   701
   702 2422 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   703
   704 				; ------------------------------------------------------------
   705
   706 2432			.local	@DEFINES
   707 2432			ATARI
   708 				.endl
   709
   710 				.endl							; MAIN
   711
   712 				; ------------------------------------------------------------
   713 				; ------------------------------------------------------------
   714
   715 				.macro	UNITINITIALIZATION
   716 				
   717 					.ifdef MAIN.SYSTEM.@UnitInit
   718 					jsr MAIN.SYSTEM.@UnitInit
   719 					eif
   720 				
   721 					.ifdef MAIN.DOS.@UnitInit
   722 					jsr MAIN.DOS.@UnitInit
   723 					eif
   724 				
   725 					.ifdef MAIN.STRUTILS.@UnitInit
   726 					jsr MAIN.STRUTILS.@UnitInit
   727 					eif
   728 				
   729 					.ifdef MAIN.SYSUTILS.@UnitInit
   730 					jsr MAIN.SYSUTILS.@UnitInit
   731 					eif
   732 				
   733 					.ifdef MAIN.ATARI.@UnitInit
   734 					jsr MAIN.ATARI.@UnitInit
   735 					eif
   736 				
   737 					.ifdef MAIN.CRT.@UnitInit
   738 					jsr MAIN.CRT.@UnitInit
   739 					eif
   740 				.endm
   741
   742 				; ------------------------------------------------------------
   743
   744 					ift .SIZEOF(MAIN.SYSTEM) > 0
   745 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   745 				SYSTEM: $21F4..$21F7
   746 					eif
   747
   748 					ift .SIZEOF(MAIN.DOS) > 0
   749 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   750 					eif
   751
   752 					ift .SIZEOF(MAIN.STRUTILS) > 0
   753 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   754 					eif
   755
   756 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   757 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   758 					eif
   759
   760 					ift .SIZEOF(MAIN.ATARI) > 0
   761 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   762 					eif
   763
   764 					ift .SIZEOF(MAIN.CRT) > 0
   765 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   765 				CRT: $21F8..$2208
   766 					eif
   767
   768 					.print 'CODE: ',CODEORIGIN,'..',*-1
   768 				CODE: $2000..$2431
   769
   770 				; ------------------------------------------------------------
   771
   772 2432			DATAORIGIN
   773 2432 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $05 $41
   774 244A 54 41 52 49 00 00 + .by  $54 $41 $52 $49 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   775 2462 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   776 247A 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   777 2492 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   778 24AA 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   779 24C2 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   780 24DA 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   781 24F2 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   782 250A 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   783 2522 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   784 253A 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $05 $48  $45 $4C $4C $4F $00 $00 $00 $00
   785 2552 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   786 256A 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   787 2582 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   788 259A 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   789 25B2 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   790 25CA 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   791 25E2 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   792 25FA 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   793 2612 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   794 262A 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
   795 2642 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $05 $41  $54 $41 $52 $49
   796
   797 = 021C			VARINITSIZE	= *-DATAORIGIN
   798 = 0316			VARDATASIZE	= 790
   799
   800 = 2748			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   801
   802 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   802 				DATA: $2432..$2748
   803
   804 02E0-02E1> D5 21			run START
   805
   806 				; ------------------------------------------------------------
   807
   808 				.macro	STATICDATA
   809 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $05 $41 $54  $41 $52 $49 $00 $05 $48 $45 $4C
   810 				.by  $4C $4F $00 $00 $00 $05 $73 $74  $72 $31 $3D $00 $05 $73 $74 $72  $32 $3D $00 $05 $73 $74 $72 $33
   811 				.by  $3D $00 $23 $56 $61 $6C $75 $65  $20 $6F $66 $20 $63 $6F $6D $70  $61 $72 $69 $73 $6F $6E $20 $62
   812 				.by  $79 $20 $53 $43 $6F $6D $70 $61  $72 $65 $20 $69 $73 $3A $00 $19  $73 $74 $72 $32 $20 $69 $73 $20
   813 				.by  $67 $72 $65 $61 $74 $65 $72 $20  $74 $68 $61 $6E $20 $73 $74 $72  $31 $00 $17 $73 $74 $72 $31 $20
   814 				.by  $61 $6E $64 $20 $73 $74 $72 $32  $20 $61 $72 $65 $20 $65 $71 $75  $61 $6C $00 $19 $73 $74 $72 $31
   815 				.by  $20 $69 $73 $20 $67 $72 $65 $61  $74 $65 $72 $20 $74 $68 $61 $6E  $20 $73 $74 $72 $32 $00 $08 $41
   816 				.by  $67 $61 $69 $6E $2E $2E $2E $00
   817 				.endm
   818
   819 					end
