mads 2.1.0 build 8 (23 Dec 19)
   388 					opt l+
   101
   102 				.print 'ZPAGE: ',fxptr,'..',zpend-1
   102 				ZPAGE: $0080..$00D7
   103
   104 				.print 'RTLIB: ',RTLIB,'..',*-1
   104 				RTLIB: $2089..$21F4
   105
   106 				; ------------------------------------------------------------
   107
   108 21F5			START
   109 21F5 BA				tsx
   110 21F6 8E 49 23			stx MAIN.@halt+1
   111
   112 					.ifdef fmulinit
   113 					fmulinit
   114 					eif
   115
   116 = 012E			VLEN	= VARDATASIZE-VARINITSIZE
   117 = 2368			VADR	= DATAORIGIN+VARINITSIZE
   118
   119 					ift VADR > $BFFF
   120 					ert 'Invalid memory address range ',VADR
   121 					eli (VLEN>0) && (VLEN<=256)
   122 					ldx #256-VLEN
   123 					lda #0
   124 					sta:rne VADR+VLEN-256,x+
   125 					eli VLEN>0
   126 					@fill #VADR #VLEN #0
   126 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #0 @FILL.PTR2\ JSR @FILL
   126 21F9 A9 68 85 88 A9 23 +  MWA #VADR @FILL.PTR1
   126 2201 A9 2E 85 8C A9 01 +  MWA #VLEN @FILL.PTR3
   126 2209 A9 00 85 84		 MVA #0 @FILL.PTR2
   126 220D 20 70 21		 JSR @FILL
   127 					eif
   128
   129 					.ifdef MAIN.@DEFINES.ROMOFF
   130 					icl 'atari\romoff.asm'
   131 					.endif
   132
   133 2210 A9 96 85 82 A9 24 + 	mwa #PROGRAMSTACK psptr
   134
   135 2218 A2 0F			ldx #$0f					; DOS II+/D ParamStr
   136 221A BD 40 03 9D 4C 23 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   137
   138 2223 E8				inx						; X = 0
   139 2224 86 90			stx bp						; BP = 0
   140
   141 2226 8E 08 D2			stx audctl					; reset POKEY
   142 2229 A9 03			lda #3
   143 222B 8D 0F D2			sta skctl
   144
   145 222E CA				dex						; X = 255
   146
   147 222F				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: input.a65]
Source: input.a65
   148
   149 222F			.local	MAIN						; PROCEDURE
   150
   151 222F 4C 45 23			jmp l_0090
   152
   153 				; ------------------------------------------------------------
   154
   155 2232			.local	SYSTEM						; UNIT
   156
   157 				; ------------------------------------------------------------
   158
   159 = 0101			__PORTB_BANKS	= $0101
   160 = 0648			M_PI_2	= $0648
   161 = 0192			D_PI_2	= $0192
   162 = 0004			D_PI_180	= $04
   163 = 0000			MGTIA	= $00
   164 = 0080			MVBXE	= $80
   165 = 0000			VBXE_XDLADR	= $00
   166 = 0100			VBXE_BCBADR	= $0100
   167 = 1000			VBXE_MAPADR	= $1000
   168 = 5000			VBXE_OVRADR	= $5000
   169 = B000			VBXE_WINDOW	= $B000
   170 = 0000			IDLI	= $00
   171 = 0001			IVBL	= $01
   172 = 00FE			CH_DELCHR	= $FE
   173 = 009B			CH_ENTER	= $9B
   174 = 001B			CH_ESC	= $1B
   175 = 001C			CH_CURS_UP	= $1C
   176 = 001D			CH_CURS_DOWN	= $1D
   177 = 001E			CH_CURS_LEFT	= $1E
   178 = 001F			CH_CURS_RIGHT	= $1F
   179 = 007F			CH_TAB	= $7F
   180 = 009B			CH_EOL	= $9B
   181 = 007D			CH_CLR	= $7D
   182 = 00FD			CH_BELL	= $FD
   183 = 007E			CH_DEL	= $7E
   184 = 009C			CH_DELLINE	= $9C
   185 = 009D			CH_INSLINE	= $9D
   186 = 0000			COLOR_BLACK	= $00
   187 = 000E			COLOR_WHITE	= $0E
   188 = 0032			COLOR_RED	= $32
   189 = 0096			COLOR_CYAN	= $96
   190 = 0068			COLOR_VIOLET	= $68
   191 = 00C4			COLOR_GREEN	= $C4
   192 = 0074			COLOR_BLUE	= $74
   193 = 00EE			COLOR_YELLOW	= $EE
   194 = 0028			COLOR_ORANGE	= $28
   195 = 00E4			COLOR_BROWN	= $E4
   196 = 003C			COLOR_LIGHTRED	= $3C
   197 = 0004			COLOR_GRAY1	= $04
   198 = 0006			COLOR_GRAY2	= $06
   199 = 000A			COLOR_GRAY3	= $0A
   200 = 00CC			COLOR_LIGHTGREEN	= $CC
   201 = 007C			COLOR_LIGHTBLUE	= $7C
   202 = 0004			FMOPENREAD	= $04
   203 = 0008			FMOPENWRITE	= $08
   204 = 0009			FMOPENAPPEND	= $09
   205 = 000C			FMOPENREADWRITE	= $0C
   206 = 2362			SCREENWIDTH	= DATAORIGIN+$0000
   207 = 2364			SCREENHEIGHT	= DATAORIGIN+$0002
   208 = 2366			DATESEPARATOR	= DATAORIGIN+$0004
   209 = D014			TVSYSTEM	= $D014
   210 = 02C0			adr.PALETTE	= $02C0
   211 2232			.var PALETTE	= adr.PALETTE .word
   212 = D012			adr.HPALETTE	= $D012
   213 2232			.var HPALETTE	= adr.HPALETTE .word
   214 = 2367			FILEMODE	= DATAORIGIN+$0005
   215 = 2368			GRAPHMODE	= DATAORIGIN+$0006
   216 = 2369			IORESULT	= DATAORIGIN+$0007
   217 = 236A			EOLN	= DATAORIGIN+$0008
   218 = 236B			RNDSEED	= DATAORIGIN+$0009
   219
   220 = 2232 C0 02		PALETTE
   220 = 2234 12 D0		HPALETTE
   220 				.endl							; UNIT SYSTEM
   221
   222 				; ------------------------------------------------------------
   223
   224 2236			.local	ATARI						; UNIT
   225
   226 				; ------------------------------------------------------------
   227
   228 = 0012			RTCLOK	= $12
   229 = 004D			ATRACT	= $4D
   230 = 0052			LMARGIN	= $52
   231 = 0053			RMARGIN	= $53
   232 = 0054			ROWCRS	= $54
   233 = 0055			COLCRS	= $55
   234 = 0057			DINDEX	= $57
   235 = 0058			SAVMSC	= $58
   236 = 0062			PALNTS	= $62
   237 = 006A			RAMTOP	= $6A
   238 = 0200			VDSLST	= $0200
   239 = 0230			SDLSTL	= $0230
   240 = 0290			TXTROW	= $0290
   241 = 0291			TXTCOL	= $0291
   242 = 0293			TINDEX	= $0293
   243 = 0294			TXTMSC	= $0294
   244 = 022F			SDMCTL	= $022F
   245 = 026F			GPRIOR	= $026F
   246 = 02F0			CRSINH	= $02F0
   247 = 02F3			CHACT	= $02F3
   248 = 02F4			CHBAS	= $02F4
   249 = 02FC			CH	= $02FC
   250 = 02C0			PCOLR0	= $02C0
   251 = 02C1			PCOLR1	= $02C1
   252 = 02C2			PCOLR2	= $02C2
   253 = 02C3			PCOLR3	= $02C3
   254 = 02C4			COLOR0	= $02C4
   255 = 02C5			COLOR1	= $02C5
   256 = 02C6			COLOR2	= $02C6
   257 = 02C7			COLOR3	= $02C7
   258 = 02C8			COLOR4	= $02C8
   259 = 02C8			COLBAKS	= $02C8
   260 = D000			HPOSP0	= $D000
   261 = D001			HPOSP1	= $D001
   262 = D002			HPOSP2	= $D002
   263 = D003			HPOSP3	= $D003
   264 = D004			HPOSM0	= $D004
   265 = D005			HPOSM1	= $D005
   266 = D006			HPOSM2	= $D006
   267 = D007			HPOSM3	= $D007
   268 = D008			SIZEP0	= $D008
   269 = D009			SIZEP1	= $D009
   270 = D00A			SIZEP2	= $D00A
   271 = D00B			SIZEP3	= $D00B
   272 = D00C			SIZEM	= $D00C
   273 = D00D			GRAFP0	= $D00D
   274 = D00E			GRAFP1	= $D00E
   275 = D00F			GRAFP2	= $D00F
   276 = D010			GRAFP3	= $D010
   277 = D011			GRAFM	= $D011
   278 = D004			P0PF	= $D004
   279 = D014			PAL	= $D014
   280 = D012			COLPM0	= $D012
   281 = D013			COLPM1	= $D013
   282 = D014			COLPM2	= $D014
   283 = D015			COLPM3	= $D015
   284 = D016			COLPF0	= $D016
   285 = D017			COLPF1	= $D017
   286 = D018			COLPF2	= $D018
   287 = D019			COLPF3	= $D019
   288 = D01A			COLBK	= $D01A
   289 = D01B			PRIOR	= $D01B
   290 = D01D			GRACTL	= $D01D
   291 = D01E			HITCLR	= $D01E
   292 = D200			AUDF1	= $D200
   293 = D201			AUDC1	= $D201
   294 = D202			AUDF2	= $D202
   295 = D203			AUDC2	= $D203
   296 = D204			AUDF3	= $D204
   297 = D205			AUDC3	= $D205
   298 = D206			AUDF4	= $D206
   299 = D207			AUDC4	= $D207
   300 = D208			AUDCTL	= $D208
   301 = D20F			SKSTAT	= $D20F
   302 = D301			PORTB	= $D301
   303 = D400			DMACTL	= $D400
   304 = D401			CHACTL	= $D401
   305 = D402			DLISTL	= $D402
   306 = D404			HSCROL	= $D404
   307 = D405			VSCROL	= $D405
   308 = D407			PMBASE	= $D407
   309 = D409			CHBASE	= $D409
   310 = D40A			WSYNC	= $D40A
   311 = D40B			VCOUNT	= $D40B
   312 = D40C			PENH	= $D40C
   313 = D40D			PENV	= $D40D
   314 = D40E			NMIEN	= $D40E
   315
   316 				.endl							; UNIT ATARI
   317
   318 				; ------------------------------------------------------------
   319
   320 2236			.local	CRT						; UNIT
   321
   322 2236			.local	READKEY						; FUNCTION | ASSEMBLER
   323
   324 				; ---------------------  ASM Block 049  ---------------------
   325
   326 2236 8A 48			txa:pha
   327
   328 2238 20 89 20			@GetKey
   329
   330 223B 8D 6E 23			sta Result
   331
   332 223E 68 AA			pla:tax
   333
   334 2240			@exit
   335
   336 				; ------------------------------------------------------------
   337
   338 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   339 				; as Pointer
   340
   341 2240 E8				inx
   342 2241 AD 6E 23 95 98		mva RESULT :STACKORIGIN,x
   343
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					eif
   351
   352 				; ------------------------------------------------------------
   353
   354 = 236E			RESULT	= DATAORIGIN+$000C
   355
   356 = 236E			@VarData	= RESULT
   357 = 0001			@VarDataSize	= 1
   358
   359 2246 60				rts						; ret
   360 				.endl
   361
   362 				; ------------------------------------------------------------
   363
   364 = 236D			TEXTATTR	= DATAORIGIN+$000B
   365 = D01F			CONSOL	= $D01F
   366 = 0000			CN_START_SELECT_OPTION	= $00
   367 = 0001			CN_SELECT_OPTION	= $01
   368 = 0002			CN_START_OPTION	= $02
   369 = 0003			CN_OPTION	= $03
   370 = 0004			CN_START_SELECT	= $04
   371 = 0005			CN_SELECT	= $05
   372 = 0006			CN_START	= $06
   373 = 0007			CN_NONE	= $07
   374 = 0000			BW40	= $00
   375 = 0001			CO40	= $01
   376 = 0002			BW80	= $02
   377 = 0003			CO80	= $03
   378 = 0007			MONO	= $07
   379 = 0001			C40	= $01
   380 = 0003			C80	= $03
   381 = 0000			BLACK	= $00
   382 = 0001			BLUE	= $01
   383 = 0002			GREEN	= $02
   384 = 0003			CYAN	= $03
   385 = 0004			RED	= $04
   386 = 0005			MAGENTA	= $05
   387 = 0006			BROWN	= $06
   388 = 0007			LIGHTGRAY	= $07
   389 = 0008			DARKGRAY	= $08
   390 = 0009			LIGHTBLUE	= $09
   391 = 000A			LIGHTGREEN	= $0A
   392 = 000B			LIGHTCYAN	= $0B
   393 = 000C			LIGHTRED	= $0C
   394 = 000D			LIGHTMAGENTA	= $0D
   395 = 000E			YELLOW	= $0E
   396 = 000F			WHITE	= $0F
   397 = 0080			BLINK	= $80
   398
   399 				.endl							; UNIT CRT
   400
   401 				; ------------------------------------------------------------
   402
   403 2247			.local	DOS						; UNIT
   404
   405 				; ------------------------------------------------------------
   406
   407 = D014			PALNTSC	= $D014
   408
   409 				.endl							; UNIT DOS
   410
   411 				; ------------------------------------------------------------
   412
   413 2247			.local	STRUTILS					; UNIT
   414
   415 				; ------------------------------------------------------------
   416
   417 				.endl							; UNIT STRUTILS
   418
   419 				; ------------------------------------------------------------
   420
   421 2247			.local	SYSUTILS					; UNIT
   422
   423 				; ------------------------------------------------------------
   424
   425 = 0001			FAREADONLY	= $01
   426 = 0002			FAHIDDEN	= $02
   427 = 0004			FASYSFILE	= $04
   428 = 0008			FAVOLUMEID	= $08
   429 = 0010			FADIRECTORY	= $10
   430 = 0020			FAARCHIVE	= $20
   431 = 003F			FAANYFILE	= $3F
   432
   433 				.endl							; UNIT SYSUTILS
   434
   435 				; ------------------------------------------------------------
   436
   437 2247			.local	CIO						; UNIT
   438
   439 2247			.local	GET						; FUNCTION | ASSEMBLER
   440
   441 				; ------------------------------------------------------------
   442
   443 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   444 				; as Pointer
   445 2247 B5 98 8D 6F 23		mva :STACKORIGIN,x CHN
   446 224C CA				dex
   447
   448 				; ---------------------  ASM Block 080  ---------------------
   449
   450 224D 8A 48			txa:pha
   451
   452 224F AD 6F 23			lda chn
   453 2252 0A 0A 0A 0A			:4 asl @
   454 2256 AA				tax
   455
   456 2257 A9 07			lda #7		;get char command
   457 2259 9D 42 03			sta iccmd,x
   458
   459 225C A9 00			lda #$00	;zero out the unused
   460 225E 9D 48 03			sta icbufl,x	;store in accumulator
   461 2261 9D 49 03			sta icbufh,x	;...after CIOV jump
   462
   463 2264				m@call	ciov
Macro: M@CALL [Source: rtl6502.asm]
    12 2264 20 56 E4				jsr CIOV
Source: input.a65
   464
   465 2267 8C 69 23			sty MAIN.SYSTEM.IOResult
   466
   467 226A 8D 70 23			sta Result
   468
   469 226D 68 AA			pla:tax
   470
   471 226F			@exit
   472
   473 				; ------------------------------------------------------------
   474
   475 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   476 				; as Pointer
   477
   478 226F E8				inx
   479 2270 AD 70 23 95 98		mva RESULT :STACKORIGIN,x
   480
   481 					.ifdef @new
   482 					lda <@VarData
   483 					sta :ztmp
   484 					lda >@VarData
   485 					ldy #@VarDataSize-1
   486 					jmp @FreeMem
   487 					eif
   488
   489 				; ------------------------------------------------------------
   490
   491 = 236F			CHN	= DATAORIGIN+$000D
   492 = 2370			RESULT	= DATAORIGIN+$000E
   493
   494 = 236F			@VarData	= CHN
   495 = 0002			@VarDataSize	= 2
   496
   497 2275 60				rts						; ret
   498 				.endl
   499
   500 				; ------------------------------------------------------------
   501
   502 				.endl							; UNIT CIO
   503
   504 2276			.local	MAINPROC					; PROCEDURE
   505
   506 				; optimize FAIL (100, examples\input.pas), line = 20
   507 					@print #$7D
   507 				 LDY# $7D\ JSR @PRINT
   507 2276 A0 7D		 LDY# $7D
   507 2278 20 BD 21		 JSR @PRINT
   508
   509 				; optimize FAIL (100, examples\input.pas), line = 21
   510 					@printSTRING #CODEORIGIN+$000D
   510 				 LDY> CODEORIGIN+$000D\ LDA< CODEORIGIN+$000D\ JSR @PRINTSTRING
   510 227B A0 20		 LDY> CODEORIGIN+$000D
   510 227D A9 0D		 LDA< CODEORIGIN+$000D
   510 227F 20 C6 21		 JSR @PRINTSTRING
   511 2282 20 B8 21			@printEOL
   512
   513 				; optimize FAIL (100, examples\input.pas), line = 22
   514 					@printSTRING #CODEORIGIN+$0020
   514 				 LDY> CODEORIGIN+$0020\ LDA< CODEORIGIN+$0020\ JSR @PRINTSTRING
   514 2285 A0 20		 LDY> CODEORIGIN+$0020
   514 2287 A9 20		 LDA< CODEORIGIN+$0020
   514 2289 20 C6 21		 JSR @PRINTSTRING
   515 228C 20 B8 21			@printEOL
   516
   517 				; optimize FAIL (100, examples\input.pas), line = 23
   518 					@printSTRING #CODEORIGIN+$003C
   518 				 LDY> CODEORIGIN+$003C\ LDA< CODEORIGIN+$003C\ JSR @PRINTSTRING
   518 228F A0 20		 LDY> CODEORIGIN+$003C
   518 2291 A9 3C		 LDA< CODEORIGIN+$003C
   518 2293 20 C6 21		 JSR @PRINTSTRING
   519 2296 20 B8 21			@printEOL
   520
   521 				; optimize FAIL (100, examples\input.pas), line = 24
   522 					@printSTRING #CODEORIGIN+$0054
   522 				 LDY> CODEORIGIN+$0054\ LDA< CODEORIGIN+$0054\ JSR @PRINTSTRING
   522 2299 A0 20		 LDY> CODEORIGIN+$0054
   522 229B A9 54		 LDA< CODEORIGIN+$0054
   522 229D 20 C6 21		 JSR @PRINTSTRING
   523 22A0 20 B8 21			@printEOL
   524
   525 				; optimize FAIL (100, examples\input.pas), line = 25
   526 					@printSTRING #CODEORIGIN+$0056
   526 				 LDY> CODEORIGIN+$0056\ LDA< CODEORIGIN+$0056\ JSR @PRINTSTRING
   526 22A3 A0 20		 LDY> CODEORIGIN+$0056
   526 22A5 A9 56		 LDA< CODEORIGIN+$0056
   526 22A7 20 C6 21		 JSR @PRINTSTRING
   527 22AA 20 B8 21			@printEOL
   528 22AD 20 99 20			@getline
   529 					@move #@buf #adr.NAME #14
   529 				 MWA #@BUF @MOVE.PTR1\ MWA #ADR.NAME @MOVE.PTR2\ MWA #14 @MOVE.PTR3\ JSR @MOVE
   529 22B0 A9 00 85 88 A9 04 +  MWA #@BUF @MOVE.PTR1
   529 22B8 A9 72 85 8C A9 24 +  MWA #ADR.NAME @MOVE.PTR2
   529 22C0 A9 0E 85 84 A9 00 +  MWA #14 @MOVE.PTR3
   529 22C8 20 1B 21		 JSR @MOVE
   530
   531 				; optimize FAIL (100, examples\input.pas), line = 27
   532 					@printSTRING #CODEORIGIN+$0053
   532 				 LDY> CODEORIGIN+$0053\ LDA< CODEORIGIN+$0053\ JSR @PRINTSTRING
   532 22CB A0 20		 LDY> CODEORIGIN+$0053
   532 22CD A9 53		 LDA< CODEORIGIN+$0053
   532 22CF 20 C6 21		 JSR @PRINTSTRING
   533 22D2 20 B8 21			@printEOL
   534
   535 				; optimize FAIL (100, examples\input.pas), line = 28
   536 					@printSTRING #CODEORIGIN+$0068
   536 				 LDY> CODEORIGIN+$0068\ LDA< CODEORIGIN+$0068\ JSR @PRINTSTRING
   536 22D5 A0 20		 LDY> CODEORIGIN+$0068
   536 22D7 A9 68		 LDA< CODEORIGIN+$0068
   536 22D9 20 C6 21		 JSR @PRINTSTRING
   537 22DC 20 B8 21			@printEOL
   538 22DF 20 99 20			@getline
   539 					@move #@buf #adr.SURNAME #22
   539 				 MWA #@BUF @MOVE.PTR1\ MWA #ADR.SURNAME @MOVE.PTR2\ MWA #22 @MOVE.PTR3\ JSR @MOVE
   539 22E2 A9 00 85 88 A9 04 +  MWA #@BUF @MOVE.PTR1
   539 22EA A9 80 85 8C A9 24 +  MWA #ADR.SURNAME @MOVE.PTR2
   539 22F2 A9 16 85 84 A9 00 +  MWA #22 @MOVE.PTR3
   539 22FA 20 1B 21		 JSR @MOVE
   540
   541 				; optimize FAIL (100, examples\input.pas), line = 30
   542 					@printSTRING #CODEORIGIN+$0053
   542 				 LDY> CODEORIGIN+$0053\ LDA< CODEORIGIN+$0053\ JSR @PRINTSTRING
   542 22FD A0 20		 LDY> CODEORIGIN+$0053
   542 22FF A9 53		 LDA< CODEORIGIN+$0053
   542 2301 20 C6 21		 JSR @PRINTSTRING
   543 2304 20 B8 21			@printEOL
   544
   545 				; optimize FAIL (100, examples\input.pas), line = 31
   546 					@printSTRING #CODEORIGIN+$007D
   546 				 LDY> CODEORIGIN+$007D\ LDA< CODEORIGIN+$007D\ JSR @PRINTSTRING
   546 2307 A0 20		 LDY> CODEORIGIN+$007D
   546 2309 A9 7D		 LDA< CODEORIGIN+$007D
   546 230B 20 C6 21		 JSR @PRINTSTRING
   547
   548 				; optimize FAIL (100, examples\input.pas), line = 32
   549 					@printSTRING NAME
   549 				 LDY NAME+1\ LDA NAME\ JSR @PRINTSTRING
   549 230E AC 5F 23		 LDY NAME+1
   549 2311 AD 5E 23		 LDA NAME
   549 2314 20 C6 21		 JSR @PRINTSTRING
   550
   551 				; optimize FAIL (100, examples\input.pas), line = 33
   552 					@print #$20
   552 				 LDY# $20\ JSR @PRINT
   552 2317 A0 20		 LDY# $20
   552 2319 20 BD 21		 JSR @PRINT
   553
   554 				; optimize FAIL (100, examples\input.pas), line = 34
   555 					@printSTRING SURNAME
   555 				 LDY SURNAME+1\ LDA SURNAME\ JSR @PRINTSTRING
   555 231C AC 61 23		 LDY SURNAME+1
   555 231F AD 60 23		 LDA SURNAME
   555 2322 20 C6 21		 JSR @PRINTSTRING
   556 2325 20 B8 21			@printEOL
   557
   558 				; optimize FAIL (100, examples\input.pas), line = 35
   559 					@printSTRING #CODEORIGIN+$0053
   559 				 LDY> CODEORIGIN+$0053\ LDA< CODEORIGIN+$0053\ JSR @PRINTSTRING
   559 2328 A0 20		 LDY> CODEORIGIN+$0053
   559 232A A9 53		 LDA< CODEORIGIN+$0053
   559 232C 20 C6 21		 JSR @PRINTSTRING
   560 232F 20 B8 21			@printEOL
   561
   562 				; optimize FAIL ('CIO.GET', examples\input.pas), line = 36
   563 2332 E8				inx
   564 2333 A9 07 95 98			mva #$07 :STACKORIGIN,x
   565 2337 20 47 22			jsr CIO.GET
   566 233A B5 98 8D 71 24		mva :STACKORIGIN,x KEY
   567 233F CA				dex
   568
   569 2340 20 36 22			jsr CRT.READKEY					; call Entry
   570
   571 2343 CA				dex
   572 2344			@exit
   573 					.ifdef @new
   574 					lda <@VarData
   575 					sta :ztmp
   576 					lda >@VarData
   577 					ldy #@VarDataSize-1
   578 					jmp @FreeMem
   579 					eif
   580 2344 60				rts						; ret
   581 				.endl
   582 2345			l_0090
   583
   584 				; optimize FAIL ('MAINPROC', examples\input.pas), line = 41
   585 2345 20 76 22			jsr MAINPROC
   586
   587 				; ------------------------------------------------------------
   588
   589 = 2371			adr.STRBUFFER	= DATAORIGIN+$000F
   590 2348			.var STRBUFFER	= adr.STRBUFFER .word
   591 = 2471			KEY	= DATAORIGIN+$010F
   592 = 2472			adr.NAME	= DATAORIGIN+$0110
   593 2348			.var NAME	= adr.NAME .word
   594 = 2480			adr.SURNAME	= DATAORIGIN+$011E
   595 2348			.var SURNAME	= adr.SURNAME .word
   596 2348			@exit
   597
   598 2348 A2 00		@halt	ldx #0
   599 234A 9A				txs
   600 					.ifdef MAIN.@DEFINES.ROMOFF
   601 					inc portb
   602 					.endif
   603
   604 234B 60				rts
   605
   606 				; ------------------------------------------------------------
   607
   608 234C 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   609
   610 				; ------------------------------------------------------------
   611
   612 235C			.local	@DEFINES
   613 235C			ATARI
   614 				.endl
   615
   616 = 235C 71 23		STRBUFFER
   616 = 235E 72 24		NAME
   616 = 2360 80 24		SURNAME
   616 				.endl							; MAIN
   617
   618 				; ------------------------------------------------------------
   619 				; ------------------------------------------------------------
   620
   621 				.macro	UNITINITIALIZATION
   622 				
   623 					.ifdef MAIN.SYSTEM.@UnitInit
   624 					jsr MAIN.SYSTEM.@UnitInit
   625 					eif
   626 				
   627 					.ifdef MAIN.ATARI.@UnitInit
   628 					jsr MAIN.ATARI.@UnitInit
   629 					eif
   630 				
   631 					.ifdef MAIN.CRT.@UnitInit
   632 					jsr MAIN.CRT.@UnitInit
   633 					eif
   634 				
   635 					.ifdef MAIN.DOS.@UnitInit
   636 					jsr MAIN.DOS.@UnitInit
   637 					eif
   638 				
   639 					.ifdef MAIN.STRUTILS.@UnitInit
   640 					jsr MAIN.STRUTILS.@UnitInit
   641 					eif
   642 				
   643 					.ifdef MAIN.SYSUTILS.@UnitInit
   644 					jsr MAIN.SYSUTILS.@UnitInit
   645 					eif
   646 				
   647 					.ifdef MAIN.CIO.@UnitInit
   648 					jsr MAIN.CIO.@UnitInit
   649 					eif
   650 				.endm
   651
   652 				; ------------------------------------------------------------
   653
   654 					ift .SIZEOF(MAIN.SYSTEM) > 0
   655 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   655 				SYSTEM: $2232..$2235
   656 					eif
   657
   658 					ift .SIZEOF(MAIN.ATARI) > 0
   659 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   660 					eif
   661
   662 					ift .SIZEOF(MAIN.CRT) > 0
   663 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   663 				CRT: $2236..$2246
   664 					eif
   665
   666 					ift .SIZEOF(MAIN.DOS) > 0
   667 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   668 					eif
   669
   670 					ift .SIZEOF(MAIN.STRUTILS) > 0
   671 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   672 					eif
   673
   674 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   675 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   676 					eif
   677
   678 					ift .SIZEOF(MAIN.CIO) > 0
   679 					.print 'CIO: ',MAIN.CIO,'..',MAIN.CIO+.SIZEOF(MAIN.CIO)-1
   679 				CIO: $2247..$2275
   680 					eif
   681
   682 					.print 'CODE: ',CODEORIGIN,'..',*-1
   682 				CODE: $2000..$2361
   683
   684 				; ------------------------------------------------------------
   685
   686 2362			DATAORIGIN
   687 2362 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
   688
   689 = 0006			VARINITSIZE	= *-DATAORIGIN
   690 = 0134			VARDATASIZE	= 308
   691
   692 = 2496			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   693
   694 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   694 				DATA: $2362..$2496
   695
   696 02E0-02E1> F5 21			run START
   697
   698 				; ------------------------------------------------------------
   699
   700 				.macro	STATICDATA
   701 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $11 $45 $66  $66 $65 $63 $74 $75 $73 $20 $65
   702 				.by  $78 $61 $6D $70 $6C $65 $3A $00  $1A $53 $74 $72 $69 $6E $67 $20  $69 $6E $70 $75 $74 $20 $64 $65
   703 				.by  $6D $6F $6E $73 $74 $72 $61 $74  $69 $6F $6E $00 $16 $75 $73 $69  $6E $67 $20 $49 $6E $70 $75 $74
   704 				.by  $53 $20 $70 $72 $6F $63 $65 $64  $75 $72 $65 $00 $00 $00 $10 $57  $68 $61 $74 $73 $20 $79 $6F $75
   705 				.by  $72 $20 $6E $61 $6D $65 $3F $00  $13 $57 $68 $61 $74 $73 $20 $79  $6F $75 $72 $20 $73 $75 $72 $6E
   706 				.by  $61 $6D $65 $3F $00 $0A $54 $68  $61 $6E $6B $20 $79 $6F $75 $2C  $00
   707 				.endm
   708
   709 					end
