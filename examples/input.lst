mads 2.1.0
  3726 					opt l+
    95
    96 				.print 'RUNLIB: ',RUNLIB,'..',*
    96 				RUNLIB: $2089..$21B1
    97
    98 				; ------------------------------------------------------------
    99
   100 21B1			START
   101 21B1 BA				tsx
   102 21B2 8E AF 22			stx MAIN.@halt+1
   103
   104 					.ifdef fmulinit
   105 					fmulinit
   106 					eif
   107
   108 = 002C			VLEN	= VARDATASIZE-VARINITSIZE
   109 = 22CC			VADR	= DATAORIGIN+VARINITSIZE
   110
   111 					ift VADR > $BFFF
   112 					ert 'Invalid memory address range ',VADR
   113 					eli (VLEN>0) && (VLEN<=256)
   114 21B5 A2 D4			ldx #256-VLEN
   115 21B7 A9 00			lda #0
   116 21B9 9D F8 21 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   117 					eli VLEN>0
   118 					@fill #VADR #VLEN #0
   119 					eif
   120
   121 21BF A2 0F			ldx #$0f
   122 21C1 BD 40 03 9D B2 22 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   123
   124 21CA E8				inx		; X = 0 !!!
   125 21CB 86 8E			stx bp		; lo BP = 0
   126
   127 21CD				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: input.a65]
   128
   129 21CD			.local	MAIN						; PROCEDURE
   130
   131 21CD 4C AB 22			jmp l_0090
   132
   133 				; ------------------------------------------------------------
   134
   135 21D0			.local	SYSTEM						; UNIT
   136
   137 				; ------------------------------------------------------------
   138
   139 = 0648			M_PI_2	= $0648
   140 = 0192			D_PI_2	= $0192
   141 = 0004			D_PI_180	= $0004
   142 = 0000			MGTIA	= $0000
   143 = 0080			MVBXE	= $0080
   144 = 0000			VBXE_XDLADR	= $0000
   145 = 0100			VBXE_BCBADR	= $0100
   146 = 1000			VBXE_MAPADR	= $1000
   147 = 5000			VBXE_OVRADR	= $5000
   148 = B000			VBXE_WINDOW	= $B000
   149 = 0000			IDLI	= $0000
   150 = 0001			IVBL	= $0001
   151 = 00FE			CH_DELCHR	= $00FE
   152 = 009B			CH_ENTER	= $009B
   153 = 001B			CH_ESC	= $001B
   154 = 001C			CH_CURS_UP	= $001C
   155 = 001D			CH_CURS_DOWN	= $001D
   156 = 001E			CH_CURS_LEFT	= $001E
   157 = 001F			CH_CURS_RIGHT	= $001F
   158 = 007F			CH_TAB	= $007F
   159 = 009B			CH_EOL	= $009B
   160 = 007D			CH_CLR	= $007D
   161 = 00FD			CH_BELL	= $00FD
   162 = 007E			CH_DEL	= $007E
   163 = 009C			CH_DELLINE	= $009C
   164 = 009D			CH_INSLINE	= $009D
   165 = 0000			COLOR_BLACK	= $0000
   166 = 000E			COLOR_WHITE	= $000E
   167 = 0032			COLOR_RED	= $0032
   168 = 0096			COLOR_CYAN	= $0096
   169 = 0068			COLOR_VIOLET	= $0068
   170 = 00C4			COLOR_GREEN	= $00C4
   171 = 0074			COLOR_BLUE	= $0074
   172 = 00EE			COLOR_YELLOW	= $00EE
   173 = 0028			COLOR_ORANGE	= $0028
   174 = 00E4			COLOR_BROWN	= $00E4
   175 = 003C			COLOR_LIGHTRED	= $003C
   176 = 0004			COLOR_GRAY1	= $0004
   177 = 0006			COLOR_GRAY2	= $0006
   178 = 000A			COLOR_GRAY3	= $000A
   179 = 00CC			COLOR_LIGHTGREEN	= $00CC
   180 = 007C			COLOR_LIGHTBLUE	= $007C
   181 = 0004			FMOPENREAD	= $0004
   182 = 0008			FMOPENWRITE	= $0008
   183 = 0009			FMOPENAPPEND	= $0009
   184 = 000C			FMOPENREADWRITE	= $000C
   185 = 22C6			SCREENWIDTH	= DATAORIGIN+$0000
   186 = 22C8			SCREENHEIGHT	= DATAORIGIN+$0002
   187 = 22CA			DATESEPARATOR	= DATAORIGIN+$0004
   188 = D014			TVSYSTEM	= $D014
   189 = 02C0			adr.PALETTE	= $02C0
   190 21D0			.var PALETTE	= adr.PALETTE .word
   191 = D012			adr.HPALETTE	= $D012
   192 21D0			.var HPALETTE	= adr.HPALETTE .word
   193 = 22CB			FILEMODE	= DATAORIGIN+$0005
   194 = 22CC			SCREENMODE	= DATAORIGIN+$0006
   195 = 22CD			IORESULT	= DATAORIGIN+$0007
   196 = 22CE			EOLN	= DATAORIGIN+$0008
   197 = 22CF			RNDSEED	= DATAORIGIN+$0009
   198
   199 = 21D0 C0 02		PALETTE
   199 = 21D2 12 D0		HPALETTE
   199 				.endl							; UNIT SYSTEM
   200
   201 				; ------------------------------------------------------------
   202
   203 21D4			.local	DOS						; UNIT
   204
   205 				; ------------------------------------------------------------
   206
   207 = D014			PALNTSC	= $D014
   208
   209 				.endl							; UNIT DOS
   210
   211 				; ------------------------------------------------------------
   212
   213 21D4			.local	STRUTILS					; UNIT
   214
   215 				; ------------------------------------------------------------
   216
   217 				.endl							; UNIT STRUTILS
   218
   219 				; ------------------------------------------------------------
   220
   221 21D4			.local	SYSUTILS					; UNIT
   222
   223 				; ------------------------------------------------------------
   224
   225 = 0001			FAREADONLY	= $0001
   226 = 0002			FAHIDDEN	= $0002
   227 = 0004			FASYSFILE	= $0004
   228 = 0008			FAVOLUMEID	= $0008
   229 = 0010			FADIRECTORY	= $0010
   230 = 0020			FAARCHIVE	= $0020
   231 = 003F			FAANYFILE	= $003F
   232
   233 				.endl							; UNIT SYSUTILS
   234
   235 				; ------------------------------------------------------------
   236
   237 21D4			.local	ATARI						; UNIT
   238
   239 				; ------------------------------------------------------------
   240
   241 = 0012			RTCLOK	= $0012
   242 = 004D			ATRACT	= $004D
   243 = 0052			LMARGIN	= $0052
   244 = 0053			RMARGIN	= $0053
   245 = 0054			ROWCRS	= $0054
   246 = 0055			COLCRS	= $0055
   247 = 0057			DINDEX	= $0057
   248 = 0058			SAVMSC	= $0058
   249 = 006A			RAMTOP	= $006A
   250 = 0200			VDSLST	= $0200
   251 = 0230			SDLSTL	= $0230
   252 = 0290			TXTROW	= $0290
   253 = 0291			TXTCOL	= $0291
   254 = 0293			TINDEX	= $0293
   255 = 0294			TXTMSC	= $0294
   256 = 022F			SDMCTL	= $022F
   257 = 026F			GPRIOR	= $026F
   258 = 02F0			CRSINH	= $02F0
   259 = 02F3			CHACT	= $02F3
   260 = 02F4			CHBAS	= $02F4
   261 = 02FC			CH	= $02FC
   262 = 02C0			PCOLR0	= $02C0
   263 = 02C1			PCOLR1	= $02C1
   264 = 02C2			PCOLR2	= $02C2
   265 = 02C3			PCOLR3	= $02C3
   266 = 02C4			COLOR0	= $02C4
   267 = 02C5			COLOR1	= $02C5
   268 = 02C6			COLOR2	= $02C6
   269 = 02C7			COLOR3	= $02C7
   270 = 02C8			COLOR4	= $02C8
   271 = 02C8			COLBAKS	= $02C8
   272 = D000			HPOSP0	= $D000
   273 = D001			HPOSP1	= $D001
   274 = D002			HPOSP2	= $D002
   275 = D003			HPOSP3	= $D003
   276 = D004			HPOSM0	= $D004
   277 = D005			HPOSM1	= $D005
   278 = D006			HPOSM2	= $D006
   279 = D007			HPOSM3	= $D007
   280 = D008			SIZEP0	= $D008
   281 = D009			SIZEP1	= $D009
   282 = D00A			SIZEP2	= $D00A
   283 = D00B			SIZEP3	= $D00B
   284 = D00C			SIZEM	= $D00C
   285 = D00D			GRAFP0	= $D00D
   286 = D00E			GRAFP1	= $D00E
   287 = D00F			GRAFP2	= $D00F
   288 = D010			GRAFP3	= $D010
   289 = D011			GRAFM	= $D011
   290 = D004			P0PF	= $D004
   291 = D014			PAL	= $D014
   292 = D012			COLPM0	= $D012
   293 = D013			COLPM1	= $D013
   294 = D014			COLPM2	= $D014
   295 = D015			COLPM3	= $D015
   296 = D016			COLPF0	= $D016
   297 = D017			COLPF1	= $D017
   298 = D018			COLPF2	= $D018
   299 = D019			COLPF3	= $D019
   300 = D01A			COLBK	= $D01A
   301 = D01B			PRIOR	= $D01B
   302 = D01D			GRACTL	= $D01D
   303 = D01E			HITCLR	= $D01E
   304 = D200			AUDF1	= $D200
   305 = D201			AUDC1	= $D201
   306 = D202			AUDF2	= $D202
   307 = D203			AUDC2	= $D203
   308 = D204			AUDF3	= $D204
   309 = D205			AUDC3	= $D205
   310 = D206			AUDF4	= $D206
   311 = D207			AUDC4	= $D207
   312 = D208			AUDCTL	= $D208
   313 = D20F			SKSTAT	= $D20F
   314 = D301			PORTB	= $D301
   315 = D400			DMACTL	= $D400
   316 = D401			CHACTL	= $D401
   317 = D402			DLISTL	= $D402
   318 = D404			HSCROL	= $D404
   319 = D405			VSCROL	= $D405
   320 = D407			PMBASE	= $D407
   321 = D409			CHBASE	= $D409
   322 = D40A			WSYNC	= $D40A
   323 = D40B			VCOUNT	= $D40B
   324 = D40C			PENH	= $D40C
   325 = D40D			PENV	= $D40D
   326 = D40E			NMIEN	= $D40E
   327
   328 				.endl							; UNIT ATARI
   329
   330 				; ------------------------------------------------------------
   331
   332 21D4			.local	CRT						; UNIT
   333
   334 21D4			.local	READKEY						; FUNCTION | ASSEMBLER
   335
   336 				; ---------------------  ASM Block 063  ---------------------
   337
   338 21D4 8A 48			txa:pha
   339
   340 21D6 20 21 21			@GetKey
   341
   342 21D9 8D D2 22			sta Result
   343
   344 21DC 68 AA			pla:tax
   345
   346 21DE			@exit
   347
   348 				; ------------------------------------------------------------
   349
   350 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   351 				; as Pointer
   352
   353 21DE E8				inx						; add bx, 1
   354 21DF AD D2 22 95 98		mva RESULT :STACKORIGIN,x
   355
   356 					.ifdef @new
   357 					@FreeMem #@VarData #@VarDataSize
   358 					eif
   359
   360 				; ------------------------------------------------------------
   361
   362 = 22D2			RESULT	= DATAORIGIN+$000C
   363
   364 = 22D2			@VarData	= RESULT
   365 = 0001			@VarDataSize	= 1
   366
   367 21E4 60				rts						; ret
   368 				.endl
   369
   370 				; ------------------------------------------------------------
   371
   372 = 22D1			TEXTATTR	= DATAORIGIN+$000B
   373 = D01F			CONSOL	= $D01F
   374 = 0000			CN_START_SELECT_OPTION	= $0000
   375 = 0001			CN_SELECT_OPTION	= $0001
   376 = 0002			CN_START_OPTION	= $0002
   377 = 0003			CN_OPTION	= $0003
   378 = 0004			CN_START_SELECT	= $0004
   379 = 0005			CN_SELECT	= $0005
   380 = 0006			CN_START	= $0006
   381 = 0007			CN_NONE	= $0007
   382 = 0000			BW40	= $0000
   383 = 0001			CO40	= $0001
   384 = 0002			BW80	= $0002
   385 = 0003			CO80	= $0003
   386 = 0007			MONO	= $0007
   387 = 0001			C40	= $0001
   388 = 0003			C80	= $0003
   389 = 0000			BLACK	= $0000
   390 = 0001			BLUE	= $0001
   391 = 0002			GREEN	= $0002
   392 = 0003			CYAN	= $0003
   393 = 0004			RED	= $0004
   394 = 0005			MAGENTA	= $0005
   395 = 0006			BROWN	= $0006
   396 = 0007			LIGHTGRAY	= $0007
   397 = 0008			DARKGRAY	= $0008
   398 = 0009			LIGHTBLUE	= $0009
   399 = 000A			LIGHTGREEN	= $000A
   400 = 000B			LIGHTCYAN	= $000B
   401 = 000C			LIGHTRED	= $000C
   402 = 000D			LIGHTMAGENTA	= $000D
   403 = 000E			YELLOW	= $000E
   404 = 000F			WHITE	= $000F
   405 = 0080			BLINK	= $0080
   406
   407 				.endl							; UNIT CRT
   408
   409 21E5			.local	MAINPROC					; PROCEDURE
   410
   411 				; optimize FAIL (100, examples\input.pas), line = 18
   412 					@print #$7D
   412 				 LDY# $7D\ JSR @PRINT
   412 21E5 A0 7D		 LDY# $7D
   412 21E7 20 8E 20		 JSR @PRINT
   413
   414 				; optimize FAIL (100, examples\input.pas), line = 19
   415 					@printSTRING #CODEORIGIN+$000D
   415 				 LDY> CODEORIGIN+$000D\ LDA< CODEORIGIN+$000D\ JSR @PRINTSTRING
   415 21EA A0 20		 LDY> CODEORIGIN+$000D
   415 21EC A9 0D		 LDA< CODEORIGIN+$000D
   415 21EE 20 97 20		 JSR @PRINTSTRING
   416 21F1 20 89 20			@printEOL
   417
   418 				; optimize FAIL (100, examples\input.pas), line = 20
   419 					@printSTRING #CODEORIGIN+$0020
   419 				 LDY> CODEORIGIN+$0020\ LDA< CODEORIGIN+$0020\ JSR @PRINTSTRING
   419 21F4 A0 20		 LDY> CODEORIGIN+$0020
   419 21F6 A9 20		 LDA< CODEORIGIN+$0020
   419 21F8 20 97 20		 JSR @PRINTSTRING
   420 21FB 20 89 20			@printEOL
   421
   422 				; optimize FAIL (100, examples\input.pas), line = 21
   423 					@printSTRING #CODEORIGIN+$003C
   423 				 LDY> CODEORIGIN+$003C\ LDA< CODEORIGIN+$003C\ JSR @PRINTSTRING
   423 21FE A0 20		 LDY> CODEORIGIN+$003C
   423 2200 A9 3C		 LDA< CODEORIGIN+$003C
   423 2202 20 97 20		 JSR @PRINTSTRING
   424 2205 20 89 20			@printEOL
   425
   426 				; optimize FAIL (100, examples\input.pas), line = 22
   427 					@printSTRING #CODEORIGIN+$0054
   427 				 LDY> CODEORIGIN+$0054\ LDA< CODEORIGIN+$0054\ JSR @PRINTSTRING
   427 2208 A0 20		 LDY> CODEORIGIN+$0054
   427 220A A9 54		 LDA< CODEORIGIN+$0054
   427 220C 20 97 20		 JSR @PRINTSTRING
   428 220F 20 89 20			@printEOL
   429
   430 				; optimize FAIL (100, examples\input.pas), line = 23
   431 					@printSTRING #CODEORIGIN+$0056
   431 				 LDY> CODEORIGIN+$0056\ LDA< CODEORIGIN+$0056\ JSR @PRINTSTRING
   431 2212 A0 20		 LDY> CODEORIGIN+$0056
   431 2214 A9 56		 LDA< CODEORIGIN+$0056
   431 2216 20 97 20		 JSR @PRINTSTRING
   432 2219 20 89 20			@printEOL
   433 221C 20 DD 20			@getline
   434 					@move #@buf #adr.NAME #14
   434 				 MWA #@BUF @MOVE.PTR1\ MWA #ADR.NAME @MOVE.PTR2\ MWA #14 @MOVE.PTR3\ JSR @MOVE
   434 221F A9 00 85 86 A9 04 +  MWA #@BUF @MOVE.PTR1
   434 2227 A9 D4 85 8A A9 22 +  MWA #ADR.NAME @MOVE.PTR2
   434 222F A9 0E 85 82 A9 00 +  MWA #14 @MOVE.PTR3
   434 2237 20 5C 21		 JSR @MOVE
   435
   436 				; optimize FAIL (100, examples\input.pas), line = 25
   437 					@printSTRING #CODEORIGIN+$0053
   437 				 LDY> CODEORIGIN+$0053\ LDA< CODEORIGIN+$0053\ JSR @PRINTSTRING
   437 223A A0 20		 LDY> CODEORIGIN+$0053
   437 223C A9 53		 LDA< CODEORIGIN+$0053
   437 223E 20 97 20		 JSR @PRINTSTRING
   438 2241 20 89 20			@printEOL
   439
   440 				; optimize FAIL (100, examples\input.pas), line = 26
   441 					@printSTRING #CODEORIGIN+$0068
   441 				 LDY> CODEORIGIN+$0068\ LDA< CODEORIGIN+$0068\ JSR @PRINTSTRING
   441 2244 A0 20		 LDY> CODEORIGIN+$0068
   441 2246 A9 68		 LDA< CODEORIGIN+$0068
   441 2248 20 97 20		 JSR @PRINTSTRING
   442 224B 20 89 20			@printEOL
   443 224E 20 DD 20			@getline
   444 					@move #@buf #adr.SURNAME #22
   444 				 MWA #@BUF @MOVE.PTR1\ MWA #ADR.SURNAME @MOVE.PTR2\ MWA #22 @MOVE.PTR3\ JSR @MOVE
   444 2251 A9 00 85 86 A9 04 +  MWA #@BUF @MOVE.PTR1
   444 2259 A9 E2 85 8A A9 22 +  MWA #ADR.SURNAME @MOVE.PTR2
   444 2261 A9 16 85 82 A9 00 +  MWA #22 @MOVE.PTR3
   444 2269 20 5C 21		 JSR @MOVE
   445
   446 				; optimize FAIL (100, examples\input.pas), line = 28
   447 					@printSTRING #CODEORIGIN+$0053
   447 				 LDY> CODEORIGIN+$0053\ LDA< CODEORIGIN+$0053\ JSR @PRINTSTRING
   447 226C A0 20		 LDY> CODEORIGIN+$0053
   447 226E A9 53		 LDA< CODEORIGIN+$0053
   447 2270 20 97 20		 JSR @PRINTSTRING
   448 2273 20 89 20			@printEOL
   449
   450 				; optimize FAIL (100, examples\input.pas), line = 29
   451 					@printSTRING #CODEORIGIN+$007D
   451 				 LDY> CODEORIGIN+$007D\ LDA< CODEORIGIN+$007D\ JSR @PRINTSTRING
   451 2276 A0 20		 LDY> CODEORIGIN+$007D
   451 2278 A9 7D		 LDA< CODEORIGIN+$007D
   451 227A 20 97 20		 JSR @PRINTSTRING
   452
   453 				; optimize FAIL (100, examples\input.pas), line = 30
   454 					@printSTRING NAME
   454 				 LDY NAME+1\ LDA NAME\ JSR @PRINTSTRING
   454 227D AC C3 22		 LDY NAME+1
   454 2280 AD C2 22		 LDA NAME
   454 2283 20 97 20		 JSR @PRINTSTRING
   455
   456 				; optimize FAIL (100, examples\input.pas), line = 31
   457 					@print #$20
   457 				 LDY# $20\ JSR @PRINT
   457 2286 A0 20		 LDY# $20
   457 2288 20 8E 20		 JSR @PRINT
   458
   459 				; optimize FAIL (100, examples\input.pas), line = 32
   460 					@printSTRING SURNAME
   460 				 LDY SURNAME+1\ LDA SURNAME\ JSR @PRINTSTRING
   460 228B AC C5 22		 LDY SURNAME+1
   460 228E AD C4 22		 LDA SURNAME
   460 2291 20 97 20		 JSR @PRINTSTRING
   461 2294 20 89 20			@printEOL
   462
   463 				; optimize FAIL (100, examples\input.pas), line = 33
   464 					@printSTRING #CODEORIGIN+$0053
   464 				 LDY> CODEORIGIN+$0053\ LDA< CODEORIGIN+$0053\ JSR @PRINTSTRING
   464 2297 A0 20		 LDY> CODEORIGIN+$0053
   464 2299 A9 53		 LDA< CODEORIGIN+$0053
   464 229B 20 97 20		 JSR @PRINTSTRING
   465 229E 20 89 20			@printEOL
   466
   467 				; optimize FAIL ('CRT.READKEY', examples\input.pas), line = 34
   468 22A1 20 D4 21			jsr CRT.READKEY
   469 22A4 B5 98 8D D3 22		mva :STACKORIGIN,x KEY
   470 22A9 CA				dex
   471 22AA			@exit
   472 					.ifdef @new
   473 					@FreeMem #@VarData #@VarDataSize
   474 					eif
   475 22AA 60				rts						; ret
   476 				.endl
   477 22AB			l_0090
   478
   479 				; optimize FAIL ('MAINPROC', examples\input.pas), line = 38
   480 22AB 20 E5 21			jsr MAINPROC
   481
   482 				; ------------------------------------------------------------
   483
   484 = 22D3			KEY	= DATAORIGIN+$000D
   485 = 22D4			adr.NAME	= DATAORIGIN+$000E
   486 22AE			.var NAME	= adr.NAME .word
   487 = 22E2			adr.SURNAME	= DATAORIGIN+$001C
   488 22AE			.var SURNAME	= adr.SURNAME .word
   489 22AE			@exit
   490
   491 22AE A2 00		@halt	ldx #0
   492 22B0 9A				txs
   493
   494 22B1 60				rts
   495
   496 				; ------------------------------------------------------------
   497
   498 22B2 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   499
   500 				; ------------------------------------------------------------
   501
   502 22C2			.local	@DEFINES
   503 22C2			ATARI
   504 				.endl
   505
   506 = 22C2 D4 22		NAME
   506 = 22C4 E2 22		SURNAME
   506 				.endl							; MAIN
   507
   508 				; ------------------------------------------------------------
   509 				; ------------------------------------------------------------
   510
   511 				.macro	UNITINITIALIZATION
   512 				
   513 					.ifdef MAIN.SYSTEM.@UnitInit
   514 					jsr MAIN.SYSTEM.@UnitInit
   515 					eif
   516 				
   517 					.ifdef MAIN.DOS.@UnitInit
   518 					jsr MAIN.DOS.@UnitInit
   519 					eif
   520 				
   521 					.ifdef MAIN.STRUTILS.@UnitInit
   522 					jsr MAIN.STRUTILS.@UnitInit
   523 					eif
   524 				
   525 					.ifdef MAIN.SYSUTILS.@UnitInit
   526 					jsr MAIN.SYSUTILS.@UnitInit
   527 					eif
   528 				
   529 					.ifdef MAIN.ATARI.@UnitInit
   530 					jsr MAIN.ATARI.@UnitInit
   531 					eif
   532 				
   533 					.ifdef MAIN.CRT.@UnitInit
   534 					jsr MAIN.CRT.@UnitInit
   535 					eif
   536 				.endm
   537
   538 				; ------------------------------------------------------------
   539
   540 					ift .SIZEOF(MAIN.SYSTEM) > 0
   541 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   541 				SYSTEM: $21D0..$21D3
   542 					eif
   543
   544 					ift .SIZEOF(MAIN.DOS) > 0
   545 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
   546 					eif
   547
   548 					ift .SIZEOF(MAIN.STRUTILS) > 0
   549 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
   550 					eif
   551
   552 					ift .SIZEOF(MAIN.SYSUTILS) > 0
   553 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
   554 					eif
   555
   556 					ift .SIZEOF(MAIN.ATARI) > 0
   557 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   558 					eif
   559
   560 					ift .SIZEOF(MAIN.CRT) > 0
   561 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   561 				CRT: $21D4..$21E4
   562 					eif
   563
   564 					.print 'CODE: ',CODEORIGIN,'..',*-1
   564 				CODE: $2000..$22C5
   565
   566 				; ------------------------------------------------------------
   567
   568 22C6			DATAORIGIN
   569 22C6 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
   570
   571 = 0006			VARINITSIZE	= *-DATAORIGIN
   572 = 0032			VARDATASIZE	= 50
   573
   574 = 22F8			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   575
   576 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   576 				DATA: $22C6..$22F8
   577
   578 02E0-02E1> B1 21			run START
   579
   580 				; ------------------------------------------------------------
   581
   582 				.macro	STATICDATA
   583 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $11 $45 $66  $66 $65 $63 $74 $75 $73 $20 $65
   584 				.by  $78 $61 $6D $70 $6C $65 $3A $00  $1A $53 $74 $72 $69 $6E $67 $20  $69 $6E $70 $75 $74 $20 $64 $65
   585 				.by  $6D $6F $6E $73 $74 $72 $61 $74  $69 $6F $6E $00 $16 $75 $73 $69  $6E $67 $20 $49 $6E $70 $75 $74
   586 				.by  $53 $20 $70 $72 $6F $63 $65 $64  $75 $72 $65 $00 $00 $00 $10 $57  $68 $61 $74 $73 $20 $79 $6F $75
   587 				.by  $72 $20 $6E $61 $6D $65 $3F $00  $13 $57 $68 $61 $74 $73 $20 $79  $6F $75 $72 $20 $73 $75 $72 $6E
   588 				.by  $61 $6D $65 $3F $00 $0A $54 $68  $61 $6E $6B $20 $79 $6F $75 $2C  $00
   589 				.endm
   590
   591 					end
