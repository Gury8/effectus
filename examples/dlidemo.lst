mads 2.1.0 build 8 (23 Dec 19)
   388 					opt l+
   101
   102 				.print 'ZPAGE: ',fxptr,'..',zpend-1
   102 				ZPAGE: $0080..$00D7
   103
   104 				.print 'RTLIB: ',RTLIB,'..',*-1
   104 				RTLIB: $2000..$2098
   105
   106 				; ------------------------------------------------------------
   107
   108 2099			START
   109 2099 BA				tsx
   110 209A 8E 45 21			stx MAIN.@halt+1
   111
   112 					.ifdef fmulinit
   113 					fmulinit
   114 					eif
   115
   116 = 0000			VLEN	= VARDATASIZE-VARINITSIZE
   117 = 21A7			VADR	= DATAORIGIN+VARINITSIZE
   118
   119 					ift VADR > $BFFF
   120 					ert 'Invalid memory address range ',VADR
   121 					eli (VLEN>0) && (VLEN<=256)
   122 					ldx #256-VLEN
   123 					lda #0
   124 					sta:rne VADR+VLEN-256,x+
   125 					eli VLEN>0
   126 					@fill #VADR #VLEN #0
   127 					eif
   128
   129 					.ifdef MAIN.@DEFINES.ROMOFF
   130 					icl 'atari\romoff.asm'
   131 					.endif
   132
   133 209D A9 A7 85 82 A9 21 + 	mwa #PROGRAMSTACK psptr
   134
   135 20A5 A2 0F			ldx #$0f					; DOS II+/D ParamStr
   136 20A7 BD 40 03 9D 48 21 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   137
   138 20B0 E8				inx						; X = 0
   139 20B1 86 90			stx bp						; BP = 0
   140
   141 20B3 8E 08 D2			stx audctl					; reset POKEY
   142 20B6 A9 03			lda #3
   143 20B8 8D 0F D2			sta skctl
   144
   145 20BB CA				dex						; X = 255
   146
   147 20BC				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: dlidemo.a65]
   148
   149 20BC			.local	MAIN						; PROCEDURE
   150
   151 20BC 4C 41 21			jmp l_0007
   152
   153 				; ------------------------------------------------------------
   154
   155 20BF			.local	SYSTEM						; UNIT
   156
   157 				; ------------------------------------------------------------
   158
   159 = 0101			__PORTB_BANKS	= $0101
   160 = 0648			M_PI_2	= $0648
   161 = 0192			D_PI_2	= $0192
   162 = 0004			D_PI_180	= $04
   163 = 0000			MGTIA	= $00
   164 = 0080			MVBXE	= $80
   165 = 0000			VBXE_XDLADR	= $00
   166 = 0100			VBXE_BCBADR	= $0100
   167 = 1000			VBXE_MAPADR	= $1000
   168 = 5000			VBXE_OVRADR	= $5000
   169 = B000			VBXE_WINDOW	= $B000
   170 = 0000			IDLI	= $00
   171 = 0001			IVBL	= $01
   172 = 00FE			CH_DELCHR	= $FE
   173 = 009B			CH_ENTER	= $9B
   174 = 001B			CH_ESC	= $1B
   175 = 001C			CH_CURS_UP	= $1C
   176 = 001D			CH_CURS_DOWN	= $1D
   177 = 001E			CH_CURS_LEFT	= $1E
   178 = 001F			CH_CURS_RIGHT	= $1F
   179 = 007F			CH_TAB	= $7F
   180 = 009B			CH_EOL	= $9B
   181 = 007D			CH_CLR	= $7D
   182 = 00FD			CH_BELL	= $FD
   183 = 007E			CH_DEL	= $7E
   184 = 009C			CH_DELLINE	= $9C
   185 = 009D			CH_INSLINE	= $9D
   186 = 0000			COLOR_BLACK	= $00
   187 = 000E			COLOR_WHITE	= $0E
   188 = 0032			COLOR_RED	= $32
   189 = 0096			COLOR_CYAN	= $96
   190 = 0068			COLOR_VIOLET	= $68
   191 = 00C4			COLOR_GREEN	= $C4
   192 = 0074			COLOR_BLUE	= $74
   193 = 00EE			COLOR_YELLOW	= $EE
   194 = 0028			COLOR_ORANGE	= $28
   195 = 00E4			COLOR_BROWN	= $E4
   196 = 003C			COLOR_LIGHTRED	= $3C
   197 = 0004			COLOR_GRAY1	= $04
   198 = 0006			COLOR_GRAY2	= $06
   199 = 000A			COLOR_GRAY3	= $0A
   200 = 00CC			COLOR_LIGHTGREEN	= $CC
   201 = 007C			COLOR_LIGHTBLUE	= $7C
   202 = 0004			FMOPENREAD	= $04
   203 = 0008			FMOPENWRITE	= $08
   204 = 0009			FMOPENAPPEND	= $09
   205 = 000C			FMOPENREADWRITE	= $0C
   206 = 215C			SCREENWIDTH	= DATAORIGIN+$0000
   207 = 215E			SCREENHEIGHT	= DATAORIGIN+$0002
   208 = 2160			DATESEPARATOR	= DATAORIGIN+$0004
   209 = D014			TVSYSTEM	= $D014
   210 = 02C0			adr.PALETTE	= $02C0
   211 20BF			.var PALETTE	= adr.PALETTE .word
   212 = D012			adr.HPALETTE	= $D012
   213 20BF			.var HPALETTE	= adr.HPALETTE .word
   214 = 2161			FILEMODE	= DATAORIGIN+$0005
   215 = 2162			GRAPHMODE	= DATAORIGIN+$0006
   216 = 2163			IORESULT	= DATAORIGIN+$0007
   217 = 2164			EOLN	= DATAORIGIN+$0008
   218 = 2165			RNDSEED	= DATAORIGIN+$0009
   219
   220 = 20BF C0 02		PALETTE
   220 = 20C1 12 D0		HPALETTE
   220 				.endl							; UNIT SYSTEM
   221
   222 				; ------------------------------------------------------------
   223
   224 20C3			.local	ATARI						; UNIT
   225
   226 				; ------------------------------------------------------------
   227
   228 = 0012			RTCLOK	= $12
   229 = 004D			ATRACT	= $4D
   230 = 0052			LMARGIN	= $52
   231 = 0053			RMARGIN	= $53
   232 = 0054			ROWCRS	= $54
   233 = 0055			COLCRS	= $55
   234 = 0057			DINDEX	= $57
   235 = 0058			SAVMSC	= $58
   236 = 0062			PALNTS	= $62
   237 = 006A			RAMTOP	= $6A
   238 = 0200			VDSLST	= $0200
   239 = 0230			SDLSTL	= $0230
   240 = 0290			TXTROW	= $0290
   241 = 0291			TXTCOL	= $0291
   242 = 0293			TINDEX	= $0293
   243 = 0294			TXTMSC	= $0294
   244 = 022F			SDMCTL	= $022F
   245 = 026F			GPRIOR	= $026F
   246 = 02F0			CRSINH	= $02F0
   247 = 02F3			CHACT	= $02F3
   248 = 02F4			CHBAS	= $02F4
   249 = 02FC			CH	= $02FC
   250 = 02C0			PCOLR0	= $02C0
   251 = 02C1			PCOLR1	= $02C1
   252 = 02C2			PCOLR2	= $02C2
   253 = 02C3			PCOLR3	= $02C3
   254 = 02C4			COLOR0	= $02C4
   255 = 02C5			COLOR1	= $02C5
   256 = 02C6			COLOR2	= $02C6
   257 = 02C7			COLOR3	= $02C7
   258 = 02C8			COLOR4	= $02C8
   259 = 02C8			COLBAKS	= $02C8
   260 = D000			HPOSP0	= $D000
   261 = D001			HPOSP1	= $D001
   262 = D002			HPOSP2	= $D002
   263 = D003			HPOSP3	= $D003
   264 = D004			HPOSM0	= $D004
   265 = D005			HPOSM1	= $D005
   266 = D006			HPOSM2	= $D006
   267 = D007			HPOSM3	= $D007
   268 = D008			SIZEP0	= $D008
   269 = D009			SIZEP1	= $D009
   270 = D00A			SIZEP2	= $D00A
   271 = D00B			SIZEP3	= $D00B
   272 = D00C			SIZEM	= $D00C
   273 = D00D			GRAFP0	= $D00D
   274 = D00E			GRAFP1	= $D00E
   275 = D00F			GRAFP2	= $D00F
   276 = D010			GRAFP3	= $D010
   277 = D011			GRAFM	= $D011
   278 = D004			P0PF	= $D004
   279 = D014			PAL	= $D014
   280 = D012			COLPM0	= $D012
   281 = D013			COLPM1	= $D013
   282 = D014			COLPM2	= $D014
   283 = D015			COLPM3	= $D015
   284 = D016			COLPF0	= $D016
   285 = D017			COLPF1	= $D017
   286 = D018			COLPF2	= $D018
   287 = D019			COLPF3	= $D019
   288 = D01A			COLBK	= $D01A
   289 = D01B			PRIOR	= $D01B
   290 = D01D			GRACTL	= $D01D
   291 = D01E			HITCLR	= $D01E
   292 = D200			AUDF1	= $D200
   293 = D201			AUDC1	= $D201
   294 = D202			AUDF2	= $D202
   295 = D203			AUDC2	= $D203
   296 = D204			AUDF3	= $D204
   297 = D205			AUDC3	= $D205
   298 = D206			AUDF4	= $D206
   299 = D207			AUDC4	= $D207
   300 = D208			AUDCTL	= $D208
   301 = D20F			SKSTAT	= $D20F
   302 = D301			PORTB	= $D301
   303 = D400			DMACTL	= $D400
   304 = D401			CHACTL	= $D401
   305 = D402			DLISTL	= $D402
   306 = D404			HSCROL	= $D404
   307 = D405			VSCROL	= $D405
   308 = D407			PMBASE	= $D407
   309 = D409			CHBASE	= $D409
   310 = D40A			WSYNC	= $D40A
   311 = D40B			VCOUNT	= $D40B
   312 = D40C			PENH	= $D40C
   313 = D40D			PENV	= $D40D
   314 = D40E			NMIEN	= $D40E
   315
   316 				.endl							; UNIT ATARI
   317
   318 				; ------------------------------------------------------------
   319
   320 20C3			.local	CRT						; UNIT
   321
   322 				; ------------------------------------------------------------
   323
   324 = 2167			TEXTATTR	= DATAORIGIN+$000B
   325 = D01F			CONSOL	= $D01F
   326 = 0000			CN_START_SELECT_OPTION	= $00
   327 = 0001			CN_SELECT_OPTION	= $01
   328 = 0002			CN_START_OPTION	= $02
   329 = 0003			CN_OPTION	= $03
   330 = 0004			CN_START_SELECT	= $04
   331 = 0005			CN_SELECT	= $05
   332 = 0006			CN_START	= $06
   333 = 0007			CN_NONE	= $07
   334 = 0000			BW40	= $00
   335 = 0001			CO40	= $01
   336 = 0002			BW80	= $02
   337 = 0003			CO80	= $03
   338 = 0007			MONO	= $07
   339 = 0001			C40	= $01
   340 = 0003			C80	= $03
   341 = 0000			BLACK	= $00
   342 = 0001			BLUE	= $01
   343 = 0002			GREEN	= $02
   344 = 0003			CYAN	= $03
   345 = 0004			RED	= $04
   346 = 0005			MAGENTA	= $05
   347 = 0006			BROWN	= $06
   348 = 0007			LIGHTGRAY	= $07
   349 = 0008			DARKGRAY	= $08
   350 = 0009			LIGHTBLUE	= $09
   351 = 000A			LIGHTGREEN	= $0A
   352 = 000B			LIGHTCYAN	= $0B
   353 = 000C			LIGHTRED	= $0C
   354 = 000D			LIGHTMAGENTA	= $0D
   355 = 000E			YELLOW	= $0E
   356 = 000F			WHITE	= $0F
   357 = 0080			BLINK	= $80
   358
   359 				.endl							; UNIT CRT
   360
   361 				; ------------------------------------------------------------
   362
   363 20C3			.local	TYPES						; UNIT
   364
   365 				; ------------------------------------------------------------
   366
   367 				.endl							; UNIT TYPES
   368
   369 				; ------------------------------------------------------------
   370
   371 20C3			.local	GRAPH						; UNIT
   372
   373 20C3			.local	INITGRAPH_0068					; PROCEDURE | OVERLOAD
   374
   375 				; ------------------------------------------------------------
   376
   377 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   378 				; as Pointer
   379 20C3 B5 98 8D 85 21		mva :STACKORIGIN,x MODE
   380 20C8 CA				dex
   381
   382 				; ---------------------  ASM Block 060  ---------------------
   383
   384
   385 20C9 8A 48			txa:pha
   386
   387 20CB AD 85 21			lda mode
   388 20CE 8D 62 21			sta MAIN.SYSTEM.GraphMode
   389 20D1 29 0F			and #$0f
   390 20D3 A8				tay
   391
   392 20D4 A2 60			ldx #$60		; 6*16
   393 20D6 AD 85 21			lda mode		; %00010000 with text window
   394 20D9 29 10			and #$10
   395 20DB 49 10			eor #$10
   396 20DD 09 02			ora #2			; read
   397
   398 					.nowarn @GRAPHICS
   398 20DF 20 31 20		 JSR @GRAPHICS
   399
   400 20E2 8C 70 21			sty GraphResult
   401
   402
   403 					.ifdef MAIN.@DEFINES.ROMOFF
   404 					inc portb
   405 					.endif
   406
   407 = EE6D			tlshc	equ $ee6d
   408
   409 20E5 A6 57			ldx dindex
   410 20E7 BC 6D EE			ldy tlshc,x
   411 20EA A9 05			lda #5
   412 20EC 0A			shift	asl @
   413 20ED 88				dey
   414 20EE D0 FC			bne shift
   415
   416 20F0 8D 84 21			sta SCANLINE_WIDTH
   417
   418 				; Fox/TQA
   419
   420 = 0057			dindex	equ $57
   421 = EE7D			tmccn	equ $ee7d
   422 = EE8D			tmrcn	equ $ee8d
   423
   424 20F3 A6 57			ldx dindex
   425 20F5 BD 7D EE			lda tmccn,x
   426 20F8 BC 8D EE			ldy tmrcn,x
   427 20FB A2 00			ldx #0
   428 20FD C9 40			cmp #<320
   429 20FF D0 01 E8			sne:inx
   430
   431 				; X:A = horizontal resolution
   432 				; Y = vertical resolution
   433
   434 2102 20 6B 20			@SCREENSIZE
   435
   436 					.ifdef MAIN.@DEFINES.ROMOFF
   437 					dec portb
   438 					.endif
   439
   440 2105 68 AA			pla:tax
   441
   442
   443 				; optimize OK (GRAPH), line = 132
   444
   445 2107 A5 58 8D 82 21		mva ATARI.SAVMSC VIDEORAM
   446 210C A5 59 8D 83 21		mva ATARI.SAVMSC+1 VIDEORAM+1
   447
   448 				; ------------------------------------------------------------
   449
   450 = 2185			MODE	= DATAORIGIN+$0029
   451
   452 = 2185			@VarData	= MODE
   453 = 0001			@VarDataSize	= 1
   454
   455 2111			@exit
   456 					.ifdef @new
   457 					lda <@VarData
   458 					sta :ztmp
   459 					lda >@VarData
   460 					ldy #@VarDataSize-1
   461 					jmp @FreeMem
   462 					eif
   463 2111 60				rts						; ret
   464 				.endl
   465
   466 				; ------------------------------------------------------------
   467
   468 = 0080			CURRENTDRIVER	= $80
   469 = 0000			DETECT	= $00
   470 = 0001			CGA	= $01
   471 = 0002			MCGA	= $02
   472 = 0003			EGA	= $03
   473 = 0004			EGA64	= $04
   474 = 0005			EGAMONO	= $05
   475 = 0006			LOWRES	= $06
   476 = 0007			HERCMONO	= $07
   477 = 0009			VGA	= $09
   478 = 000A			VESA	= $0A
   479 = 000B			D1BIT	= $0B
   480 = 000C			D2BIT	= $0C
   481 = 000D			D4BIT	= $0D
   482 = 000E			D6BIT	= $0E
   483 = 000F			D8BIT	= $0F
   484 = 0010			D12BIT	= $10
   485 = 0018			M640X400	= $18
   486 = 0018			M640X480	= $18
   487 = 0001			GROK	= $01
   488 = 00FF			GRNOINITGRAPH	= $FF
   489 = 00FE			GRNOTDETECTED	= $FE
   490 = 00FD			GRFILENOTFOUND	= $FD
   491 = 00FC			GRINVALIDDRIVER	= $FC
   492 = 00FB			GRNOLOADMEM	= $FB
   493 = 00FA			GRNOSCANMEM	= $FA
   494 = 00F9			GRNOFLOODMEM	= $F9
   495 = 00F8			GRFONTNOTFOUND	= $F8
   496 = 00F7			GRNOFONTMEM	= $F7
   497 = 00F6			GRINVALIDMODE	= $F6
   498 = 00F5			GRERROR	= $F5
   499 = 00F4			GRIOERROR	= $F4
   500 = 00F3			GRINVALIDFONT	= $F3
   501 = 00F2			GRINVALIDFONTNUM	= $F2
   502 = 00EE			GRINVALIDVERSION	= $EE
   503 = 0000			CGAC0	= $00
   504 = 0001			CGAC1	= $01
   505 = 0002			CGAC2	= $02
   506 = 0003			CGAC3	= $03
   507 = 0004			CGAHI	= $04
   508 = 0000			MCGAC0	= $00
   509 = 0001			MCGAC1	= $01
   510 = 0002			MCGAC2	= $02
   511 = 0003			MCGAC3	= $03
   512 = 0004			MCGAMED	= $04
   513 = 0005			MCGAHI	= $05
   514 = 0000			EGALO	= $00
   515 = 0001			EGAHI	= $01
   516 = 0000			EGA64LO	= $00
   517 = 0001			EGA64HI	= $01
   518 = 0003			EGAMONOHI	= $03
   519 = 000A			VGALO	= $0A
   520 = 001F			VGAMED	= $1F
   521 = 0018			VGAHI	= $18
   522 = 2168			WIN_LEFT	= DATAORIGIN+$000C
   523 = 216A			WIN_RIGHT	= DATAORIGIN+$000E
   524 = 216C			WIN_TOP	= DATAORIGIN+$0010
   525 = 216E			WIN_BOTTOM	= DATAORIGIN+$0012
   526 = 2170			GRAPHRESULT	= DATAORIGIN+$0014
   527 = 2171			GETCOLOR	= DATAORIGIN+$0015
   528 = 2172			adr.LASTARCCOORDS	= DATAORIGIN+$0016
   529 2112			.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
   530 = 2172			LASTARCCOORDS.X	= DATAORIGIN+$0016
   531 = 2174			LASTARCCOORDS.Y	= DATAORIGIN+$0018
   532 = 2176			LASTARCCOORDS.XSTART	= DATAORIGIN+$001A
   533 = 2178			LASTARCCOORDS.YSTART	= DATAORIGIN+$001C
   534 = 217A			LASTARCCOORDS.XEND	= DATAORIGIN+$001E
   535 = 217C			LASTARCCOORDS.YEND	= DATAORIGIN+$0020
   536 = 217E			CURRENTX	= DATAORIGIN+$0022
   537 = 2180			CURRENTY	= DATAORIGIN+$0024
   538 = 2182			VIDEORAM	= DATAORIGIN+$0026
   539 = 2184			SCANLINE_WIDTH	= DATAORIGIN+$0028
   540
   541 = 2112 72 21		LASTARCCOORDS
   541 				.endl							; UNIT GRAPH
   542
   543 2114			.local	MAINPROC					; PROCEDURE
   544
   545 				; optimize OK (examples\dlidemo.pas), line = 27
   546
   547 2114 AD 58 21 8D 30 02		mva DL SDLSTL
   548 211A AD 59 21 8D 31 02		mva DL+1 SDLSTL+1
   549
   550 				; optimize OK (examples\dlidemo.pas), line = 28
   551
   552 2120 AD 5A 21 8D 00 02		mva DLI VDSLST
   553 2126 AD 5B 21 8D 01 02		mva DLI+1 VDSLST+1
   554
   555 				; optimize OK (examples\dlidemo.pas), line = 29
   556
   557 212C A9 C0 8D 0E D4		mva #$C0 NMIEN
   558
   559 				; --- WhileProlog
   560 2131			l_00D0
   561
   562 				; optimize OK (examples\dlidemo.pas), line = 30
   563
   564 2131 AD FC 02			lda CH
   565 2134 C9 FF			cmp #$FF
   566 2136 F0 F9			jeq l_00D0
   567
   568 				; optimize FAIL ('GRAPH.INITGRAPH_0068', examples\dlidemo.pas), line = 32
   569 2138 E8				inx
   570 2139 A9 00 95 98			mva #$00 :STACKORIGIN,x
   571 213D 20 C3 20			jsr GRAPH.INITGRAPH_0068
   572 2140			@exit
   573 					.ifdef @new
   574 					lda <@VarData
   575 					sta :ztmp
   576 					lda >@VarData
   577 					ldy #@VarDataSize-1
   578 					jmp @FreeMem
   579 					eif
   580 2140 60				rts						; ret
   581 				.endl
   582 2141			l_0007
   583
   584 				; optimize FAIL ('MAINPROC', examples\dlidemo.pas), line = 36
   585 2141 20 14 21			jsr MAINPROC
   586
   587 				; ------------------------------------------------------------
   588
   589 = 2186			adr.DL	= DATAORIGIN+$002A
   590 2144			.var DL	= adr.DL .word
   591 = 219C			adr.DLI	= DATAORIGIN+$0040
   592 2144			.var DLI	= adr.DLI .word
   593 = 02FC			CH	= $02FC
   594 = D40E			NMIEN	= $D40E
   595 = 0200			VDSLST	= $0200
   596 = 0230			SDLSTL	= $0230
   597 2144			@exit
   598
   599 2144 A2 00		@halt	ldx #0
   600 2146 9A				txs
   601 					.ifdef MAIN.@DEFINES.ROMOFF
   602 					inc portb
   603 					.endif
   604
   605 2147 60				rts
   606
   607 				; ------------------------------------------------------------
   608
   609 2148 00 00 00 00 00 00 + IOCB@COPY	:16 brk
   610
   611 				; ------------------------------------------------------------
   612
   613 2158			.local	@DEFINES
   614 2158			ATARI
   615 				.endl
   616
   617 = 2158 86 21		DL
   617 = 215A 9C 21		DLI
   617 				.endl							; MAIN
   618
   619 				; ------------------------------------------------------------
   620 				; ------------------------------------------------------------
   621
   622 				.macro	UNITINITIALIZATION
   623 				
   624 					.ifdef MAIN.SYSTEM.@UnitInit
   625 					jsr MAIN.SYSTEM.@UnitInit
   626 					eif
   627 				
   628 					.ifdef MAIN.ATARI.@UnitInit
   629 					jsr MAIN.ATARI.@UnitInit
   630 					eif
   631 				
   632 					.ifdef MAIN.CRT.@UnitInit
   633 					jsr MAIN.CRT.@UnitInit
   634 					eif
   635 				
   636 					.ifdef MAIN.TYPES.@UnitInit
   637 					jsr MAIN.TYPES.@UnitInit
   638 					eif
   639 				
   640 					.ifdef MAIN.GRAPH.@UnitInit
   641 					jsr MAIN.GRAPH.@UnitInit
   642 					eif
   643 				.endm
   644
   645 				; ------------------------------------------------------------
   646
   647 					ift .SIZEOF(MAIN.SYSTEM) > 0
   648 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   648 				SYSTEM: $20BF..$20C2
   649 					eif
   650
   651 					ift .SIZEOF(MAIN.ATARI) > 0
   652 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
   653 					eif
   654
   655 					ift .SIZEOF(MAIN.CRT) > 0
   656 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
   657 					eif
   658
   659 					ift .SIZEOF(MAIN.TYPES) > 0
   660 					.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
   661 					eif
   662
   663 					ift .SIZEOF(MAIN.GRAPH) > 0
   664 					.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
   664 				GRAPH: $20C3..$2113
   665 					eif
   666
   667 					.print 'CODE: ',CODEORIGIN,'..',*-1
   667 				CODE: $2000..$215B
   668
   669 				; ------------------------------------------------------------
   670
   671 215C			DATAORIGIN
   672 215C 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $27 $00  $00 $00 $17 $00 $00 $00 $00 $00
   673 2174 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $70 $70 $70 $42 $00 $40
   674 218C 02 02 02 02 F0 02 + .by  $02 $02 $02 $02 $F0 $02 $02 $02  $02 $02 $70 $70 $70 $41 $00 $20  $48 $A9 $DE $8D $0A $D4 $8D $18
   675 21A4 D0 68 40		.by  $D0 $68 $40
   676
   677 = 004B			VARINITSIZE	= *-DATAORIGIN
   678 = 004B			VARDATASIZE	= 75
   679
   680 = 21A7			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   681
   682 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   682 				DATA: $215C..$21A7
   683
   684 02E0-02E1> 99 20			run START
   685
   686 				; ------------------------------------------------------------
   687
   688 				.macro	STATICDATA
   689 				.endm
   690
   691 					end
