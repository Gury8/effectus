// Effectus auto-generated Mad Pascal source code listing
program scomparePrg;

uses
  Crt, StringUtils, SySutils, CIO;

var
  eff_var : byte;
  eff_cnt : byte;
  eff_string : string;
  strBuffer : string;
// Effectus example
// 
// Using SCompare function

procedure MAINProc;
var
  value : integer;
  key : byte;
  str2 : array[0..254] of bytestr2_byte_array
  str1 : array[0..254] of bytestr1_byte_array
  str3 : array[0..254] of byte = (5,65,84,65,82,73,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32);  // str3_byte_array
begin
  Writeln('');
  Write('str1=');

  eff_string:='';
  for eff_var:=1 to str1[0] do
    StrAdd(eff_string, chr(str1[eff_var]));

  Write(TrimRight(eff_string));
  Writeln;
  Write('str2=');

  eff_string:='';
  for eff_var:=1 to str2[0] do
    StrAdd(eff_string, chr(str2[eff_var]));

  Write(TrimRight(eff_string));
  Writeln;
  Write('str3=');

  eff_string:='';
  for eff_var:=1 to str3[0] do
    StrAdd(eff_string, chr(str3[eff_var]));

  Write(TrimRight(eff_string));
  Writeln;
  value:=-1;
  Write('Value of comparison by SCompare is:');
  Writeln;
  Write(value);  Writeln;
  Writeln('');
  if  value<0  then begin
  Write('str2 is greater than str1');
  Writeln;
  end
  else if  value=0  then begin
  Write('str1 and str2 are equal');
  Writeln;
  end
  else begin
  Write('str1 is greater than str2');
  Writeln;
  end;  // if
  Write('', eol, 'Again...', eol, '', eol, '');
  if -1 < 1 then begin
  Write('str2 is greater than str1');
  Writeln;
  end
  else if -1 = 2 then begin
  Write('str1 and str2 are equal');
  Writeln;
  end
  else begin
  Write('str1 is greater than str2');
  Writeln;
  end;  // if
  key:=Get(7);
  ReadKey;
end;

begin
  MAINProc;
end.
